#include <iostream>
#include <string>
#include <cstdlib> 
#include <time.h>
#include <chrono> 
#include <windows.h>     //Insert color
#include <sqlite3.h>     //Save data
#include <conio.h>       //_getch()
#include <iomanip>

using namespace std;

// Define maximum boxes

const int N = 32;

//Declare 1 box structure

struct box
{
    int attribute;   // 0 - not bomb, 1 - bomb
    int surrounded;  // tell the number of neighbour-boxes contain bomb
    int status;      // 0 - not opened, 1 - opened
    bool flagged;    // flag - true, not flag - false
};


// Create an array of boxes

box boxes[N][N];

// Functions needed

void setdefault();
bool hello(bool& is_new_game);
void show_rule();
void set_bombs(int bombs, int height, int width);
void update_surrounding(int y_located, int x_located);
int cal_3bd(int height, int width);
int draw(int height, int width, int game_mode, int hiscore, string cell);
string take_command(int height, int width, int thbd, int game_mode, int hiscore, string cell);
bool check_cell(string cmd, int height, int width);
string handleInput(string cell, int height, int width, int game_mode, int hiscore);
string move_with_arrow(string cell, int height, int width, int game_mode, int hiscore);
void open(int pos_x, int pos_y, int height, int width);
void reverse_open(int pos_x, int pos_y, int height, int width);
bool game_over(string cmd);
bool newgame();
bool save(int height, int width, int thbd, int time, int hiscore, int game_mode, int cases);
void showboard(int height, int width, int game_mode, int hiscore);
int receive_highscore(int game_mode);
bool manage_high_score(int score, int high_score, int game_mode);
void showHighScore();



//Added to change text color

string setcolor(unsigned short color)
{
    HANDLE hcon = GetStdHandle(STD_OUTPUT_HANDLE);
    SetConsoleTextAttribute(hcon, color);
    return "";
}



//MAIN

int main()
{

// Welcome user

    system("cls");
    std::cout << R"(
        
                                                                                                                               
__/\__     __/\__     __/\__     __/\__     __/\__     __/\__     __/\__     __/\__     __/\__     __/\__     __/\__     __/\__
\    /_____\    /_____\    /_____\    /_____\    /_____\    /_____\    /_____\    /_____\    /_____\    /_____\    /_____\    /
/_  _\_____/_  _\_____/_  _\_____/_  _\_____/_  _\_____/_  _\_____/_  _\_____/_  _\_____/_  _\_____/_  _\_____/_  _\_____/_  _\
  \/         \/         \/         \/         \/         \/         \/         \/         \/         \/         \/         \/  
                                                                                                                               
      __    __     _                            _                 _                                                            
     / / /\ \ \___| | ___ ___  _ __ ___   ___  | |_ ___     /\/\ (_)_ __   ___  _____      _____  ___ _ __   ___ _ __          
     \ \/  \/ / _ \ |/ __/ _ \| '_ ` _ \ / _ \ | __/ _ \   /    \| | '_ \ / _ \/ __\ \ /\ / / _ \/ _ \ '_ \ / _ \ '__|         
      \  /\  /  __/ | (_| (_) | | | | | |  __/ | || (_) | / /\/\ \ | | | |  __/\__ \\ V  V /  __/  __/ |_) |  __/ |            
       \/  \/ \___|_|\___\___/|_| |_| |_|\___|  \__\___/  \/    \/_|_| |_|\___||___/ \_/\_/ \___|\___| .__/ \___|_|            
                                                                                                     |_|                       
                                                                                                                               
__/\__     __/\__     __/\__     __/\__     __/\__     __/\__     __/\__     __/\__     __/\__     __/\__     __/\__     __/\__
\    /_____\    /_____\    /_____\    /_____\    /_____\    /_____\    /_____\    /_____\    /_____\    /_____\    /_____\    /
/_  _\_____/_  _\_____/_  _\_____/_  _\_____/_  _\_____/_  _\_____/_  _\_____/_  _\_____/_  _\_____/_  _\_____/_  _\_____/_  _\
  \/         \/         \/         \/         \/         \/         \/         \/         \/         \/         \/         \/  
                                                                                                                                                                                                                                                            

    )" << endl;
    std::cout << "Maximize your terminal for better experience" << endl;
    std::cout << "Press enter to continue: ";
    std::cin.ignore(1000, '\n');
    

//EXECUTES WHENEVER THE PROGRAM RUNS AND LOOPS IF is_new_game IS TRUE
    bool is_new_game = false;

    while (!hello(is_new_game))
    {
        cin.ignore(1000, '\n');
    }
    cin.ignore(1000, '\n');
    do
    {
        int board_height, board_width, bombs;
        int thbd;
        int saved_game_time = 0;
        int game_mode;
        
        //Set default 

        setdefault();

//Open data from last game if saved

        if (!is_new_game)
        {
            sqlite3* db;
            sqlite3_stmt *st;
            int value = 0;
            int exit = 0;
            int s_height;
            int s_width;
            int s_thbd; 
            int s_mode;
            exit = sqlite3_open("minesdata.db", &db);

            
            string sql1 = "SELECT * FROM minesdata WHERE column = ? AND row = ?;";

            int rt = sqlite3_prepare_v2(db, sql1.c_str(), -1, &st, NULL);

            if (rt == SQLITE_OK)
            {
                sqlite3_bind_int(st, 1, value);
                sqlite3_bind_int(st, 2, value);
                sqlite3_step(st);

                s_height = sqlite3_column_int(st, 6);
                s_width = sqlite3_column_int(st, 7);
                s_thbd = sqlite3_column_int(st, 8);
                saved_game_time = sqlite3_column_int(st, 9);
                s_mode = sqlite3_column_int(st, 11);
                sqlite3_finalize(st);
            }

            

            //This can be executed when the program first run or new the last user did not save the process

            if (s_height == 0)
            {
                is_new_game = true;
                std::cout << "No records of last game, press enter to continue: ";
                std::cin.ignore(1000, '\n');
                std::cout << endl;
            } 

            //If the data is saved succesfully
            //Assign the last game's data in to boxes

            if (s_height != 0)
            {
                
                board_height = s_height;
                board_width = s_width;
                thbd = s_thbd;
                game_mode = s_mode;
                is_new_game = false;        //change the value to skip the following part, go straight to play-time
                bombs = 0;

                std::cout << "Loading last record..." << endl;

                for (int i = 0; i < N; i++)
                {
                    for (int j = 0; j < N; j++)
                    {
                        int rc = sqlite3_prepare_v2(db, sql1.c_str(), -1, &st, NULL);
                        if (rc == SQLITE_OK)
                        {
                            
                            sqlite3_bind_int(st, 1, i);
                            sqlite3_bind_int(st, 2, j);
                            sqlite3_step(st);
                            boxes[j][i].attribute = sqlite3_column_int(st, 2);
                            boxes[j][i].status = sqlite3_column_int(st, 3);
                            boxes[j][i].flagged = sqlite3_column_int(st, 4);
                            boxes[j][i].surrounded = sqlite3_column_int(st, 5);
                            if (boxes[j][i].attribute == 1)
                            {
                                bombs+= 1;
                            }

                            sqlite3_finalize(st);
                        }
                    }
                }
                

                std::cout << "Loaded. Press enter to continue: ";
                std::cin.ignore(1000, '\n');
            }

            sqlite3_close(db);
        }

        
//Execute when new game is selected or the data of last game is not saved
//If the last game is saved, skip this part

        if (is_new_game)
        {
            // Choose level
            system("cls");
            string str1;
            std::cout << "Please choose difficulty level:\n";
            std:: cout << R"(
        
 _______             _______                                           
(_______)           (_______)                                          
 _______    _____    _____   _____  ___ _   _                          
|  ___  |  (_____)  |  ___) (____ |/___) | | |                         
| |   | |           | |_____/ ___ |___ | |_| |                         
|_|   |_|           |_______)_____(___/ \__  |                         
                                       (____/                          
 ______              _______           _ _                             
(____  \            (_______)         | (_)                            
 ____)  )   _____    _  _  _ _____  __| |_ _   _ ____                  
|  __  (   (_____)  | ||_|| | ___ |/ _  | | | | |    \                 
| |__)  )           | |   | | ____( (_| | | |_| | | | |                
|______/            |_|   |_|_____)\____|_|____/|_|_|_|                
                                                                       
 _______             _     _                _                          
(_______)           (_)   (_)              | |                         
 _          _____    _______ _____  ____ __| |                         
| |        (_____)  |  ___  (____ |/ ___) _  |                         
| |_____            | |   | / ___ | |  ( (_| |                         
 \______)           |_|   |_\_____|_|   \____|                         
                                                                       
 _______             _______                             _             
(_______)           (_______)             _             (_)            
 _  _  _    _____    _       _   _  ___ _| |_ ___  ____  _ _____ _____ 
| ||_|| |  (_____)  | |     | | | |/___|_   _) _ \|    \| (___  ) ___ |
| |   | |           | |_____| |_| |___ | | || |_| | | | | |/ __/| ____|
|_|   |_|            \______)____/(___/   \__)___/|_|_|_|_(_____)_____)
                                                                       

    )";     

            do
            {
                
                std::cout << "Enter A or B or C or M: ";
                std::cin >> str1;
                
                
            } while ((str1[0] != 'A' && str1[0] != 'B' && str1[0] != 'C' && str1[0] != 'M') || str1.size() > 1);

            std::cin.clear();
            std::cin.get();

            //SET UP FOR LEVEL
        

            switch (str1[0])
            {
            case 'A':

                board_height = 9;
                board_width = 9;
                bombs = 10;
                game_mode = 0;
                break;
            
            case 'B':
                board_height = 16;
                board_width = 16;
                bombs = 40;
                game_mode = 1;
                break;
            case 'C':
                board_height = 30;
                board_width = 16;
                bombs = 99;
                game_mode = 2;
                break;

            case 'M':
                game_mode = 3;
                std::cout << "Type in the board's height (< 30): " << endl;
                std::cin >> board_height;
                if (board_height >= 30) board_height = 29;
                std::cout << "Type in the board's width (< 26): " << endl;
                std::cin >> board_width;
                if (board_width >= 26) board_width = 25;
                std::cout << "Type in number of bombs (< " << board_height * board_width << "): " << endl;
                std::cin >> bombs;
                if (bombs >= board_height * board_width) bombs = board_height * board_width - 1;
            }

            //Set bombs

            set_bombs(bombs, board_height, board_width);   //mines are at location, be carefull !

            //Update number of bombs surrounding each box

            for (int i = 1; i <= board_height; i++)
            {
                for (int j = 1; j <= board_width; j++)
                {
                    if (boxes[j][i].attribute == 1)
                    {
                        continue;
                    }
                    update_surrounding(i, j);        //update to boxes.surrounded
                }
            }

            //Calculate 3bd

            thbd = cal_3bd(board_height, board_width);
        
        }


//PLAY-TIME

        int max = board_height * board_width - bombs;
        string cmd;
        bool win = false;
        bool show_board = true;
        bool start_timer = true;
        std::chrono::time_point<std::chrono::high_resolution_clock> start, end;
        std::chrono::duration<long long, std::ratio<1, 1>> duration;
        int hi_score = receive_highscore(game_mode);
        string cell = "A01";      //Mark the first box of the game

        //Loop through the entire game

        while (true)
        {
            //If their is no more box to open -> win

            system("cls");

            if (draw(board_height, board_width, game_mode, hi_score, cell) >= max)
            {
                end = std::chrono::high_resolution_clock::now();        //if win -> timer stops
                system("cls");
                win = true;
                std::cout << endl;
                std::cout << R"(
       
 __     __                    _         _ 
 \ \   / /                   (_)       | |
  \ \_/ /__  _   _  __      ___ _ __   | |
   \   / _ \| | | | \ \ /\ / / | '_ \  | |
    | | (_) | |_| |  \ V  V /| | | | | |_|
    |_|\___/ \__,_|   \_/\_/ |_|_| |_| (_)
                                          
                                                                                                                                      
 
    )" << endl;
                std::cout << endl;
                std::cout << "Press enter to continue";
                std::cin.ignore(1000, '\n');
                is_new_game = newgame();
                std::cout << endl;
                std::cout << "Press enter to show the board for last match: ";
                std::cin.ignore(1000, '\n');
                break;
            }
        
            std::cout << endl;

            //Take command from user, return to check

            cmd = take_command(board_height, board_width, thbd, game_mode, hi_score, cell);

            //Update correct cell to mark
            cell = cmd;
            cell.resize(3);

            //Timer starts
            if (start_timer)
            {
                start = std::chrono::high_resolution_clock::now();
                start_timer = false;
            }

            //If new game is selected
            if (cmd == "new")
            {   
                end = std::chrono::high_resolution_clock::now();        //Timer stops
                is_new_game = true;
                break;
            }

            //If not save is selected
            if (cmd == "n")
            {
                end = std::chrono::high_resolution_clock::now();      //Timer stops
                is_new_game = false;
                break;
            }

            //If save is chosen
            if (cmd == "y")
            {
                end = std::chrono::high_resolution_clock::now();      //Timer stops
                is_new_game = false;
                show_board = false;        //Change the value to avoid show_board
                break;
            }

            //If clicked onto bomb
            if (game_over(cmd))
            {
                end = std::chrono::high_resolution_clock::now();        //Gsme-over -> timer stops
                system("cls");
                draw(board_height, board_width, game_mode, hi_score, cell);
                std:: cout << endl;
                std::cout << "Clicked onto bomb. Exploded." << endl;
                std::cout << endl;
                std::cout << "Game over" << endl;
                std::cout << endl;
                std::cout << "Press enter to continue...";
                std::cin.ignore(1000, '\n');
                is_new_game = newgame();    // a small remind to revenge :)
                std::cout << endl;
                //If the player does not want to take revenge
                if (!is_new_game)
                {
                    std::cout << "Press enter to show board";
                }

                //Yeah...
                if (is_new_game)
                {
                    std::cout << "Enter to show the board for last match: ";
                }
                
                std::cin.ignore(1000, '\n');
                break;
            }
    
        }

//END GAME, SHOW BOARD

        //Calculate the time span of this session

        duration = std::chrono::duration_cast<std::chrono::seconds>(end - start);      
        int seconds = duration.count() + saved_game_time;
        system("cls");

        //If the game is not saved

        if (show_board)
        {
            showboard(board_height, board_width, game_mode, hi_score);
            std::cout << endl;
            std::cout << "Game time: " << seconds << " seconds." << endl;
            std::cout << endl;
            std::cout << "Press enter to continue...";
            std::cin.ignore(1000, '\n');
        }

        //If the game is saved

        if (!show_board)
        {
            save(board_height, board_width, thbd, seconds, -1, game_mode, 2);
        }

        //if win -> calculate points and save if points > highscore

        if (win)
        {
            int scores = (double) thbd / seconds * 1000;
            std::cout << endl;
            std::cout << "Your Score: " << scores << endl;
            std::cout << endl;
            std::cout << "Press enter to see High Score: ";
            std::cin.ignore(1000, '\n');
            
            if (manage_high_score(scores, hi_score, game_mode))
            {
                save(board_height, board_width, thbd, seconds, scores, game_mode, 3);
            }
            
        }      
    
    } while(is_new_game);


//Goodbye

    std::cout << endl;
    std::cout << "Press enter to log out";
    std::cin.ignore(1000, '\n');
    system("cls");
    std:: cout <<  R"(
        [0;5;37;47m . . . . . . . . . . . . . . . . . ....      .;%[0;1;37;47m8[0;5;37;47m%;      .:. .. . . . . . . . . . . . . . . . . . . [0m
[0;5;37;47m . . . . . . . . . . . . . . . .. .;@[0;1;37;47mX:[0;1;30;47m:t%XS[0;1;37;47m.[0;1;30;47m;;::;;:..:[0;1;37;47m.:%@[0;5;37;47mX:t:.. .. . . . . . . . . . . . . . . . .[0m
[0;5;37;47m . . .  . . . . . . . . . . . .;[0;1;37;47m8[0;1;30;47m.[0;5;37;40m8[0;5;33;40mt.[0;1;30;47m:[0;1;37;47mX[0;5;37;47m@%XSt%%S%%SS%%t%%%@[0;1;37;47m8St[0;1;30;47mtS[0;5;37;40m8[0;1;30;47m8%[0;1;37;47m.8[0;5;37;47m; .. . . . . . . . . . . . . . .[0m
[0;5;37;47m . .  .. . . . . . . . . ..  S[0;1;30;47m;[0;5;33;40m8[0;30;41m8[0;5;33;40m8Xt;[0;33;47m@[0;5;37;47m@[0;1;33;47mS[0;1;30;43m8[0;33;41m8[0;1;37;47mX[0;5;37;47m;SS%SSSSSSSSSSSXXX%t::S[0;1;37;47m:[0;5;33;40mt@[0;5;37;40mS[0;5;37;47mS .. . .  . . . . . . . . . . [0m
[0;5;37;47m . . .  . . . . . . .. .:[0;1;37;47m8[0;1;30;47m:8[0;5;33;40m [0;5;37;40m8[0;1;30;47m@[0;1;37;47m;S%8[0;5;37;47mS;%t[0;33;47m8[0;1;30;47m8[0;1;37;47m8[0;5;37;47mS%[0;5;1;33;47m8[0;5;37;47m@S[0;5;1;33;47m8[0;5;37;47mX[0;5;1;33;47m8[0;5;37;47m@S[0;5;1;33;47m8[0;5;37;47m8[0;5;1;33;47m8[0;5;37;47m8S[0;5;1;33;47m8[0;1;33;47m%X[0;5;37;47m8%SSS%;;@[0;1;37;47m;[0;1;30;47m@[0;5;37;40m8[0;1;37;47m.[0;5;37;47m:.. . . . . . . . . . . . .[0m
[0;5;37;47m . . . . . .  .  .. .S[0;1;30;47m [0;5;33;40m ;[0;1;30;47mX[0;1;37;47mS[0;5;37;47mS:t%SSSSS%@[0;1;33;47mS[0;5;37;47m%%S%SX%XXX@SX@X@SX@8[0;1;37;47m [0;1;30;43m88[0;1;33;47mS[0;5;37;47mX%%%%%t;:[0;1;37;47m%[0;5;33;40m:[0;1;30;47mX[0;5;37;47mt. . . . . . . . . . .  .[0m
[0;5;37;47m . . . . .  . . .. %[0;1;30;47m@[0;1;30;41m8[0;5;33;40mX[0;5;37;47m8 :ttt;;::::; [0;1;33;43mt[0;5;37;47m8t%[0;5;1;33;47m8[0;5;37;47mX%[0;5;1;33;47m8[0;5;37;47m@S[0;5;1;33;47m8[0;5;37;47m@S[0;5;1;33;47m8[0;5;37;47m@S[0;5;1;33;47m8[0;5;37;47m8S[0;5;1;33;47m8[0;5;37;47m8XX;X[0;1;30;43m8[0;31;43m8[0;5;37;47m%%[0;5;1;33;47m8[0;5;37;47m@%%%t; [0;5;37;40m8[0;5;33;40m8[0;5;37;47mX . . .  . .  .  . . . .[0m
[0;5;37;47m . . . . . . . . [0;1;37;47m8[0;1;30;47m8[0;5;33;40m8 [0;1;37;47m8[0;5;37;47m..:::........ [0;33;47m8[0;1;30;47mX[0;5;37;47m;%SXSSXSX@SX@SX@XX@SSSSXS[0;1;37;47m [0;31;43m@[0;1;37;47m%[0;5;37;47m%%t%t%;::[0;1;30;47m8[0;5;33;40mS[0;1;37;47mX[0;5;37;47m.. . . .  . . . . . . [0m
[0;5;37;47m . . . . . . ..8[0;5;33;40m:8[0;1;30;47m8[0;5;37;47mS  .......:.:;;%[0;1;30;43m88[0;5;37;47mX%[0;5;1;33;47m@[0;5;37;47m@%[0;5;1;33;47m8[0;5;37;47m@S[0;5;1;33;47m8[0;5;37;47m8S[0;5;1;33;47m8[0;5;37;47m8@[0;5;1;33;47m@[0;1;33;47mS[0;1;37;47m.[0;5;37;47mt[0;5;1;33;47m@[0;5;37;47m8S[0;5;1;33;47m8[0;5;37;47m8SSX%8[0;31;43m8[0;33;47mS[0;5;37;47mt%[0;5;1;33;47m8[0;5;37;47mX%t;::[0;1;37;47m [0;5;31;40m8[0;1;37;47m.[0;5;37;47m.. . . . . . .  . . .[0m
[0;5;37;47m . . .  . . ..;[0;5;33;40m;S[0;5;37;47m8..  ...:;tSS[0;5;37;43mX[0;5;37;47mXX[0;5;1;37;43m8[0;1;30;43m8[0;1;30;41m8[0;1;30;47m%[0;5;37;47m:S%SXX%@@XX@X@t[0;1;33;47mX[0;1;31;47m8[0;5;37;47m:@SX@X[0;5;1;33;47m8[0;5;37;47m8XXt[0;1;37;47m@[0;33;41m@[0;1;37;47m8[0;5;37;47mtX%t[0;5;1;33;47m8[0;5;37;47mX;. [0;1;30;47mS[0;1;30;41m8[0;1;37;47mX[0;5;37;47m . . . . . . . .  . [0m
[0;5;37;47m . .  .. . ..%[0;5;33;40m [0;1;30;47mX[0;5;37;47mS:.. :;t%SSS[0;5;1;37;43m8[0;5;37;47m8XX%[0;33;47m8[0;1;30;41m8[0;5;33;40m8[0;1;37;47m%[0;5;37;47mtS[0;5;1;33;47m@[0;5;37;47m8S[0;5;1;33;47m@[0;5;37;47m8S[0;5;1;33;47m@[0;5;37;47m8X[0;5;1;33;47mX[0;5;37;47m8@8[0;33;47m8[0;5;31;40mX[0;5;37;47m;S[0;5;1;33;47m@[0;5;37;47m@XX@S[0;5;1;33;47m8[0;5;37;47m8S;[0;33;47m@[0;1;33;47mS[0;5;37;47mtSSSS%t:.;[0;5;33;40m@:[0;5;37;47m: . . . . . . . . . [0m
[0;5;37;47m . . .  . . [0;1;37;47m8[0;5;37;40m@[0;5;37;47m8... :;[0;1;37;47m88[0;5;37;47m%X[0;5;1;33;47m8[0;5;37;47m8@@X%t[0;37;43mX[0;1;30;41m@[0;5;31;40m@[0;5;33;40m:[0;5;37;47m:%X@[0;5;1;33;47m@[0;5;37;47m88S@8XX8[0;5;1;33;47mS[0;1;33;47mX[0;1;37;47m [0;1;30;47m8[0;1;30;43m8[0;5;37;47m8X8S[0;5;1;33;47m@[0;5;37;47m8X@8SXXX88%[0;5;1;33;47m8[0;5;37;47m@%%%%:.t[0;5;33;40m@[0;1;30;47m8[0;5;37;47m... . . . . . . . .[0m
[0;5;37;47m . . . . ..X[0;5;33;40m:[0;5;37;47mS.. .::[0;1;37;47mS[0;33;47m8[0;5;37;47mtS@8X[0;5;1;33;47m8[0;5;37;47m8X;[0;1;33;47m@[0;1;30;41m@[0;5;33;40m8[0;1;30;41m8[0;1;30;47mt[0;5;37;47m:[0;5;1;33;47m8[0;5;37;47m8X8XS[0;5;1;33;47m@[0;5;37;47m8[0;5;1;33;47mX[0;5;37;47m8[0;5;1;33;47mX[0;5;37;47m8@[0;1;31;47m8[0;5;37;47m8[0;1;33;47mS[0;1;30;47m8[0;33;47m@[0;5;37;47mtX@8[0;5;1;33;47mX[0;5;37;47m8X[0;5;1;33;47mX[0;5;37;47m8[0;5;1;33;47m@[0;5;37;47m8X8[0;1;33;47mS[0;5;37;47m%@S%[0;5;1;33;47m8[0;5;37;47mX%t:.[0;1;37;47m:[0;5;31;40m@[0;5;37;47m; . . . . . . . . .[0m
[0;5;37;47m . . . ....[0;5;37;40m@[0;1;37;47mt[0;5;37;47m.  .:;[0;33;47m@[0;1;30;43m8[0;5;37;47mtS[0;5;1;37;43m8[0;5;37;47m8X@8X[0;5;1;33;47m8[0;5;37;47m8[0;1;30;43m8[0;5;35;40mt[0;1;30;47m:[0;1;30;41m8[0;33;47m@[0;5;37;47m:8S[0;5;1;33;47m@[0;5;37;47m8X@8@8@8@;[0;33;47m8[0;1;37;47m [0;1;30;47m8[0;1;37;47m [0;33;47m@[0;5;37;47m8S[0;5;1;33;47m@[0;5;37;47m88X@8@8@XX[0;37;43m@[0;5;37;47m8@SXX%%t;. [0;5;37;40m@[0;1;30;47m@[0;5;37;47m .. . . . . . . . [0m
[0;5;37;47m . . .  . [0;1;37;47m:@[0;5;37;47m .. ::[0;33;47m8[0;5;33;40m;[0;5;37;47m:X@8X[0;5;1;33;47m8[0;5;37;47m@[0;5;1;33;47m8[0;1;37;47m%[0;5;37;47m%[0;1;31;43m8[0;5;35;40m;[0;5;37;47mXX[0;30;41m8[0;33;47mS[0;5;37;47m X@8X[0;5;1;33;47m@[0;5;37;47m8[0;5;1;33;47mX[0;5;37;47m8X[0;5;1;33;47mX[0;5;37;47m8[0;5;1;33;47mX[0;5;37;47m@[0;1;33;47mX[0;1;37;47m [0;1;33;47mS[0;1;37;47m  [0;1;33;47m@[0;5;37;47m88@X[0;5;1;33;47mX[0;5;37;47m8X[0;5;1;33;47mX[0;5;37;47m8X[0;5;1;33;47m@[0;5;37;47mX[0;33;47m@8[0;5;37;47m@S[0;5;1;33;47m@[0;5;37;47m@S[0;5;1;33;47m8[0;5;37;47m@%:.;[0;5;33;40mX[0;1;37;47m.[0;5;37;47m . .  . . . . . .[0m
[0;5;37;47m . . . . X[0;1;30;47m;[0;5;37;47m . ..t[0;1;37;47m@[0;33;41m8[0;5;37;47m8%XX[0;5;1;33;47m8[0;5;37;47m88%[0;31;43m@[0;1;30;43m8[0;1;37;47m:[0;5;33;40m%[0;1;37;47m%[0;5;37;47m  [0;5;33;40m8 [0;5;37;47m [0;5;1;33;47m8[0;5;37;47m8[0;5;1;33;47m@[0;5;37;47m88@8X[0;5;1;33;47mX[0;5;37;47m888X[0;1;37;47m  [0;35;47mS[0;1;33;47mS[0;5;37;47m8[0;5;37;40m;[0;5;37;47mX@[0;5;1;33;47mX[0;5;37;47m88@88888%[0;1;37;47m [0;5;33;41m8[0;5;37;47m;XXSXX%%%:.[0;1;37;47m%[0;5;33;40m%[0;5;37;47m... . .  . . . . [0m
[0;5;37;47m . . . ..[0;1;30;47m;[0;5;37;47m8....%;[0;1;30;43m8[0;1;30;47mX[0;5;37;47m;@[0;5;1;37;43m8[0;5;37;47m888[0;5;1;33;47m@[0;1;33;47mS[0;1;30;41m%[0;1;30;47m8[0;5;33;40mS[0;1;37;47m [0;5;37;47m.:.[0;1;30;47m%[0;1;30;43mS[0;5;37;47mX@@@X[0;5;1;33;47m@[0;5;37;47m8[0;5;1;33;47mX[0;5;37;47m888[0;5;1;33;47mX[0;5;37;47m8S8[0;1;33;47m8[0;35;47mX[0;1;30;47mX[0;5;37;47m:[0;33;47m@[0;1;37;47m [0;5;37;47mX88[0;5;1;33;47mX[0;5;37;47m88[0;5;33;41m.[0;5;37;47m S@%8[0;1;30;43m8[0;5;37;47m8%SS[0;5;1;33;47m@[0;5;37;47m@%S%;..[0;5;33;40m [0;1;37;47mt[0;5;37;47m . . . . . .  . [0m
[0;5;37;47m . . .. [0;1;37;47m8[0;1;30;47mt[0;5;37;47m.. .tt[0;1;33;47mX[0;5;33;40mS[0;5;37;47m@%888[0;5;1;33;47m8[0;5;37;47m8[0;1;37;47m [0;5;33;40m;.%[0;1;30;47m8XS[0;1;37;47mS[0;5;37;47m@S[0;1;30;43m8[0;1;37;47m;[0;5;37;47m;S[0;5;1;33;47m8[0;5;37;47m8888@[0;5;1;33;47mX[0;5;37;47m888[0;5;1;33;47m@[0;5;37;47m8[0;5;37;41m8[0;1;30;47m;[0;33;47m8[0;5;37;47m:8[0;1;30;43m8[0;5;37;47mX@88[0;5;1;33;47mX[0;5;37;47m8[0;1;30;43m8[0;5;37;47m8S[0;5;1;33;47m8[0;5;37;47m88[0;33;41m8[0;5;37;47mXSX@@S[0;5;1;33;47m@[0;5;37;47m@S%: X[0;5;33;40m [0;5;37;47m . . . . .  . . [0m
[0;5;37;47m . .  . [0;1;30;47m;[0;1;37;47m@[0;5;37;47m . ;X;[0;1;30;43m8[0;1;30;47m8[0;5;37;47m.[0;1;33;47mS[0;31;43m8[0;5;37;47m8@8S[0;1;31;43m8[0;5;37;47m8[0;5;33;40m.[0;1;30;41m8[0;1;37;47mt[0;5;37;47m  8[0;1;37;47m  [0;5;37;40mX[0;1;33;47mX[0;31;43m@[0;5;37;47m88@[0;5;1;33;47m@[0;5;37;47m8[0;5;1;33;47mX[0;5;37;47m8S[0;1;37;47m.[0;5;37;43m8[0;5;37;47m@8%[0;33;47m8[0;5;33;40m.[0;1;30;47m8[0;5;37;47mS;[0;1;30;47m8[0;1;37;47m.[0;5;1;33;47mX[0;5;37;47m888X[0;31;43m8[0;33;47m8[0;5;37;47mS8@8[0;33;47m@[0;5;37;47m@X[0;5;1;33;47m8[0;5;37;47m8SX@%%%;. [0;1;30;47m8[0;1;37;47m.[0;5;37;47m . . . . . . . [0m
[0;5;37;47m . . ...[0;1;30;47mS[0;5;37;47m;8t t%[0;1;37;47m8[0;1;30;43m8[0;1;37;47m%t[0;1;30;43m8[0;1;30;41m8[0;1;30;43m8[0;5;37;47mS;[0;1;33;47mS[0;5;35;40m [0;5;37;47m;[0;5;33;40m%8[0;5;37;47m8.. ..[0;1;37;47mX[0;5;31;40m8[0;5;33;40m [0;1;30;43m8[0;1;33;47mS[0;5;37;47m8888[0;5;1;33;47mX[0;1;37;47m [0;5;33;41m:[0;5;35;40m:[0;33;47m8[0;1;37;47m [0;5;37;47m8[0;1;33;47mX[0;1;30;41m8[0;5;33;40m%[0;5;37;47mS:[0;1;37;47m;[0;1;31;43m8[0;5;37;47mX88[0;5;1;33;47m@[0;5;37;47m8[0;33;47m8[0;5;33;40m%[0;5;37;47m@@X@8S[0;1;33;47mX[0;5;37;47m88X[0;5;1;33;47m@[0;5;37;47m8S[0;5;1;33;47m8[0;5;37;47m8%. [0;1;37;47mS[0;5;33;40mX[0;5;37;47m:.. . . . . . .[0m
[0;5;37;47m . . . X[0;1;30;47mS[0;1;37;47m:[0;5;33;40m%[0;5;37;47m .%;[0;1;33;47m8[0;5;35;40m;[0;33;47mX8[0;1;30;47m88[0;1;30;43m88[0;33;47m8[0;5;35;40mt[0;1;30;43m8[0;1;30;47m8[0;1;30;41m8[0;5;33;40mX[0;5;37;40mt[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;37;47m8[0;1;37;47m [0;1;30;43m8[0;5;37;47m [0;1;37;47m [0;33;47m8[0;1;33;47mX[0;1;37;47m [0;1;33;47mX[0;1;31;47m@[0;1;37;47m.[0;5;33;40m.[0;5;37;47m.[0;1;37;47m [0;1;31;43m8[0;1;30;47m%[0;1;37;47m  [0;1;30;43m8[0;1;37;47m [0;5;37;47m88[0;1;30;47m8[0;33;47m@[0;5;37;47mX@8%[0;33;47m8[0;33;41mX[0;5;37;47m8X[0;5;1;33;47m8[0;5;37;47m8@@[0;33;41m8[0;1;37;47m [0;5;37;47m;X@SX@SS;. [0;5;33;40m.[0;1;37;47m;[0;5;37;47m .. . . . . . [0m
[0;5;37;47m . . . 8[0;1;30;47m8[0;1;30;43m8[0;5;33;40m [0;5;37;47m  %t[0;33;47m8[0;1;30;41mS[0;1;30;47m@[0;1;37;47m:[0;31;43m8[0;5;31;40m8[0;1;37;47m: ;[0;5;37;47m: [0;5;33;40mt;[0;1;30;47m8[0;1;30;43m8[0;5;33;40m;t[0;33;47m8[0;5;37;40m:[0;33;41m8[0;5;33;40mt[0;5;37;47mXXt%%@8%.8%;[0;1;30;47mS8[0;33;41m8[0;5;33;40m8[0;1;30;41m8[0;5;33;40m8[0;1;30;41m8[0;5;33;40m8[0;1;30;41m@[0;5;31;40m8[0;1;30;43m8[0;33;41m8[0;1;30;43m8[0;5;33;41mX[0;1;30;47m8[0;5;33;40m%[0;1;30;41m8[0;1;37;47m:[0;5;37;47mS8[0;5;1;33;47m@[0;5;37;47m8@88[0;5;1;33;47m@[0;5;37;47m8S[0;5;1;33;47m@[0;5;37;47m8S[0;5;1;33;47m@[0;5;37;47m@t: [0;1;37;47m8[0;5;33;40m.[0;5;37;47m   . . . . . .[0m
[0;5;37;47m . . . %[0;5;37;40m8[0;5;33;40m8[0;5;37;40mt[0;5;37;47m .t;[0;1;30;43m8[0;5;33;40m%[0;5;37;47m;[0;33;47m@[0;5;37;40mt[0;1;30;47m8t[0;5;37;47m::.;[0;5;33;40mS[0;1;30;47m8[0;33;47m8[0;1;30;47m8[0;1;37;47m [0;1;33;47mS[0;1;30;47m8[0;1;33;47mS[0;5;35;40mX[0;1;30;47m;[0;5;37;47m.:::;;;:.::. S[0;1;30;41m@[0;5;33;40m [0;1;30;47m@[0;5;33;40mS[0;5;31;40m8[0;5;33;40m8X:[0;1;30;47m8@[0;5;33;40m.[0;1;37;47mS [0;1;30;47m8[0;33;41m8[0;33;47m8[0;5;37;47mS88[0;5;1;33;47m@[0;1;37;47m [0;5;37;47m8@@XX8SX@S%:..[0;5;33;40mt[0;5;37;47mt . .  . . .  [0m
[0;5;37;47m . . . %[0;5;33;40m8[0;5;31;40mX[0;5;33;40m:[0;5;37;47m  ;%88;[0;1;30;43m8[0;1;30;47mS[0;1;30;43m8[0;1;30;47mS[0;5;37;47m :.:[0;1;30;43m8[0;5;33;40m.[0;33;47mX%[0;5;37;47m8[0;1;30;47m8[0;1;30;43m8[0;35;47m8[0;1;30;43m8[0;1;37;47mt[0;5;37;47m.:..:..:.:...%[0;5;33;40m@ [0;33;47m@[0;1;30;47mX%8S[0;33;47mXXX[0;5;33;40m%[0;5;37;47m8;;[0;5;33;40mt[0;1;37;47m.[0;5;37;47mt[0;5;1;33;47m8[0;5;37;47m8[0;1;37;47m [0;1;33;47m8[0;5;37;47m8X[0;5;1;33;47m@[0;5;37;47m8X[0;5;1;33;47mX[0;5;37;47m8SS[0;5;1;33;47m8[0;5;37;47m@:: [0;5;33;40m:[0;1;37;47mt[0;5;37;47m .. . .  . ..[0m
[0;5;37;47m . . . t[0;5;33;40m:[0;1;30;47m;8;[0;5;37;47m :SXSS[0;1;30;43m8[0;5;33;40m%[0;1;30;47m8[0;5;37;47m;::.@[0;1;30;47mS[0;1;37;47m  [0;5;37;47m888S....:X:.:.:..:...t8[0;1;37;47m;[0;33;47mS[0;1;37;47m%[0;5;37;47m@[0;33;47m@[0;1;30;47m8[0;33;47mX[0;1;30;47m8[0;1;30;43m8[0;5;37;47m;.8[0;33;41m8[0;1;37;47mS[0;5;37;47mS8X[0;5;33;41m;[0;5;37;47mtS@8X@@X[0;5;1;33;47m@[0;5;37;47m8@S;: [0;1;37;47m:[0;5;33;40m;[0;5;37;47m   . . . .  .[0m
[0;5;37;47m . . . . .8[0;31;43m8[0;5;37;47mX %[0;5;1;33;47m8[0;5;37;47mS[0;1;30;43m8[0;1;30;41mt[0;1;37;47m [0;5;37;47m.;8;::;%SX:;.:.:::.::.:[0;5;1;33;47m@[0;5;37;47m;:.[0;5;1;33;47m@[0;5;37;47m:.t8;..;8[0;33;47m@[0;5;35;40m.[0;1;30;41m8[0;1;30;47m8[0;5;37;47m8;[0;1;30;47m%[0;1;30;41m8[0;1;37;47m8[0;5;37;47m%[0;5;1;33;47m@[0;1;33;47mX[0;5;33;40mt[0;5;37;47mSS[0;5;1;33;47m@[0;5;37;47m8[0;5;1;33;47mX[0;5;37;47m8[0;5;1;33;47mX[0;5;37;47m88XXSt: 8[0;33;41m8[0;5;37;47m%.. . . . . .[0m
[0;5;37;47m . . . ... [0;1;30;47m;[0;5;33;40m:[0;5;37;47mttS[0;33;47m8[0;1;30;41m8[0;1;37;47m8[0;5;37;47m.:8[0;5;1;33;47m8[0;5;37;47m@@%8%@8t@:.:.:.:.[0;5;1;33;47m@[0;5;37;47m;:::.:;.:[0;5;37;43m8[0;5;37;47mXt8t[0;5;1;33;47m8[0;5;37;47m8%;:8t.[0;1;30;43m8[0;5;33;40m;[0;5;37;47m:@[0;1;30;43m8[0;5;35;40m:[0;33;47m8[0;5;37;47m8@888@8XXS[0;5;1;33;47m@[0;5;37;47m8%:.;[0;5;33;40m8[0;1;30;47mt[0;5;37;47m . . . . .  [0m
[0;5;37;47m . .  .  .. @[0;5;33;40mS[0;33;47m8[0;1;33;47mS[0;1;30;41m%[0;1;30;47m [0;5;37;47m :[0;1;37;47m@[0;5;37;47m8X8[0;5;1;33;47m@[0;5;37;47m8[0;5;1;33;47m8[0;5;37;47m8[0;5;1;33;47m8[0;5;37;47m8[0;5;1;33;47m8[0;5;37;47m8:::::.[0;5;1;33;47m8[0;5;37;47m;;:..:[0;5;1;33;47m@[0;5;37;47m;:.88:[0;5;1;33;47m8[0;5;37;47m8@8%8X8@ [0;1;37;47m:[0;1;30;43m8[0;1;30;47m%[0;37;43m@[0;1;30;43m8[0;1;37;47m.[0;5;37;47m@[0;1;30;43m8[0;1;37;47m [0;5;37;47mtX[0;5;1;33;47m@[0;5;37;47m8X[0;5;1;33;47mX[0;5;37;47m8[0;5;1;33;47mX[0;5;37;47m88X[0;5;1;33;47m@[0;5;37;47m%.:[0;1;37;47m [0;5;33;40mX[0;5;37;47m;:. . . . ..[0m
[0;5;37;47m . . . . . . 8[0;1;30;41mS[0;5;31;40m8[0;5;33;40m8[0;1;37;47mt[0;5;37;47m X[0;5;37;43m8[0;5;37;47mt@[0;5;1;33;47m@[0;5;37;47m88X88[0;5;1;33;47m@[0;5;37;47m8X::[0;5;1;33;47m@[0;5;37;47m.[0;1;33;47m8[0;1;37;47m [0;5;37;47m:    [0;1;33;47m8[0;1;37;47m.[0;5;37;47m.:.[0;5;1;33;47m8[0;5;37;47m8SX8[0;5;1;33;47m@[0;5;37;47m8[0;5;1;33;47m8[0;5;37;47m8[0;5;1;33;47m8[0;5;37;47m8[0;5;1;37;43m8[0;5;37;47m8@[0;31;43m8[0;5;31;40mX[0;1;30;41mX[0;5;33;40m@[0;5;37;47m8@X[0;31;43m@[0;1;30;43m8[0;5;37;47m8@8X@888X[0;5;1;33;47mX[0;5;37;47m88;..%[0;5;31;40m@[0;1;37;47m8[0;5;37;47m . . .  .  [0m
[0;5;37;47m . . . . . ..[0;1;37;47m.[0;5;33;40m%[0;1;30;47mX[0;31;40m8[0;1;37;47m8[0;5;37;47m [0;1;37;47m8[0;5;37;47mXt[0;5;1;33;47m@[0;5;37;47m88[0;5;1;33;47m@[0;5;37;47m8[0;5;1;33;47m8[0;5;37;47m888:[0;5;1;33;47mS[0;5;37;47m;::[0;1;37;47mt[0;33;41m8[0;1;37;47m .S[0;1;33;47mS[0;33;47m@[0;1;30;47m8[0;5;37;47m:::.8[0;5;1;33;47m8[0;5;37;47mX8[0;5;1;33;47m8[0;5;37;47m8888888[0;5;1;33;47m8[0;5;37;47m8@@[0;1;30;47m8[0;1;30;41mX[0;5;37;47m;XS[0;1;30;43m8[0;5;35;40mX[0;1;33;47m@[0;5;37;47mXX[0;5;1;33;47m@[0;5;37;47m8[0;5;1;33;47mX[0;5;37;47m8X88X88:. [0;5;33;40m;[0;1;30;47m@[0;5;37;47m .. . . . .[0m
[0;5;37;47m . . .  . .. [0;1;30;47mX[0;5;33;40mX[0;5;37;47mS[0;31;43m8[0;5;37;40m8[0;5;37;47m t.SXS8XX8S%[0;5;1;33;47m%[0;5;37;47m;:::.t8:..:[0;1;30;47m%[0;1;37;47m:[0;5;37;47m.:::XX:888[0;5;1;33;47mX[0;5;37;47m8[0;5;1;33;47mX[0;5;37;47m8[0;5;1;33;47mS[0;5;37;47m88S%.[0;33;47mX[0;5;33;40mX[0;5;37;47mtS8[0;1;30;43m8[0;5;33;40mt[0;33;47m8[0;5;37;47m@@888[0;5;1;33;47mX[0;5;37;47m8[0;5;1;33;47mX[0;5;37;47m8[0;5;1;33;47mX[0;5;37;47m8[0;1;33;47m8[0;5;37;47m8t [0;1;37;47m%[0;1;30;41mX[0;5;37;47m: . . . . .[0m
[0;5;37;47m . . . . . . [0;1;30;47m8[0;5;33;40m%[0;5;37;47m.[0;5;33;40m;[0;5;31;40mS[0;1;37;47mt[0;5;37;47m . ......:::::.::::.:..  ::.::.:[0;5;1;33;47mX[0;5;37;47m%tS%XSXX%[0;5;1;33;47mS[0;5;37;47m% [0;1;30;47m%[0;1;30;43m8[0;5;37;47mt%8[0;1;31;43m8[0;5;35;40mt[0;33;47m@[0;5;37;47m%X[0;5;1;33;47m@[0;5;37;47m8888888X[0;1;37;47m [0;33;47m8[0;5;37;47m;..[0;5;33;40m8[0;1;37;47m;[0;5;37;47m . . . .  [0m
[0;5;37;47m . . .  . ...[0;5;33;40m.[0;1;30;47m@[0;5;37;47m [0;1;37;47m%[0;31;43m8[0;5;33;40m8[0;1;30;43m8[0;5;37;47m8....[0;5;1;33;47mS[0;5;37;47m;:[0;5;1;33;47m%[0;5;37;47m:::[0;5;1;33;47mS[0;5;37;47m;.:.:::::::.::[0;5;1;33;47m@[0;5;37;47m:::;:.:::[0;5;1;33;47m%[0;5;37;47m;[0;5;1;33;47m%[0;5;37;47mtt; [0;33;47m8[0;5;33;40m:[0;5;37;47m;X@[0;1;30;43m8[0;5;31;40m8[0;1;37;47m%[0;5;37;47mt@8[0;5;1;33;47mX[0;5;37;47m8X[0;5;1;33;47mX[0;5;37;47m8X[0;5;1;33;47mX[0;5;37;47m8@[0;1;31;43m8[0;5;37;47m@.:[0;5;37;40mX[0;5;33;40m.[0;5;37;47m   . .  ..[0m
[0;5;37;47m . . . . .  .[0;5;33;40mS[0;1;37;47m:[0;5;37;47m%X[0;1;37;47m8[0;5;33;40mX[0;5;31;40m8[0;33;41m8[0;5;33;40mS[0;1;37;47m.[0;5;37;47m8[0;1;33;47mS[0;5;37;47m8@S:..:::[0;5;1;33;47mX[0;5;37;47m;:::[0;5;1;33;47m@[0;5;37;47m::.::[0;5;1;33;47m@[0;5;37;47m:::.:.:[0;5;1;33;47mS[0;5;37;47m:.::.:..:.[0;33;47m8[0;5;33;40m:[0;5;37;47m;[0;5;1;33;47m8[0;5;37;47m8[0;33;41m8[0;1;30;47m8[0;1;33;47mS[0;5;37;47mX[0;5;1;33;47m@[0;5;37;47m88@@8[0;5;1;33;47mS[0;5;37;47m88@:[0;1;37;47m;[0;5;33;40m.[0;5;37;47m  8[0;1;30;41mX[0;5;37;47mS ..  ..  [0m
[0;5;37;47m . . . .  . @[0;5;33;40m8[0;5;37;47m8@SX[0;1;30;43m8[0;5;33;40mS[0;1;30;47mS[0;5;33;40m%[0;33;41m8S[0;1;30;41m8[0;33;41m8[0;31;43m8[0;1;30;41m8[0;1;30;43m8[0;1;33;47m@[0;1;37;47m:[0;5;37;47m. ..::[0;5;1;33;47m@[0;5;37;47m;;:::[0;5;1;33;47m8[0;5;37;47m;:::..  .;8[0;37;43m@[0;5;33;41mS[0;1;30;47m@[0;1;33;47m@[0;1;31;47mS[0;1;37;47m;[0;5;37;47mS :[0;1;30;43m8[0;33;47m8[0;5;37;47m88[0;1;37;47mS[0;1;30;43m8[0;1;30;47m88[0;5;37;47m888@[0;5;1;33;47m@[0;5;37;47m888@[0;5;1;33;47mX[0;5;37;47m8Xt[0;1;30;43m8[0;5;37;47m8:.[0;5;33;40mS[0;1;30;47m;[0;5;37;47m.. . . . [0m
[0;5;37;47m . . . . .. [0;1;37;47m:[0;5;33;40mS[0;5;37;47m@@[0;5;1;33;47m8[0;1;37;47m%[0;5;33;40mtX[0;5;37;47m8X8[0;1;37;47m%[0;5;33;40m8[0;5;35;40m%[0;5;33;40m [0;1;30;47m8[0;5;33;40m:[0;5;31;40m@[0;31;43m8[0;5;33;40mS[0;1;30;43m8[0;33;47m@[0;1;33;47mX[0;1;37;47m [0;5;37;47mX8X%%SX@8[0;1;37;47m8XS[0;1;33;47mX[0;1;37;47m;[0;37;43m@[0;1;33;47m@[0;1;30;43m8[0;31;43m8[0;1;30;41m8[0;5;33;40m;:t[0;5;35;40m%[0;1;30;43m8[0;31;43m8[0;1;30;43m8[0;31;43m8[0;5;35;40m:[0;5;31;40m@[0;1;30;47m8[0;5;37;47mSS[0;1;37;47mS[0;31;43m8[0;1;30;47m8[0;37;43m8[0;1;37;47m.[0;5;37;47m%[0;5;1;33;47m@[0;5;37;47m888[0;5;1;33;47mX[0;5;37;47m888[0;5;1;33;47mS[0;5;37;47m8;[0;1;33;47m@[0;1;30;47m8[0;5;37;47mt [0;1;30;47mX[0;5;33;40mS[0;5;37;47m. . . . .[0m
[0;5;37;47m . .  . . . [0;5;33;40m [0;1;30;47mX[0;5;37;47m:8@[0;1;33;47m8[0;5;37;40m;[0;5;33;40mX[0;5;37;47m888X[0;5;33;40m88[0;1;30;47m8[0;5;37;40mX[0;1;30;47m88888[0;1;30;41m88[0;1;30;43m88[0;5;33;40mX[0;33;47mX88[0;1;33;47m@[0;33;47m@XX[0;1;37;47m [0;37;43mX[0;1;30;43m8[0;1;30;47m8[0;33;41m8[0;5;35;40mt [0;1;30;47m8888[0;33;47m8[0;1;30;47m8[0;33;47m8[0;1;30;47m88888[0;1;30;43m8[0;1;30;47m8[0;5;37;47mS[0;5;1;33;47m@[0;1;37;47m [0;5;33;40m8[0;1;30;47m88[0;33;47m8[0;5;37;47m888@[0;5;1;33;47mX[0;5;37;47m88[0;5;1;33;47mS[0;5;37;47m88@@8[0;33;41mS[0;5;37;47m8:@[0;5;31;40m8[0;1;37;47m@[0;5;37;47m.. . . .[0m
[0;5;37;47m . . . . . X[0;5;33;40m8[0;1;37;47m.[0;5;37;47m%[0;5;1;33;47m8[0;5;37;47m8[0;33;47m@[0;1;30;47m8[0;33;41m8[0;5;37;47m8@@[0;1;37;47m8[0;33;41m@[0;5;35;40m;[0;1;30;47m8[0;37;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;5;35;40m%[0;5;33;40m;[0;5;37;47m8 [0;1;37;47m [0;1;30;47m8[0;5;37;47m:::;;::[0;5;33;40m.[0;5;31;40m8[0;5;37;47mX%[0;5;37;40mt[0;5;31;40m8[0;5;33;40m;[0;1;30;47m8[0;33;47m8[0;1;30;47m8[0;33;47m8[0;1;30;47m8[0;5;37;40m:[0;1;30;47m888[0;33;47m8[0;1;30;47m88[0;1;30;41m8[0;33;47m8[0;5;37;47mXX[0;1;33;47mS[0;1;30;41m8[0;1;30;47m8[0;33;47m8[0;1;30;47m8[0;1;37;47m [0;5;37;47mS[0;5;1;33;47mX[0;5;37;47m88888@[0;5;1;33;47mX[0;5;37;47m8@X[0;1;30;43m8[0;5;35;40m [0;5;37;47m  [0;5;33;40mX[0;1;30;47m8[0;5;37;47m.. . .  [0m
[0;5;37;47m . . . . . [0;1;30;47mS[0;5;31;40m8[0;5;37;47mX@8[0;1;37;47m%[0;33;47m8[0;1;30;47m8[0;5;33;40m%[0;5;37;47m88[0;5;1;33;47m8[0;1;37;47mX[0;5;31;40m@[0;5;33;40m%[0;1;30;47m8[0;5;37;40m%[0;1;30;47m88[0;1;30;41m8[0;1;30;47m8[0;1;30;43m8[0;5;37;47m8[0;1;37;47m [0;5;37;47m8[0;1;37;47mS[0;5;33;40m;[0;1;30;47m8[0;1;37;47m  ;[0;5;37;47m@8[0;1;37;47m;;[0;5;37;47m;8[0;5;37;40m%[0;5;33;40m:[0;5;37;47m%8[0;5;33;40mt[0;5;35;40mt[0;33;47m8[0;1;30;45m8[0;33;47m8[0;1;30;47m8[0;33;47m8[0;1;30;43m8[0;35;47m8[0;37;43m8[0;5;35;40m [0;33;47mX[0;5;33;40m;[0;33;47mX[0;5;37;47m@X[0;1;37;47m [0;1;30;43m8[0;1;30;47m88[0;1;31;43m8[0;1;37;47m.[0;5;37;47mX88[0;5;1;33;47mX[0;5;37;47m8[0;5;1;33;47mS[0;5;37;47m888[0;5;1;33;47mS[0;5;37;47m8t[0;33;47mS[0;1;30;41m8[0;5;37;47mX [0;1;30;47mS[0;5;33;40m8[0;5;37;47m;.. . . [0m
[0;5;37;47m . . . .. :[0;5;33;40m%[0;1;30;47m8[0;5;37;47mt@X[0;1;33;47m@[0;1;30;47m8[0;1;30;43m8[0;5;35;40m;[0;5;37;47m88@[0;1;33;47mS[0;5;31;40m8[0;1;30;47m8[0;33;47m8[0;1;30;47m8[0;1;30;43m8[0;5;35;40m:[0;5;37;47m8[0;5;33;40mt[0;1;30;47m8;@t[0;5;37;47mX.S[0;1;37;47m [0;1;30;43m8[0;1;30;47m8[0;33;47m@[0;1;37;47m [0;5;37;47m;8[0;1;30;47mt8[0;5;31;40m8[0;5;37;47m8.::[0;1;37;47m [0;33;41m8[0;1;30;47m8[0;33;47m8[0;1;30;47m8[0;35;47m8[0;33;47m8[0;1;30;47m88[0;33;47m8[0;35;47m8[0;1;30;43m8[0;1;30;47m8[0;5;37;47mSS[0;1;33;47mX[0;1;30;45m8[0;33;47m8[0;1;30;47m88[0;33;47m@[0;5;37;47m8@8888[0;5;1;33;47mS[0;5;37;47m888Xt8[0;31;43m8[0;5;37;40m%[0;5;37;47m:S[0;5;31;40m8[0;1;37;47m@[0;5;37;47m . . . [0m
[0;5;37;47m . . .  . 8[0;5;31;40m8[0;1;37;47m%[0;5;37;47mt[0;5;1;37;43m8[0;5;37;47m8[0;33;47m@[0;1;30;47m88[0;31;43m8[0;5;37;47m88S[0;1;33;47m@[0;5;31;40m@[0;1;30;47m8[0;5;33;40m [0;1;30;43m8[0;5;35;40m;[0;5;37;47m [0;1;37;47m [0;5;31;40mX[0;1;30;47m;[0;5;37;40m@[0;1;30;47m888[0;1;37;47m8[0;5;37;47m:; .%[0;1;37;47m:[0;1;30;47mXX@[0;5;35;40m;[0;5;33;40m [0;5;37;47m   :.8[0;1;30;41m@[0;5;33;40m [0;33;47m8[0;1;30;47m88[0;1;30;43m8[0;35;47m@[0;33;47m8[0;1;30;47m8[0;5;35;40m%[0;1;33;47mX[0;5;37;47m8X[0;1;33;47mX[0;5;33;40mS[0;1;30;47m88[0;33;47m8[0;1;30;45m8[0;5;37;47m@[0;5;1;33;47m@[0;5;37;47m8[0;5;1;33;47mX[0;5;37;47m888[0;5;1;33;47mS[0;5;37;47m8[0;5;1;33;47mX[0;5;37;47m8%8[0;5;33;40m8S[0;1;37;47m [0;5;37;47m [0;5;33;40mt[0;1;30;47m8[0;5;37;47m.. . . [0m
[0;5;37;47m . . . .. [0;1;37;47m:[0;5;33;40m8[0;1;37;47m8[0;5;37;47mX88[0;33;47m8[0;1;30;47m88[0;5;31;40m@[0;1;37;47m@[0;5;37;47m@X[0;33;47m8[0;5;33;40mt[0;1;30;47m8[0;33;47m8[0;5;35;40mX[0;5;37;47m8[0;1;37;47mS[0;31;43m8[0;5;37;40m8[0;1;30;47m88888[0;5;37;40mt[0;1;30;47mS..t@8888[0;5;35;40mt[0;1;37;47m8[0;5;37;47m  :.:.8[0;5;33;40m;.[0;33;47m8[0;1;30;47m88[0;33;47m8[0;5;37;40m;[0;33;47m@[0;5;31;40mS[0;1;30;47m8[0;5;37;47m%@[0;1;31;47m8[0;5;33;40mt[0;1;30;47m8[0;37;43m8[0;1;30;47m8[0;1;30;43m8[0;1;37;47m:[0;5;37;47mS88[0;5;1;33;47mX[0;5;37;47m888@8[0;5;1;33;47mX[0;5;37;47m@%[0;1;30;47m88[0;5;33;40m%[0;5;37;47m;[0;1;37;47m [0;5;33;40m@[0;5;37;47m;.. . .[0m
[0;5;37;47m . . . .. [0;5;37;40mS[0;5;33;40m [0;5;37;47m XX[0;1;33;47mS[0;1;30;47m8[0;33;47m8[0;1;30;47m8[0;33;41m8[0;1;37;47mS[0;5;1;33;47m8[0;5;37;47m8[0;1;30;43m8[0;5;35;40m [0;33;47m8[0;1;30;41m8[0;5;37;47m8t[0;1;30;43m8[0;5;35;40m.[0;1;30;47m@8[0;37;46m8[0;1;30;47m8[0;37;46m8[0;1;30;47m8[0;36;47m8[0;1;30;47m88[0;5;37;40mt[0;1;30;47m88[0;5;37;40mt[0;1;30;47m8[0;36;47m8[0;5;37;40mt[0;5;35;40m.[0;5;37;47m@ .:.:...[0;1;37;47m [0;1;30;43m8[0;35;47m8[0;37;43m8[0;35;47m8[0;33;47m8[0;1;30;47m8[0;5;33;40mX[0;33;47mX[0;5;37;47mX%[0;37;43m8[0;5;33;40m:[0;1;30;47m888[0;1;30;43m8[0;33;47mX[0;5;37;47mS[0;5;1;33;47mX[0;5;37;47m88@[0;5;1;33;47mX[0;5;37;47m8[0;5;1;33;47mS[0;5;37;47m88S.[0;1;37;47m [0;5;37;47m8[0;1;30;47m8[0;1;37;47m [0;5;37;47mS[0;5;33;40mX[0;1;37;47m;[0;5;37;47m .. . [0m
[0;5;37;47m . .  .  %[0;5;33;40m@[0;1;37;47mS[0;5;37;47mt[0;5;1;37;43m8[0;5;37;47m8[0;1;37;47m [0;33;47m8[0;35;47m8[0;33;47m8[0;5;31;40m@[0;1;37;47m;[0;5;37;47mX8[0;31;43m8[0;1;30;47m8[0;5;31;40mS[0;1;37;47mt[0;5;37;47m.[0;1;37;47m [0;1;30;41m8[0;1;30;47m888[0;36;47m8[0;1;30;45m8[0;36;47m8[0;1;30;47m8[0;35;47m8[0;37;46m8[0;1;30;47m8[0;36;47m8[0;1;30;47m8[0;36;47m8[0;1;30;47m8[0;36;47m8[0;1;30;47m88[0;5;35;40m [0;5;33;40mt[0;5;37;47mS..:::.:t[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;40m [0;1;30;47m8[0;33;47m8[0;31;45m8[0;33;47mX[0;5;37;47mt@[0;1;31;43m8[0;1;30;47m8[0;33;47m8[0;5;35;40m.[0;33;47mX[0;35;47m8[0;1;30;43m8[0;5;37;47m88@[0;5;1;33;47mS[0;5;37;47m8888X[0;5;1;33;47mS[0;5;37;47m8.[0;1;37;47m; [0;5;37;47m%[0;1;30;43m8[0;5;37;47m;[0;1;30;47m8[0;5;33;40m [0;5;37;47m   . .[0m
[0;5;37;47m . . . ..[0;1;37;47m%[0;5;33;40m8[0;5;37;47m888X[0;1;33;47m@[0;5;35;40m:[0;33;47m8[0;1;30;47m8[0;5;33;40m8[0;1;37;47m [0;5;37;47m%[0;1;37;47m:[0;5;33;40mX;[0;1;30;47m8[0;5;37;47m;:[0;5;33;40m%[0;5;35;40m:[0;1;30;47m88[0;1;30;46m8[0;35;47mX[0;36;47m8[0;1;30;47m8[0;1;34;46m8[0;1;30;47m88[0;36;47m8[0;1;30;45m8[0;36;47m8[0;35;47m8[0;1;34;46m8[0;1;30;47m8[0;36;47m8[0;1;30;47m88[0;5;35;40m:[0;1;30;47m8[0;5;37;47m...::::.X[0;5;31;40mX[0;5;33;40m.[0;33;47m@[0;1;30;47m88[0;1;30;43m8[0;1;30;47m8[0;5;37;47m%%[0;1;30;43m8[0;5;37;40mt[0;1;30;47m8[0;33;47m8[0;35;47m8[0;1;30;43m8[0;1;30;45m8[0;5;37;47m%%[0;5;1;33;47m@[0;5;37;47m88[0;5;1;33;47mS[0;5;37;47m8[0;5;1;33;47mS[0;5;37;47m88S 8[0;1;33;47mX[0;5;37;47m.[0;1;30;47m8[0;1;37;47m ;[0;31;43m8[0;5;37;47mt.. . [0m
[0;5;37;47m . . . . [0;1;30;47m8[0;5;33;40m%[0;5;37;47mtX@8[0;33;47m@[0;1;30;47m888[0;1;30;43m8[0;33;47m@[0;5;37;47mt[0;1;33;47m@[0;1;30;41m8[0;5;33;40mt[0;1;37;47mt[0;5;37;47m :[0;5;33;40m.:[0;5;37;40m@[0;1;30;47m88[0;36;47m8[0;1;30;47m888[0;36;47m8[0;35;47m8[0;36;47m88[0;1;30;47m8[0;36;47m8[0;1;30;47m88[0;5;36;40m.[0;36;47m8[0;1;30;47m88[0;5;35;40m;[0;33;47m8[0;5;37;47m;.:::.: 8[0;5;33;40m@[0;1;30;47m8[0;1;31;43m8[0;1;30;47mX[0;5;35;40m%[0;33;47m8[0;5;37;47mS8[0;1;30;43m8[0;1;30;47m88[0;33;47m8[0;1;30;47m88[0;33;41m8[0;1;37;47m@[0;5;37;47mS88[0;5;1;33;47mX[0;5;37;47m888X[0;5;1;33;47mX[0;5;37;47m8.@[0;1;30;47m8[0;5;37;47m:8[0;5;33;40m;[0;5;37;47m8[0;5;31;40mX[0;1;37;47m [0;5;37;47m .. .[0m
[0;5;37;47m . . .. :[0;5;31;40mX[0;1;30;47mS[0;5;37;47m;[0;5;1;33;47m8[0;5;37;47m88[0;33;47m88[0;1;30;47m8[0;33;47m8[0;1;30;45m8[0;31;43m8[0;1;37;47mt[0;1;30;47m8[0;1;30;41m@[0;1;30;47mt[0;5;37;47m  [0;1;37;47m [0;1;30;43m8[0;5;37;47m8[0;1;37;47m@ [0;1;30;47m;@[0;5;37;40m@X[0;5;35;40m. .ttt;:. :[0;5;36;40m .[0;5;37;40m8[0;5;35;40m.[0;1;30;43m8[0;5;37;47m:.:::::;[0;1;37;47m [0;5;33;40m.[0;1;30;47m88[0;31;43m8[0;1;30;47m8[0;5;37;47mt8[0;31;43m8[0;1;30;47m8[0;1;30;43m8[0;35;47m8[0;33;47m8[0;1;30;47m8[0;33;41mX[0;1;37;47m;[0;5;37;47mt[0;5;1;33;47m8[0;5;37;47m888[0;5;1;33;47mS[0;5;37;47m88@%:.[0;33;47m@[0;5;37;47m8.[0;1;37;47m [0;1;30;47mS%[0;5;33;40mt[0;5;37;47m: .  [0m
[0;5;37;47m . .  . 8[0;5;31;40mS[0;1;37;47mX[0;5;37;47mX8@8[0;33;47m8[0;35;47m8[0;33;47m8[0;1;30;47m88[0;5;33;40m8[0;1;30;47m8[0;33;47m8[0;1;30;41m@[0;1;37;47m8[0;5;37;47m ;[0;5;33;40m@[0;5;35;40m [0;1;37;47m8@[0;5;37;47m8X.     :%%X8X8[0;1;37;47m;[0;5;37;47m;[0;1;37;47m@[0;5;37;47m. [0;5;33;40m [0;33;47mS[0;5;37;47m ::::: t[0;1;30;43m8[0;1;30;47m88[0;5;31;40m@[0;33;47m8[0;5;37;47mS[0;1;37;47m;[0;31;43m8[0;1;30;47m88[0;33;47m8[0;5;37;40m;[0;1;30;47m8[0;1;30;41m8[0;1;33;47m@[0;5;37;47m@88@88[0;5;1;33;47mS[0;5;37;47m8[0;5;1;33;47mS[0;5;37;47m@;.[0;1;30;47m8[0;5;37;47m8%S[0;33;47m@[0;1;37;47m:[0;5;33;40m8[0;1;37;47m@[0;5;37;47m .. [0m
[0;5;37;47m . . .. [0;1;37;47m.[0;5;33;40m8[0;1;37;47m8[0;5;37;47mS[0;5;1;33;47m8[0;5;37;47m88[0;33;47m88[0;1;30;47m8[0;37;43m8[0;1;30;47m8[0;5;31;40mS[0;1;30;47m8[0;5;33;40mSt[0;5;37;47m: [0;1;37;47m [0;5;31;40m8[0;1;30;47mS[0;5;37;40mS[0;1;30;47m88[0;5;36;40m.[0;1;30;47m888X[0;1;37;47m [0;1;30;47mS[0;1;37;47m  [0;1;30;47m%;[0;1;37;47m;XS[0;5;37;47m8[0;1;37;47mtS%t[0;1;30;47mt[0;5;33;40m;[0;1;37;47m;[0;5;37;47m :;:;.8[0;33;41m@[0;5;33;40m;[0;1;30;47m8[0;1;30;41m8[0;1;30;47m8[0;5;37;47m;[0;33;47m8[0;5;31;40mS[0;1;30;47m888[0;33;47m8[0;5;37;40m:[0;5;33;40mt[0;1;37;47mS[0;5;37;47mSX[0;5;1;33;47m@[0;5;37;47m8[0;5;1;33;47mX[0;5;37;47m8888%:.[0;33;47m@[0;1;37;47m [0;5;37;47m:.[0;1;37;47m [0;1;30;47m@[0;5;33;40m;[0;1;30;47m8[0;5;37;47m... [0m
[0;5;37;47m . . .. [0;5;33;40m .[0;5;37;47m 8[0;1;37;47mX[0;5;1;33;47m8[0;5;37;47m8[0;33;47m8[0;35;47m8[0;37;43m8[0;35;47m8[0;33;47m8[0;5;33;40m [0;1;30;43m8[0;5;31;40mX[0;1;37;47m [0;5;37;47m.S[0;5;33;40m8[0;5;35;40m [0;1;30;47m88[0;1;30;46m8[0;1;30;47m8[0;1;30;46m8[0;1;30;47m8[0;1;34;46m8[0;1;30;47m8[0;36;47m8[0;1;30;47m8[0;36;47m8[0;1;30;47m8[0;1;30;46m8[0;1;30;47m8[0;1;30;46m8[0;1;30;47m8[0;36;47m8[0;1;30;47m8[0;37;46m8[0;1;30;47m8[0;5;36;40m.[0;1;30;47m8[0;5;36;40m:[0;1;30;47m8[0;5;37;40mS[0;5;33;40m;[0;1;37;47m;[0;5;37;47m.;[0;5;1;33;47m8[0;5;37;47mt: [0;5;33;40mt[0;1;30;43m8[0;1;30;47m8[0;1;30;43m@[0;5;33;40m [0;1;33;47m@[0;1;30;41mS[0;5;33;40mt[0;1;30;47m8[0;1;30;43m8[0;35;47m8[0;33;47m8[0;1;30;47m8[0;1;30;43m8[0;5;37;47m8X88888[0;5;1;33;47mS[0;5;37;47m8X[0;5;1;33;47mS[0;5;37;47m%.[0;1;37;47m [0;1;30;47m8[0;5;37;47m::S[0;33;47m8[0;1;30;47m8[0;1;30;41m8[0;5;37;47mt . [0m
[0;5;37;47m . . .  [0;5;33;40m.[0;33;47m8[0;5;37;47m.[0;1;33;47m@[0;1;30;43m8[0;5;37;47m88[0;33;47m@[0;1;30;47m88[0;1;30;43m8[0;1;30;47m88[0;5;33;40m [0;1;30;43m8[0;1;37;47m.[0;5;37;47m.[0;1;37;47m [0;5;31;40m8[0;5;36;40m :[0;1;30;46m8[0;37;45m8[0;1;30;46m8[0;1;30;45m8[0;1;30;46m8[0;5;35;40m [0;1;30;47m88[0;5;36;44mS[0;1;30;47m88[0;1;30;46m8[0;35;47m8[0;37;46m8[0;1;30;45m8[0;36;47m8[0;1;30;47m8[0;5;35;40m.[0;36;47m8[0;5;36;40m.[0;37;46m8[0;5;35;40m;[0;1;30;46m8[0;5;35;40m [0;5;37;40m@[0;5;33;40m@[0;5;37;47m8:;;: [0;1;30;43m8[0;5;35;40m@[0;5;33;40m:[0;5;31;40m8[0;5;33;40mXtSt[0;1;30;47m88[0;37;43m8[0;1;30;47m88[0;1;30;41m@[0;1;37;47m [0;5;37;47mt[0;5;1;33;47m8[0;5;37;47m8X[0;5;1;33;47mX[0;5;37;47m88@XX::8[0;33;47m8[0;5;37;47m::.[0;1;37;47m [0;1;30;43m8[0;5;33;40mt[0;1;37;47m [0;5;37;47m.: [0m
[0;5;37;47m . . . ;[0;5;31;40mS[0;1;30;47mX[0;5;37;47m.[0;33;47m@[0;1;30;41m8[0;5;37;47m%X[0;1;33;47m@[0;5;35;40m.[0;33;47m@[0;35;47m@[0;33;47m8[0;1;30;47m8[0;5;33;40m.S[0;5;37;47m@:[0;5;33;40m:[0;5;35;40m [0;1;30;47m8[0;5;37;40mt[0;36;47m8[0;5;36;40m%[0;5;35;40m;[0;1;30;46m8[0;1;30;45m8[0;1;30;46m8[0;5;35;40m:[0;1;30;46m8[0;1;30;47m8[0;5;36;40m:[0;1;30;46m8[0;1;30;45m8[0;1;30;46m8[0;5;35;40m:[0;1;30;46m8[0;5;35;40m:[0;1;34;46m8[0;1;30;47m8[0;1;30;45m8[0;1;30;46m8[0;1;30;45m8[0;1;30;46m8[0;1;30;45m8[0;36;47m8[0;5;35;40m.t[0;5;33;40m;[0;5;37;47m :;;.[0;33;47m8[0;5;31;40m8[0;1;30;47m8[0;33;41m8[0;5;33;40mS[0;5;35;40m t[0;5;33;40mt[0;1;30;47m8[0;33;47m8[0;1;30;45m8[0;33;47m8[0;1;30;47m8[0;1;30;43m8[0;5;37;47m8@8[0;5;1;33;47m@[0;5;37;47m888[0;5;1;33;47mS[0;5;37;47m8[0;5;1;33;47mX[0;5;37;47m@::[0;33;47mX[0;5;35;40m;[0;5;37;47m...%[0;5;35;40m [0;5;33;40m%[0;5;35;40m [0;5;37;47m.. [0m
[0;5;37;47m . . . t[0;5;31;40mS[0;33;47m@[0;5;37;47m:[0;1;37;47m@S[0;5;37;47mX@[0;1;33;47mX[0;35;47m8[0;33;47m8[0;1;30;47m8[0;5;37;40m;[0;33;47m@[0;5;35;40m:[0;5;33;40mt[0;5;37;47mS[0;1;37;47m [0;5;33;40m@[0;5;37;40m8[0;5;36;40m [0;36;47m8[0;1;30;45m8[0;37;46m8[0;5;35;40m.[0;36;47m8[0;5;36;40m:[0;1;30;47m8[0;37;46m8[0;35;47m8[0;1;30;46m8[0;35;47m8[0;1;30;46m8[0;1;30;47m8[0;5;36;40m;[0;1;30;46m8[0;35;47m8[0;36;47m8[0;1;30;47m8[0;1;30;46m8[0;1;30;47m8[0;37;46m8[0;5;35;40m.[0;36;47m8[0;5;36;40m;.[0;36;47m8[0;5;35;40m [0;5;33;40m:[0;5;37;47m8.;;.[0;1;30;47m8[0;33;41m8[0;5;33;40mS[0;5;31;40mX[0;5;33;40m [0;1;30;47m@[0;1;30;43m8[0;1;30;47m8[0;33;47m8[0;1;30;47m8[0;33;47m8[0;1;30;47m88[0;1;30;43m8[0;5;37;47m8@88@[0;5;1;33;47mX[0;5;37;47m888@t::[0;1;37;47m [0;1;30;43m8[0;5;37;47m  . 8[0;1;30;43m8[0;5;35;40m@[0;1;37;47m%[0;5;37;47m .[0m
[0;5;37;47m . . . :[0;5;33;40m@[0;1;30;47m%[0;5;37;47m;SX[0;5;1;33;47m8[0;5;37;47m8[0;1;33;47m%[0;5;37;40m:[0;33;47m@[0;1;30;47m8[0;33;47m8[0;1;30;47m8[0;33;41m8[0;5;35;40m%[0;1;30;43m8[0;1;30;41m8[0;5;35;40m [0;1;30;47m8[0;5;37;40m;[0;1;30;46m8[0;1;30;47m8[0;36;44m8[0;5;35;40m:[0;5;36;40mt[0;5;36;44m8[0;5;35;40m:.[0;36;47m8[0;5;35;40m:[0;36;47m8[0;1;30;45m8[0;1;30;46m8[0;1;30;45m8[0;1;30;46m8[0;5;35;40m. [0;1;30;47m8[0;1;30;45m8[0;1;30;46m8[0;1;30;45m8[0;1;30;46m8[0;1;30;45m8[0;1;30;46m8[0;1;30;45m8[0;37;46m8[0;5;35;40m:t[0;1;37;47mX[0;5;37;47m ;; [0;33;47m8[0;5;31;40m@[0;5;33;40m8t[0;1;30;47m888[0;1;30;43m8[0;35;47m8[0;33;47m8[0;5;37;40mt[0;33;47m8[0;35;47m8[0;1;30;43m8[0;1;37;47m [0;5;37;47mt[0;5;1;33;47m8[0;5;37;47m888@[0;5;1;33;47mS[0;5;37;47m8St:.[0;1;37;47m [0;5;33;40mS[0;5;37;47m. .:.[0;1;30;47m8[0;33;41m8[0;1;30;47m8[0;5;37;47m%.[0m
[0;5;37;47m . . . t[0;5;31;40m8[0;1;30;43m8[0;5;37;47m [0;37;43mX[0;33;47m8[0;5;37;47m8@[0;1;37;47m.[0;33;47m8[0;35;47m8[0;37;43m8[0;35;47m8[0;5;33;40m;[0;5;31;40mX[0;5;37;47m8X[0;5;33;40mS[0;5;37;40m8[0;1;30;47m888[0;37;46m8[0;1;30;45m8[0;36;47m8[0;5;35;40m:[0;5;37;40mt[0;1;30;47m8[0;1;30;46m8[0;35;47m8[0;1;30;46m8[0;1;30;45m8[0;1;30;46m8[0;5;37;40m:[0;1;30;46m8[0;37;45m8[0;1;30;46m8[0;35;47m8[0;1;30;46m8[0;36;47m8[0;1;30;47m8[0;1;30;46m8[0;1;30;45m8[0;1;30;46m8[0;5;37;40m:[0;1;30;46m8[0;35;47m8[0;1;30;47m8[0;5;35;40m:[0;1;37;47m8[0;5;37;47m.::.[0;1;30;43m8[0;5;33;40mS[0;5;35;40m.[0;5;37;40mS[0;1;30;47m8[0;1;30;43m8[0;1;30;47m88[0;33;47m8[0;1;30;47m88[0;37;43m8[0;1;30;47m8[0;1;37;47m [0;5;37;47mX@8X[0;5;1;33;47m@[0;5;37;47m@tt%[0;5;1;33;47mX[0;5;37;47mX:.[0;33;47mX[0;5;35;40mS[0;5;37;47m;... 8[0;5;33;40m%[0;5;31;40mX[0;5;37;47m8:[0m
[0;5;37;47m . . ...[0;5;33;40m;[0;1;30;47m8[0;5;37;47mX[0;1;30;43m8[0;1;37;47m [0;5;37;47mXS8[0;1;31;43m8[0;1;30;47m88[0;37;43m8[0;1;30;47m8[0;33;41mX[0;1;37;47m@:[0;5;35;40mS[0;1;30;47m88[0;37;46m8[0;35;47m8[0;37;46m8[0;5;37;40m;[0;36;47m8[0;5;35;40m.[0;36;47m8[0;35;47m8[0;36;47m8[0;1;30;47m8[0;36;47m8[0;1;30;47m8[0;36;47m8[0;37;45m8[0;1;30;46m8[0;1;30;47m8[0;36;47m88[0;35;47m8[0;1;30;46m8[0;35;47m8[0;36;47m88[0;5;37;40m:[0;36;47m8[0;1;30;45m8[0;37;46m@[0;1;30;47m8[0;5;37;40mX[0;5;33;40mX[0;1;30;43m88[0;33;47m8[0;1;30;47m88[0;5;33;40m8[0;1;30;47m8[0;37;43m8[0;1;30;47m88[0;33;47m8[0;1;30;47m8[0;5;35;40m.[0;33;47m8[0;1;30;45m8[0;1;30;47m8[0;1;30;43m88[0;5;37;47m8@[0;5;1;33;47m@[0;5;37;47m8@:..;8t..[0;33;47m8[0;5;33;40mX[0;5;37;47m: . :.[0;1;37;47m;[0;5;33;40m@[0;1;30;47m8[0;5;37;47m;[0m
[0;5;37;47m . . .  [0;5;33;40mtX[0;33;47mS[0;1;30;41m8[0;1;30;43m8[0;5;37;47m@[0;5;1;33;47mX[0;33;47m8[0;5;31;40m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m88[0;5;33;40mS:[0;5;37;40mX[0;5;35;40m [0;1;30;47m8[0;1;30;46m8[0;1;30;47m8[0;36;47m8[0;1;30;45m8[0;36;47m8[0;1;30;45m8[0;37;46m8[0;5;36;40m.[0;36;47m8[0;35;47m8[0;37;46m8[0;35;47m8[0;37;46m8[0;5;35;40m;[0;37;46m8[0;35;47m8[0;1;30;46m8[0;35;47m8[0;1;30;46m8[0;1;30;47m8[0;36;47m@[0;1;30;47m8[0;36;47m8[0;1;30;45m8[0;36;47m8[0;5;35;40m:[0;36;47m8[0;5;36;40m.[0;36;47m@[0;5;35;40mt[0;1;37;47m [0;5;37;47m :S.X[0;1;30;41m@[0;5;33;40mX[0;1;30;47m8[0;5;33;40m.[0;33;47m8[0;37;45m8[0;37;43m8[0;1;30;47m88[0;33;47m8[0;1;30;47m8[0;35;41m8[0;5;33;40m@[0;37;43m8[0;5;37;47m@@%... @[0;5;33;41mX[0;1;30;43m8[0;5;37;47mX:[0;5;37;40m:[0;1;30;47m8[0;5;37;47m%. . ..[0;1;30;47m8[0;5;31;40m8[0;5;37;47m8[0m
[0;5;37;47m . . .. [0;1;37;47m:[0;5;33;40m.[0;1;30;47mX8[0;5;33;40m8[0;33;47mX[0;5;37;47mS[0;1;37;47m [0;1;30;43m8[0;5;35;40m.[0;1;30;47m8[0;33;47m8[0;5;37;40m:[0;1;30;47m8[0;1;30;43m8[0;5;31;40mX[0;1;30;47m888[0;36;47m8[0;35;47m8[0;37;46m@[0;5;36;40m.[0;36;47m8[0;1;30;45m8[0;36;47m88[0;1;30;47m8[0;1;34;46m8[0;1;30;47m88[0;1;34;46m8[0;1;30;47m8[0;1;30;46m8[0;35;47m8[0;1;30;46m8[0;35;47mS[0;36;47m8[0;35;47m8[0;1;34;46m8[0;1;30;47m8[0;37;46m8[0;1;30;45m8[0;37;46m8[0;5;35;40m.[0;1;34;47m8[0;1;30;47m8[0;5;35;40m@[0;1;37;47mt[0;5;37;47m;..8[0;1;30;43m8[0;1;30;47mX[0;5;33;40mt;[0;1;30;47m8[0;33;47m8[0;1;30;47m88[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;5;31;40mX[0;1;37;47m ;[0;1;30;41m8[0;5;37;47m8::... [0;1;33;47mX[0;5;35;40m;[0;5;33;40m;[0;1;30;47m8[0;5;37;47m:[0;1;30;43m8[0;5;35;40m [0;5;37;47m  . ..:X[0;5;33;40mt[0;1;30;47m8[0m
[0;5;37;47m . .  .. [0;1;30;47m@[0;31;43m8[0;1;37;47m [0;5;37;47m@[0;5;35;40m [0;1;30;43m8[0;1;30;47m8[0;1;30;41m@[0;1;37;47m [0;1;30;43m8[0;5;35;40mt[0;33;47m8[0;1;30;47m8[0;1;30;43m8[0;5;35;40mS [0;5;36;40m [0;37;46m8[0;1;30;45m8[0;1;30;46m8[0;5;37;40m:[0;1;30;46m8[0;5;37;40m.[0;37;46m8[0;1;30;45m8[0;37;46m8[0;35;47m8[0;1;30;47m8[0;36;47m8[0;5;35;40m [0;1;30;47m8[0;5;35;40m;[0;5;36;40m.[0;36;47m8[0;1;30;47m8[0;36;47m8[0;35;47m8[0;36;47m8[0;1;30;47m88[0;1;30;46m8[0;1;30;47m8[0;1;34;46m8[0;1;30;47m8[0;5;36;40mt  [0;5;35;40m [0;5;33;40mt: ;[0;5;35;40m.[0;5;37;47m88[0;5;31;40m8[0;5;33;40m.[0;1;30;47m8[0;37;43m8[0;35;47m8[0;37;43m8[0;1;30;45m8[0;1;30;43m8[0;1;37;47m;[0;5;37;47m:.[0;5;33;40m.[0;37;43m8[0;5;37;47m;....[0;1;37;47m.[0;33;41m8[0;5;37;47m88[0;33;41m8[0;1;37;47m [0;5;33;40m%[0;1;37;47m;[0;5;37;47m . . ...X[0;1;30;47m8[0m
[0;5;37;47m . . . . ;[0;5;33;40mS[0;5;35;40m:[0;5;37;47m; 8[0;1;30;47m8[0;5;33;40m%[0;1;30;47mX[0;5;37;47m:[0;1;30;47m8[0;33;41m8[0;1;30;47m8[0;5;35;40mt:[0;5;37;40mX[0;5;36;40m [0;1;30;46m8[0;1;30;47m8[0;5;36;40m:[0;1;30;46m8[0;1;30;45m8[0;1;30;46m8[0;5;35;40mt[0;1;30;46m8[0;5;35;40m:[0;1;30;46m8[0;5;35;40m:[0;5;36;40m.[0;1;30;46m8[0;1;30;45m8[0;1;30;46m8[0;5;35;40m:[0;34;46m8[0;1;30;45m8[0;1;30;46m8[0;5;36;40m..[0;37;46m8[0;1;30;45m8[0;37;46m8[0;5;35;40mX[0;5;36;40m.%t[0;37;46m8[0;5;35;40m [0;5;37;40m%%888[0;5;35;40m;[0;1;30;47m [0;5;37;47m [0;1;30;47mX[0;33;41m8[0;1;30;47m8[0;5;33;40m:[0;33;41m8[0;5;33;40m.[0;1;30;47mS[0;5;37;47m:.. [0;1;37;47mt[0;1;30;43m8[0;5;37;47m.[0;1;33;47mS[0;31;43m8[0;1;30;43m8[0;1;37;47m [0;1;30;43m8[0;1;30;47m8[0;5;37;47m:8[0;5;33;40m;[0;1;30;43m8[0;5;35;40m%[0;5;37;47mX.. . . . S[0m
[0;5;37;47m . . .  .:[0;1;37;47m:[0;1;30;47m8[0;5;37;47m;:;.... @[0;1;37;47m [0;1;30;43m8[0;5;35;40m;[0;1;30;47m888[0;1;34;46m8[0;1;30;47m8[0;5;35;40m:[0;36;47m8[0;1;30;45m8[0;1;30;46m8[0;1;30;47m8[0;5;36;40m.[0;1;30;47m8[0;1;34;46m8[0;1;30;47m8[0;5;35;40m:[0;1;30;46m8[0;5;35;40m;[0;1;30;46m8[0;5;35;40m:[0;1;30;47m8[0;1;30;46m8[0;35;47m8[0;1;30;46m8[0;1;30;45m8[0;37;46m8[0;5;35;40m;[0;1;30;46m8[0;5;35;40m;[0;1;30;46m8[0;1;30;45m8[0;1;30;46m8[0;1;30;47m8[0;5;36;40mt  [0;5;37;40m%ttS[0;5;37;47m t[0;5;35;40mt[0;1;30;47m8[0;1;37;47m.[0;5;37;47m8t...  :8[0;1;37;47m: % [0;1;30;43m8[0;37;45m8[0;5;37;47m8;t[0;5;37;40m;[0;33;41m8[0;1;30;47m8[0;5;37;47m; .. . . . [0m
[0;5;37;47m . . . . . . . .  ...%[0;5;35;40m; [0;5;37;40m%[0;1;30;46m8[0;1;30;47m8[0;5;35;40m.[0;5;36;40m.[0;1;30;46m8[0;1;30;45m8[0;1;30;46m8[0;5;37;40m:[0;36;47m8[0;5;37;44m8[0;1;30;47m88[0;5;37;40m;[0;36;47m8[0;1;30;45m8[0;36;47m8[0;1;30;45m8[0;37;46m8[0;5;37;40m:[0;1;30;47m8[0;37;46m8[0;1;30;47m8[0;36;47m8[0;5;35;40m.[0;36;47m@[0;1;30;45m8[0;37;46m8[0;5;35;40m:[0;36;47m8[0;1;30;45m8[0;36;47m8[0;1;30;47m8[0;36;47m8[0;1;30;47m8[0;36;47m8[0;5;37;40m:[0;36;47m8[0;5;35;40m;[0;1;30;47m%[0;5;37;47m [0;1;37;47m@[0;5;33;40m8[0;5;37;47m8:.. . .:: ..  ::. [0;1;37;47m;[0;5;33;40m.[0;1;37;47m;[0;5;37;47m . .  . . .[0m
[0;5;37;47m . . . . . . . . . . S[0;5;33;40m%[0;1;30;47mX88[0;36;47m8[0;1;30;47m8[0;1;34;47m@[0;1;30;47m8[0;1;30;46m8[0;1;30;47m8[0;1;30;46m8[0;35;47m8[0;5;37;40m@[0;1;30;46m8[0;1;30;47m8[0;36;47m8[0;5;35;40m;[0;1;30;46m8[0;5;37;40m:[0;37;46m8[0;1;30;45m8[0;36;47m8[0;1;30;45m8[0;36;47m8[0;1;30;45m8[0;37;46m8[0;1;30;47m8[0;1;30;46m8[0;1;30;47m8[0;5;36;40m; [0;1;30;46m8[0;1;30;47m8[0;1;30;46m8[0;35;47m8[0;1;30;46m8[0;35;47m8[0;1;30;46m8[0;35;47m@[0;36;47m8[0;1;30;47m8[0;5;36;40m.[0;5;37;47m8 [0;5;37;40mS[0;1;30;47m8[0;5;37;47m.. . . . . .  : .  . . . . . .  [0m
                                                                                                               

    )" << endl;
    std::cout << "Come back anytime. I will always be here, in the land of dawn ! \n";
    std::cout << endl;

    return 0;

}


//SET ALL TO 0 AT THE BEGINNING OF THE GAME

void setdefault()
{
    for (int i = 0; i < N; i++)
    {
        for (int j = 0; j < N; j++)
        {
            boxes[j][i].attribute = 0;
            boxes[j][i].surrounded = 0;
            boxes[j][i].status = 0;
            boxes[j][i].flagged = false;
            
        }
    }
    return;
}


//SHOW RESULT AND UPDATE DATABASE TO BLANK AGAIN

void showboard(int height, int width, int game_mode, int hiscore)
{
    //Show board

    system("cls");

    for (int i = 0; i <= height; i++)
    {
        for (int j = 0; j <= width; j++)
        {
            
            boxes[j][i].status = 1;
            
        }
    }


    draw(height, width, game_mode, hiscore, "A00");

    //Reset data

    int insert = 0;
 
    sqlite3* DB; 
    sqlite3_stmt *st;
    int exit = 0; 
    exit = sqlite3_open("minesdata.db", &DB);

    
    string sql3 = "UPDATE minesdata SET attribute = ?, status = ?, surrounded = ?, flagged = ?, height = ?, width = ?, thbd = ?, time = ? WHERE column = ? AND row = ?;"; 

    for (int i = 0; i < N; i++)
    {
        for (int j = 0; j < N; j++)
        {
            int rc = sqlite3_prepare_v2(DB, sql3.c_str(), -1, &st, NULL);
            if (rc == SQLITE_OK)
            {
                
                sqlite3_bind_int(st, 1, insert);
                sqlite3_bind_int(st, 2, insert);
                sqlite3_bind_int(st, 3, insert);
                sqlite3_bind_int(st, 4, insert);
                sqlite3_bind_int(st, 5, insert);
                sqlite3_bind_int(st, 6, insert);
                sqlite3_bind_int(st, 7, insert);
                sqlite3_bind_int(st, 8, insert);
                sqlite3_bind_int(st, 9, i);
                sqlite3_bind_int(st, 10, j);
                sqlite3_step(st);
                sqlite3_finalize(st);
            }

            if (rc != SQLITE_OK)
            {
                std::cout << "fail" << endl;
            }
        }
    }
    

    sqlite3_close(DB); 

    return;
}


//SET BOMBS


void set_bombs(int bombs, int height, int width)
{
    int total = height * width;

    //2 dimensions boxes into 1 dimension

    //Generate an array of integer arr[0]=0, arr[1]=1,..

    struct coor_box
    {
        int x;
        int y;
    };
    
    coor_box cell[total];
    int arr[total];

    int count = 0;

    for (int i = 1; i <= height; i++)
    {
        for (int j = 1; j <= width; j++)
        {
            cell[count].x = j;
            cell[count].y = i;
            arr[count] = count;
            count++;     
        }
    }

    //Use generated array to random precisely number of bombs with no repitition

    int ran_arr[bombs];
    int random;

    srand(time(0));

    for (int i = 0; i < bombs; i++)
    {
        random = rand() % total;
        ran_arr[i] = arr[random];
        arr[random] = arr[total - 1];
        total--;
    }

    //Set bombs to original boxes

    for (int i = 0; i < bombs; i++)
    {
        boxes[cell[ran_arr[i]].x][cell[ran_arr[i]].y].attribute = 1;
    }

    return;

}


//UPDATE SURROUNDING

void update_surrounding(int y_located, int x_located)
{
    int start_on_vert = y_located - 1;
    int end_on_vert = y_located + 2;
    int start_on_hor = x_located - 1;
    int end_on_hor = x_located + 2;

    for (int i = start_on_vert; i < end_on_vert; i++)
    {
        for (int j = start_on_hor; j < end_on_hor; j++)
        {
            if (boxes[j][i].attribute == 1)
                boxes[x_located][y_located].surrounded+=1;
            
        }
    }

    return;
}


//Calculate 3bd

int cal_3bd(int height, int width)
{
    int count = 0;

    for (int i = 1; i <= height; i++)
    {
        for (int j = 1; j <= width; j++)
        {
            if (boxes[j][i].attribute == 0)
            {
                if (boxes[j][i].status == 0)
                {
                    count++;
                    reverse_open(i, j, height, width);
                }
                
            }
            
        }
    }

    for (int i = 0; i <= height; i++)
    {
        for (int j = 1; j <= width; j++)
        {
            boxes[j][i].status =0;
        }
    }

    return count;
}



//DRAW BOARD

int draw(int height, int width, int game_mode, int hiscore, string cell)
{
    int opened = 0;
    int vert_bound = height * 2 + 2;
    int hor_bound = width + 2;

    int column = ((int) cell[0]) - 64;
    int row = stoi(cell.substr(1));

    if (game_mode == 0)
    {
        std::cout << "Easy - Best score: " << hiscore << endl;
    }

    if (game_mode == 1)
    {
        std::cout << "Medium - Best score: " << hiscore << endl;
    }

    if (game_mode == 2)
    {
        std::cout << "Hard - Best score: " << hiscore << endl;
    }

    std::cout << endl;

    for (int i = 0; i < vert_bound; i++)
    {
        for (int j = 0; j < hor_bound; j++)
        {
            if (i == 0)
            {
                if (j == 0)
                {
                    std::cout << "  ";
                    continue;
                }
                if (j == 1)
                {
                    std::cout << "  ";
                    continue;
                }
                else
                {
                    std::cout << " " << char(63 + j) << "  ";
                    continue;
                }
             
            }

            if ( i == 1)
            {
                if (j == 0)
                {
                    std::cout << "  ";
                    continue;
                }
                if (j == 1)
                {
                    std::cout << "  ";
                    continue;
                }
                else
                {
                    if (row == 1 && j == column + 1)
                    {
                        setcolor(5);
                        std::cout << "___" << " "; 
                        setcolor(15);
                        continue;
                    }

                    std::cout << "___" << " ";
                    continue;
                }
            }

            if (j == 0)
            {
                if (i % 2 == 0)
                {
                    std::cout.width(2);
                    std::cout << i / 2 << " ";
                    continue;
                }
                else
                {
                    std::cout << "   "; 
                    continue;
                }            
            }

            if (j == 1)
            {
                if (column == 1 && (i == row * 2 || i == row * 2 + 1))
                {
                    setcolor(5);
                    std::cout << "|";
                    setcolor(15);
                    continue;
                }

                std::cout << "|";
                continue;
            }

            if (i % 2 != 0)
            {
                if (j == column + 1 && (i == row * 2 + 1 || i == row * 2 - 1))
                {
                    setcolor(5);
                    std::cout << "___";
                    setcolor(15);

                    if ((j == column + 1 || j == column) && i == row * 2 + 1)
                    {
                        setcolor(5);
                        std::cout << "|";
                        setcolor(15);
                        continue;
                    }

                    std::cout << "|";
                    continue;

                }

                if ((j == column + 1 || j == column) && i == row * 2 + 1)
                {
                    if (j == column + 1 && (i == row * 2 + 1 || i == row * 2 - 1))
                    {
                        setcolor(5);
                        std::cout << "___";
                        setcolor(15);
                    }
                    else
                    {
                        std::cout << "___";
                    }

                    setcolor(5);
                    std::cout << "|";
                    setcolor(15);
                    continue;

                }

                std::cout << "___" << "|";
                continue;
            }

            else
            {
                if (boxes[j - 1][i / 2].status == 1)
                {
                    opened++;
                    if (boxes[j - 1][i / 2].attribute == 1)
                    {
                        std::cout << " ";
                        setcolor(8);
                        std::cout << "#";
                        setcolor(15);
                        std::cout << " ";

                        if (i == row * 2 && (j == column + 1 || j == column))
                        {
                            setcolor(5);
                            std::cout << "|";
                            setcolor(15);
                            continue;
                        }

                        std::cout << "|";
                                       
                        continue;
                    }
                    
                    if (boxes[j - 1][i / 2].surrounded == 0)
                    {
                        std::cout << " " << " " << " ";

                        if (i == row * 2 && (j == column + 1 || j == column))
                        {
                            setcolor(5);
                            std::cout << "|";
                            setcolor(15);
                            continue;
                        }

                        std::cout << "|";
                        
                        continue;
                    }

                    if (boxes[j - 1][i / 2].surrounded == 1)
                    {
                        std::cout << " ";
                        setcolor(9);
                        std::cout << boxes[j - 1][i / 2].surrounded;
                        setcolor(15);
                        std::cout << " ";

                        if (i == row * 2 && (j == column + 1 || j == column))
                        {
                            setcolor(5);
                            std::cout << "|";
                            setcolor(15);
                            continue;
                        }

                        std::cout << "|";
                        
                        continue;
                    }

                    if (boxes[j - 1][i / 2].surrounded == 2)
                    {
                        
                        std::cout << " ";
                        setcolor(2);
                        std::cout << boxes[j - 1][i / 2].surrounded;
                        setcolor(15);
                        std::cout << " ";

                        if (i == row * 2 && (j == column + 1 || j == column))
                        {
                            setcolor(5);
                            std::cout << "|";
                            setcolor(15);
                            continue;
                        }

                        std::cout << "|";
                        
                        continue;
                    }

                    if (boxes[j - 1][i / 2].surrounded == 3)
                    {
                        
                        std::cout << " ";
                        setcolor(12);
                        std::cout << boxes[j - 1][i / 2].surrounded;
                        setcolor(15);
                        std::cout << " ";

                        if (i == row * 2 && (j == column + 1 || j == column))
                        {
                            setcolor(5);
                            std::cout << "|";
                            setcolor(15);
                            continue;
                        }

                        std::cout << "|";
            
                        continue;
                    }

                    if (boxes[j - 1][i / 2].surrounded == 4)
                    {
                        
                        std::cout << " ";
                        setcolor(1);
                        std::cout << boxes[j - 1][i / 2].surrounded;
                        setcolor(15);
                        std::cout << " ";

                        if (i == row * 2 && (j == column + 1 || j == column))
                        {
                            setcolor(5);
                            std::cout << "|";
                            setcolor(15);
                            continue;
                        }

                        std::cout << "|";
                        
                        continue;
                    }

                    if (boxes[j - 1][i / 2].surrounded == 5)
                    {
                        
                        std::cout << " ";
                        setcolor(13);
                        std::cout << boxes[j - 1][i / 2].surrounded;
                        setcolor(15);
                        std::cout << " ";

                        if (i == row * 2 && (j == column + 1 || j == column))
                        {
                            setcolor(5);
                            std::cout << "|";
                            setcolor(15);
                            continue;
                        }

                        std::cout << "|";
                            
                        continue;
                    }


                    std::cout << " " << boxes[j - 1][i / 2].surrounded << " ";

                    if (i == row * 2 && (j == column + 1 || j == column))
                    {
                        setcolor(5);
                        std::cout << "|";
                        setcolor(15);
                        continue;
                    }

                    std::cout << "|";
                    continue;
                }

                if (boxes[j - 1][i / 2].flagged)
                {
                    
                    std::cout << " ";
                    setcolor(4);
                    std::cout << "*";
                    setcolor(15);
                    std::cout << " ";

                    if (i == row * 2 && (j == column + 1 || j == column))
                    {
                        setcolor(5);
                        std::cout << "|";
                        setcolor(15);
                        continue;
                    }

                    std::cout << "|";
                    
                    continue;
                }
                
                std::cout << " ";
                setcolor(6);
                std::cout << "?";
                setcolor(15);
                std::cout << " ";

                if (i == row * 2 && (j == column + 1 || j == column))
                {
                    setcolor(5);
                    std::cout << "|";
                    setcolor(15);
                    continue;
                }

                std::cout << "|";
                
            }
        }

        std::cout << endl;
    }

    return opened; 
}


//TAKE COMMANDS, EXECUTE COMMANDS

string take_command(int height, int width, int thbd, int game_mode, int hiscore, string cell)
{

    string cmd, temp;

    do
    {
        cmd = handleInput(cell, height, width, game_mode, hiscore);
        temp = cmd;

        if (check_cell(temp, height, width) && temp.length() == 4)
        {
            temp.resize(3);
            cell = temp;
        }

        if (cmd == "q")
        {
            break;
        }

        if (cmd == "n")
        {
            if (newgame())
            {
                return "new";
            }
            else
            {
                system("cls");
                draw(height, width, game_mode, hiscore, cell);
                continue;
            }
            
        }
        
    } while (cmd.size() != 4 || (cmd[3] != 'o' && cmd[3] != 'f' && cmd[3] != 'u') || !check_cell(cmd, height, width));

    
    if (cmd == "q")
    {        
        
        if (save(height, width, thbd, 5, -1, game_mode, 1))
        {           
            std::cout << "Your process is saved." << endl;
            std::cout << "Press enter to continue...";
            std::cin.ignore(1000, '\n');
            return "y";
        }
        

        if (newgame())
        {
            return "new";
        }

        return "n";
        
    }

   
    int pos_x = ((int) cmd[0]) - 64;
    int pos_y = stoi(cmd.substr(1));


    if (cmd[3] == 'f')
    {
        boxes[pos_x][pos_y].flagged = true;
    }
    if (cmd[3] == 'u')
    {
        boxes[pos_x][pos_y].flagged = false;
    }
    if (cmd[3] == 'o')
    {
        open(pos_x, pos_y, height, width);
    }
    
    return cmd;
}


//CHECK VALID CELL

bool check_cell(string cmd, int height, int width)
{
    
    if ((cmd[0] > (char) (width + 64) || cmd[0] < 'A') && (((int) cmd[1] - 48) * 10 + (int) cmd[2] - 48 > height || ((int) cmd[1] - 48) * 10 + (int) cmd[2] - 48 < 1))
    {
        return false;
    }

    return true;
}


//HANDLE INPUT

string handleInput(string cell, int height, int width, int game_mode, int hiscore)
{
    string cmd, remained_cmd;

    std::cout << "Enter command (q to quit, n to remake): ";

    int ch;
    ch = _getch();

    if (ch != 224)
    {
        string s1 = string(1, ch);
        std::cout << s1;
        getline(std::cin, remained_cmd);
        cmd = s1 + remained_cmd;
        return cmd;
    }

    else
    {
        cmd = move_with_arrow(cell, height, width, game_mode, hiscore);
    }

    return cmd;
}


//MOVE WITH ARROW

string move_with_arrow(string cell, int height, int width, int game_mode, int hiscore)
{
    string new_cell, cmd, action;
    int ch;
    char c = cell[0];
    int row = stoi(cell.substr(1));
    ch = _getch();

    if (ch == 72)
    {
        string column = string(1, c);
        --row;
        if (row < 1)
        {
            row = height;
        }

        string str_row = to_string(row);
        string formatted_row = string(2 - str_row.length(), '0') + str_row;

        new_cell = column + formatted_row;

        std::cout << endl;
        system("cls");
        draw(height, width, game_mode, hiscore, new_cell);
        std::cout << "Move with arrow ( add o or f or u to finish command): " << new_cell;
        ch = _getch();
        std::cout << endl;
        action = string(1, ch);

        if (ch != 224)
        {
            cmd = new_cell + action;
            return cmd;
        }
        
        cmd = move_with_arrow(new_cell, height, width, game_mode, hiscore);

    }


    else if (ch == 80)
    {
        string column = string(1, c);
        ++row;
        if (row > height)
        {
            row = 1;
        }

        string str_row = to_string(row);
        string formatted_row = string(2 - str_row.length(), '0') + str_row;

        new_cell = column + formatted_row;

        std::cout << endl;
        system("cls");
        draw(height, width, game_mode, hiscore, new_cell);
        std::cout << "Move with arrow (add o or f or u to finish command): " << new_cell;
        ch = _getch();
        std::cout << endl;
        action = string(1, ch);

        if (ch != 224)
        {
            cmd = new_cell + action;
            return cmd;
        }
        
        cmd = move_with_arrow(new_cell, height, width, game_mode, hiscore);
    }


    else if (ch == 77)
    {
        
        ++c;

        if (c > (char) (width + 64))
        {
            c = 'A';
        }

        string column = string(1, c);

        string str_row = to_string(row);
        string formatted_row = string(2 - str_row.length(), '0') + str_row;

        new_cell = column + formatted_row;

        std::cout << endl;
        system("cls");
        draw(height, width, game_mode, hiscore, new_cell);
        std::cout << "Move with arrow (add o or f or u to finish command): " << new_cell;
        ch = _getch();
        std::cout << endl;
        action = string(1, ch);

        if (ch != 224)
        {
            cmd = new_cell + action;
            return cmd;
        }
        
        cmd = move_with_arrow(new_cell, height, width, game_mode, hiscore);

    }


    else if (ch == 75)
    {
        --c;

        if (c < 'A')
        {
            c = (char) (width + 64);
        }

        string column = string(1, c);

        string str_row = to_string(row);
        string formatted_row = string(2 - str_row.length(), '0') + str_row;

        new_cell = column + formatted_row;

        std::cout << endl;
        system("cls");
        draw(height, width, game_mode, hiscore, new_cell);
        std::cout << "Move with arrow (add o or f or u to finish command): " << new_cell;
        ch = _getch();
        std::cout << endl;
        action = string(1, ch);

        if (ch != 224)
        {
            cmd = new_cell + action;
            return cmd;
        }
        
        cmd = move_with_arrow(new_cell, height, width, game_mode, hiscore);
    }

    else
    {
        cmd = cell;
    }

    return cmd;

}



//OPEN NEIGHBOUR-CELLS IF CURRENT CELL SURROUNDED IS SET TO 0


void open(int pos_x, int pos_y, int height, int width)
{
  
    if (boxes[pos_x][pos_y].status == 1)
    {
        return;
    }

    if (boxes[pos_x][pos_y].surrounded != 0)
    {
        boxes[pos_x][pos_y].status = 1;
        
        return;
    }

    if (pos_x < 1 || pos_x > width)
    {
        
        return;
    }

    if (pos_y < 1 || pos_y > height)
    {
        
        return;
    }

    boxes[pos_x][pos_y].status = 1;

    
    for (int i = pos_y - 1; i < pos_y + 2; i++)
    {
        for (int j = pos_x - 1; j < pos_x + 2; j++)
        {
           
            open(j, i, height, width);
        }
    }

    return;

}


// FOR CALCULATE 3BD'S

void reverse_open(int pos_x, int pos_y, int height, int width)
{
    int start_y = pos_y - 1;
    int end_y = pos_y + 2;
    int start_x = pos_x - 1;
    int end_x = pos_x +2;

    
    for (int i = start_y; i < end_y; i++)
    {
        if (i < 1 || i > height)
        {
            continue;
        }

        for (int j = pos_x - 1; j < pos_x + 2; j++)
        {
            if (j < 1 || j > width)
            {
                continue;
            }
           
            if (boxes[j][i].attribute == 0)
            {
                if (boxes[j][i].status == 0)
                {
                    if (boxes[j][i].surrounded == 0)
                    {
                        open(j, i, height, width);
                        return;
                    }
                }
            }
        }
    }

    return;
}


//CHECK FOR GAME-OVER

bool game_over(string cmd)
{
    if (cmd[3] == 'o')
    {
        int pos_x = ((int) cmd[0]) - 64;
        int pos_y = stoi(cmd.substr(1));
        if (boxes[pos_x][pos_y].attribute == 1)
        {
            return true;
        }
        
    }

    return false;
}


//THIS FUNCTION IS CALLED WHENEVER I FEEL RIGHT (OR MAY BE NOT)

bool newgame()
{
    system("cls");
    string confirm;

    std::cout << endl;
    
    std::cout << "New game ? (If your game has not finished, the current proccess will be lost)" << endl;

    std:: cout <<  R"(
        [0;5;37;47m                             ;SX%;%.                                  [0m
[0;5;37;47m  .  . .  .  . .  .  . .  .%[0;1;37;47mXX[0;1;30;47m@S%[0;1;37;47m%:[0;1;30;47m:[0;5;37;47m8. .  . .  .  . .  .  . .  .  . . [0m
[0;5;37;47m   .       .       .      .[0;1;30;47mtS[0;1;30;43m8X[0;5;33;43m ..:;S[0;33;47m8[0;1;37;47m@[0;5;37;47m;.       .       .       .     [0m
[0;5;37;47m     .  .    .  .    .  . [0;1;37;47mX[0;1;30;43m8[0;1;33;43mt[0;5;33;43m         :[0;1;30;47m.[0;5;37;47m:  . .    .  .    .  .    .  .[0m
[0;5;37;47m .       .       .       @[0;1;30;43m8[0;5;33;43m [0;5;33;41m;[0;1;33;43m;[0;5;33;43m [0;5;1;33;41m8[0;5;33;43m  [0;5;33;41m [0;5;33;43m    [0;33;47m8[0;1;37;47mX[0;5;37;47m.     .      .       .       [0m
[0;5;37;47m   .  .    .  .    .  . .[0;1;37;47m.[0;1;33;43m.[0;5;33;43m.[0;1;33;43m.[0;5;1;31;43m8[0;5;33;43m       [0;5;33;41m [0;5;33;43m  [0;1;37;47m [0;5;37;47m@ .     . .    .  .    .  .  [0m
[0;5;37;47m  .    .  .    .  .      [0;1;37;47m.[0;1;31;43m8[0;5;33;43m [0;5;33;41m.[0;5;37;43mX[0;5;33;43m.[0;1;31;43m8[0;37;43m8@[0;1;33;43m:[0;5;33;43m  [0;1;33;43mX[0;33;47m8[0;1;33;47m8[0;1;33;43m%[0;1;37;47m [0;5;37;47m:   .      .   .   .   .   .[0m
[0;5;37;47m    .       .       . .  8[0;1;30;43m8[0;5;33;43m.[0;1;33;43m:[0;1;31;43m8[0;1;37;47m [0;5;37;47mSt .[0;1;37;47m.[0;1;30;47m8[0;5;37;47m%::%[0;1;37;47m.[0;5;37;47m% .   .  .   .   .   .   .  [0m
[0;5;37;47m  .   . .    .  .       ..[0;1;30;47mX[0;1;31;43m8[0;5;33;43m:[0;1;30;47m8[0;5;37;47mt[0;1;37;47mX[0;5;37;47m8:  [0;1;37;47m;[0;5;37;47m@X@[0;1;37;47m%t[0;5;37;47m8          .    ;8[0;1;37;47m8[0;5;37;47mS..      [0m
[0;5;37;47m    .  tS..    .  . .    [0;1;37;47mt[0;1;30;47m8[0;1;30;43m888[0;5;37;47m@.. .S[0;1;30;47m8[0;5;37;43m@8[0;1;33;47m8[0;1;30;47m8:[0;5;37;47m. . .  . .    .t[0;1;30;47mX[0;1;33;43mt[0;5;33;43m%[0;1;30;43m8[0;1;30;47m8[0;1;37;47m:[0;5;37;47m: .  .[0m
[0;5;37;47m  . t[0;1;37;47m8[0;1;30;47m:[0;1;30;43mS[0;5;33;43m:[0;33;47m8[0;1;37;47mS[0;5;37;47m; .        .  [0;1;37;47mS[0;1;30;47mt[0;5;33;40mX[0;5;33;41m:[0;1;33;43mX[0;1;33;47m8X[0;1;37;47mS@[0;1;33;47mS[0;5;33;43m;[0;1;33;43m:[0;5;33;43m [0;1;31;43m8[0;5;33;43m:[0;5;33;40m%[0;1;30;47mX[0;5;37;47mt.::        ..[0;1;37;47m@[0;37;43m@[0;1;33;43m%[0;5;33;43mt[0;31;43m8[0;5;33;43m;.[0;1;31;43m8[0;1;37;47m;[0;5;37;47m: .  [0m
[0;5;37;47m   8[0;1;30;43m8[0;5;33;43m  [0;1;31;43m8[0;1;33;43mt[0;5;33;43m.%[0;37;43mX[0;1;37;47m@[0;5;37;47m   .  .     %[0;1;37;47m:[0;1;33;43mt[0;5;33;43mX[0;1;33;43m.[0;5;1;31;43m8[0;5;33;43mt[0;1;31;43m8[0;33;47m88[0;35;47m@[0;33;47m8[0;1;31;47m@[0;1;33;47mX[0;1;30;47m8[0;1;33;47mSS%[0;1;30;47m8t%[0;5;37;47mX.  .    [0;1;37;47m@[0;1;33;43m;[0;5;33;43m : :[0;31;45m8[0;1;33;43mt[0;5;33;43m.[0;1;33;43mS[0;33;47m8[0;5;37;47m.   [0m
[0;5;37;47m  [0;1;37;47m@[0;1;33;43m@[0;5;33;43m:[0;1;33;43m.:;[0;5;37;43m%[0;5;33;43m [0;37;43mX[0;5;33;43m [0;1;33;47m8[0;1;37;47m;[0;5;37;47m;     .  . @[0;1;30;43m88[0;1;33;43m.[0;5;1;31;43m8[0;5;33;40m;[0;1;30;47m8[0;1;33;47mSXX@SSXSSSS8[0;1;30;43m8[0;1;30;47m8[0;5;37;47mt     .;[0;1;37;47m@[0;37;43m8[0;5;33;43m..[0;33;41m8[0;33;47m8[0;37;43mX[0;1;33;43m;[0;5;33;43m [0;1;30;43mX[0;5;33;43m;[0;1;30;47mS[0;5;37;47m:  .[0m
[0;5;37;47m .[0;1;37;47m [0;1;30;43m@[0;5;33;43m   [0;31;43m@[0;33;47m8[0;1;30;43m8[0;5;33;43m   [0;5;37;43m8[0;1;30;47mt[0;1;37;47mS[0;5;37;47mt .       :[0;1;37;47m:[0;37;43m@[0;1;31;43m8[0;33;47m8[0;1;33;47m8SSS[0;1;31;47mS[0;1;33;47mSS[0;1;31;47mS[0;1;33;47mSS[0;1;31;47mXX[0;1;33;47mX[0;1;31;47mX[0;1;37;47m [0;5;37;47m: .  .[0;1;37;47mX[0;5;33;40m:[0;5;33;43m%[0;1;31;43m8[0;5;33;43m .[0;1;31;43m8[0;5;33;43m   [0;1;31;43m8[0;5;37;43mS[0;33;47m@[0;5;37;47m8..  [0m
[0;5;37;47m  S[0;33;47m8[0;33;41m@[0;1;30;43m8[0;5;33;41m;[0;5;33;43mX [0;5;1;31;43m8[0;5;33;43m:[0;5;1;31;43m8[0;5;33;43m    [0;1;33;47m8[0;1;37;47m:8[0;5;37;47m%.. .   %[0;37;43m@[0;5;33;43m [0;31;45m8[0;1;33;47mXS[0;1;31;47mS[0;1;33;47mSSSSS[0;1;31;47mS[0;5;37;43m8[0;1;37;47m [0;1;31;47mS[0;1;37;47m%[0;5;37;47m8;. ;[0;1;37;47m8.[0;37;43m8[0;1;33;43mt[0;5;33;43m [0;1;33;43m.[0;5;33;43m [0;5;1;31;43m8[0;5;33;43m   [0;5;1;31;43m@[0;5;37;43m@[0;1;33;47mX[0;1;37;47m:[0;5;37;47m8.    [0m
[0;5;37;47m  . 8[0;1;37;47m [0;33;47m8[0;1;31;43m8[0;1;33;43m;[0;5;33;43m . [0;5;1;31;43m8[0;5;33;43m      ;[0;1;33;47m8[0;1;37;47m;8[0;5;37;47mt;: X[0;1;30;43m8[0;5;1;31;43m8[0;1;33;43m:[0;5;33;41m%[0;1;37;47m [0;5;37;43m8[0;1;37;47m [0;5;1;31;43m8[0;1;37;47m [0;1;33;47mX[0;5;37;41m8[0;1;37;47m  [0;5;37;47m8@88[0;1;37;47m;[0;1;33;47mS[0;33;47m8[0;1;33;43m.[0;5;33;43m:[0;1;31;43m8[0;5;33;43m  [0;5;1;31;43m8[0;5;33;43m    [0;5;1;31;43m8[0;5;37;43m@[0;1;37;47m S[0;5;37;47m;    .  [0m
[0;5;37;47m  . ;  [0;1;37;47mX[0;37;43m8[0;5;33;41m%[0;1;31;43m8[0;5;33;43m: [0;5;1;31;43m8[0;5;33;43m [0;5;1;31;43m8[0;5;33;43m      .[0;37;43mX[0;1;30;43m8[0;1;30;47m8[0;1;37;47m%X[0;1;30;43m8[0;5;33;43m.[0;1;31;43m8[0;5;37;43m8[0;1;31;43m8[0;1;30;43m8[0;1;31;47m8[0;33;47m8[0;5;33;41m [0;5;37;43m8[0;1;33;47m8[0;1;30;47m8[0;5;37;47mX[0;1;37;47m;  [0;1;30;47m8[0;1;31;43m8[0;5;33;43m:[0;5;33;41m:[0;5;33;43m..    [0;5;1;31;43m@[0;5;33;43m [0;5;1;31;43m8[0;5;33;43m [0;1;33;47m@[0;1;37;47m [0;5;37;47mS  . .    [0m
[0;5;37;47m    .  :t[0;1;37;47m8[0;33;47m@[0;1;31;43m8[0;1;33;43m:[0;5;33;43m [0;5;33;41m:[0;5;33;43m. [0;5;1;31;43m8[0;5;33;43m [0;5;1;31;43m8[0;5;33;43m    ;[0;1;30;47m:[0;1;37;47m8[0;1;30;47mS8[0;1;37;47mS8[0;5;37;47m@tX[0;1;37;47m.t[0;5;33;43m; [0;5;37;43m8[0;35;47m@[0;1;37;47m. ;[0;5;37;47m88[0;1;37;47mX[0;33;47m@[0;5;33;43m.  [0;5;1;31;43m8[0;5;33;43m [0;5;1;31;43m8[0;5;33;43m   [0;5;37;43m8[0;1;37;47m t[0;5;37;47mt .      . [0m
[0;5;37;47m  .  .  .  .[0;1;37;47m:[0;33;47m8[0;1;33;43m%:[0;5;1;31;43m8[0;5;33;43m:. [0;5;1;31;43m8[0;5;33;43m [0;5;1;31;43m8[0;5;33;43m [0;5;37;40mt[0;5;37;47m; .[0;1;37;47m@[0;1;30;47m.[0;5;37;47m;..8[0;1;37;47mX[0;5;37;47m:@[0;33;47m8[0;5;37;43m@[0;1;30;47mS[0;5;37;47m8@[0;1;37;47m;[0;5;37;47m:.  [0;1;37;47m.[0;1;33;43m;[0;5;33;43m     [0;1;30;47m8[0;1;37;47m [0;5;37;47m8%. .   .     [0m
[0;5;37;47m    .         [0;1;37;47m@[0;33;47m8[0;1;31;43m88[0;1;33;43m.[0;5;1;31;43m@[0;5;33;43m   [0;1;31;43m8[0;5;37;47mt   .[0;1;37;47mS[0;1;30;47m;[0;1;37;47m;;.[0;5;37;47m; .%S.[0;1;37;47m .[0;5;37;47m8:    [0;1;37;47m [0;5;33;43m [0;5;1;31;43m8[0;5;37;43mX[0;1;30;47m8[0;1;37;47m [0;5;37;47m8;.  .     . .  [0m
[0;5;37;47m      .   .   .;8[0;1;33;47m@[0;1;31;43m8[0;5;33;43m;[0;5;33;41m%[0;5;33;43mt[0;37;43m8[0;5;37;47m8.    ;[0;1;37;47mS[0;5;37;47m:..    . X[0;1;37;47m:[0;5;37;47m; .   S[0;1;30;47m8[0;1;33;47mX[0;1;37;47m:[0;5;37;47m8:.  .   . .      [0m
[0;5;37;47m .  .   .  .   ::  [0;1;30;47m 8@[0;5;37;47m8:. .   .    .    .8X    .8[0;1;37;47m%[0;5;37;47m.        .      .   [0m
[0;5;37;47m      .    .  .    :...     .    .   .  .: . .  .   .  .    .  .    . [0m

    )" << endl;

    do
    {
        std::cout << "Press y to confirm, if not press n: ";
        getline(cin, confirm);

    } while (confirm.size() != 1 || (confirm[0] != 'y' && confirm[0] != 'n'));


    if (confirm == "n")
    {
        return false;
    }

    return true;
}


// SAVING SYSTEM WORKS BASED ON SQLITE

bool save(int height, int width, int thbd, int time, int hiscore, int game_mode, int cases)
{
    
    if (cases == 1)
    {
        int upper_hi = height + 2;
        int upper_wi = width + 2;
        string is_save;

        std::cout << "Do you want to save the process ?" << endl;

        do
        {
            std::cout << "Enter y if yes, else enter n and the process will be lost: ";
            getline(std::cin, is_save);

        } while (is_save.size() != 1 || (is_save[0] != 'y' && is_save[0] != 'n'));


        if (is_save == "y")
        {
            sqlite3* DB; 
            sqlite3_stmt *st;
            int exit = 0; 
            exit = sqlite3_open("minesdata.db", &DB);

            std::cout << "....." << endl;
            std::cout << endl; 
            string sql3 = "UPDATE minesdata SET attribute = ?, status = ?, surrounded = ?, flagged = ?, height = ?, width = ?, thbd = ?, mode = ? WHERE column = ? AND row = ?;"; 

            for (int i = 0; i < upper_hi; i++)
            {
                for (int j = 0; j < upper_wi; j++)
                {
                    int rc = sqlite3_prepare_v2(DB, sql3.c_str(), -1, &st, NULL);
                    if (rc == SQLITE_OK)
                    {
                        
                        sqlite3_bind_int(st, 1, boxes[j][i].attribute);
                        sqlite3_bind_int(st, 2, boxes[j][i].status);
                        sqlite3_bind_int(st, 3, boxes[j][i].surrounded);
                        sqlite3_bind_int(st, 4, boxes[j][i].flagged);
                        sqlite3_bind_int(st, 5, height);
                        sqlite3_bind_int(st, 6, width);
                        sqlite3_bind_int(st, 7, thbd);
                        sqlite3_bind_int(st, 8, game_mode);
                        sqlite3_bind_int(st, 9, i);
                        sqlite3_bind_int(st, 10, j);
                        sqlite3_step(st);
                        sqlite3_finalize(st);
                    }
                }
            }
            
            sqlite3_close(DB); 
            return true;
        }
    }
    
    if (cases == 2)
    {
        sqlite3* DB; 
        sqlite3_stmt *st;
        int exit = 0; 
        exit = sqlite3_open("minesdata.db", &DB);

        string sql4 = "UPDATE minesdata SET time = ? WHERE column = ? AND row = ?;";

        int re = sqlite3_prepare_v2(DB, sql4.c_str(), -1, &st, NULL);

        if (re == SQLITE_OK)
        {
            sqlite3_bind_int(st, 1, time);
            sqlite3_bind_int(st, 2, 0);
            sqlite3_bind_int(st, 3, 0);
            sqlite3_step(st);
            sqlite3_finalize(st);
        }

        sqlite3_close(DB);
  
    }


    if (cases == 3)
    {
        sqlite3* DB; 
        sqlite3_stmt *st;
        int exit = 0; 
        exit = sqlite3_open("minesdata.db", &DB);

        string sql5 = "UPDATE minesdata SET hiscore = ? WHERE column = ? AND row = ?;";

        int re = sqlite3_prepare_v2(DB, sql5.c_str(), -1, &st, NULL);

        if (re == SQLITE_OK)
        {
            sqlite3_bind_int(st, 1, hiscore);
            sqlite3_bind_int(st, 2, 0);
            sqlite3_bind_int(st, 3, game_mode);
            sqlite3_step(st);
            sqlite3_finalize(st);
        }

        sqlite3_close(DB);

    }

    return false;
}



//TAKE HIGHSCORE IN THE DATABASE

int receive_highscore(int game_mode)
{
    sqlite3* db;
    sqlite3_stmt *st;
    int value = 0;
    int exit = 0;
    int hiscore;
    exit = sqlite3_open("minesdata.db", &db);

    
    string sql1 = "SELECT * FROM minesdata WHERE column = ? AND row = ?;";

    int rt = sqlite3_prepare_v2(db, sql1.c_str(), -1, &st, NULL);

    if (rt == SQLITE_OK)
    {
        sqlite3_bind_int(st, 1, value);
        sqlite3_bind_int(st, 2, game_mode);
        sqlite3_step(st);

        hiscore = sqlite3_column_int(st, 10);
        sqlite3_finalize(st);
    }

    return hiscore;
}



//MANAGE HIGHSCORE

bool manage_high_score(int score, int high_score, int game_mode)
{
    system("cls");
    string mode;

    if (game_mode == 0) mode = "(easy mode)";
    else if (game_mode == 1) mode = "(medium mode)";
    else if (game_mode == 2) mode = "(hard mode)";
    else return false;

    if (score > high_score)
    {
        std::cout << R"(
        [0;34;40m:[0;32;40m;[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0;32;40mt[0;31;40mt[0;34;40mt[0m
[0;34;40m:[0;1;30;40mS[0;32;40mt[0;31;40m%[0;34;40m%[0;32;40mS[0;31;40mS[0;34;40mS[0;32;40mS[0;31;40mS[0;34;40mS[0;32;40mS[0;31;40mS[0;34;40mS[0;32;40mS[0;31;40mS[0;34;40mS[0;32;40mS[0;31;40mS[0;34;40mS[0;32;40mS[0;31;40mS[0;34;40mS[0;32;40mS[0;31;40mS[0;34;40mS[0;32;40mS[0;31;40mS[0;34;40mS[0;32;40mS[0;31;40m%[0;34;40m%[0;32;40m%[0;31;40mS[0;34;40m%[0;32;40m%[0;31;40m%[0;34;40mS[0;32;40mS[0;31;40mS[0;34;40m%[0;32;40m%[0;31;40m%[0;34;40m%[0;32;40m%[0;31;40m%[0;34;40m%[0;32;40m%[0;31;40m%[0;34;40m%[0;32;40m%[0;31;40m%[0;34;40m%[0;32;40m%[0;31;40m%[0;34;40m%[0;32;40m%[0;31;40m%[0;34;40m%[0;32;40m%[0;31;40m%[0;34;40m%[0;32;40m%[0;31;40m%[0;34;40m%[0;32;40m%[0;31;40m%[0;34;40mS[0;32;40mS[0;31;40mS[0;34;40mS[0;32;40mS[0;31;40mS[0;34;40mS[0;32;40mS[0;31;40mS[0;34;40mS[0;32;40mS[0;31;40mS[0;34;40mS[0;32;40mS[0;31;40mS[0;34;40mS[0;32;40mS[0;31;40mS[0;34;40mS[0;32;40mS[0;31;40mS[0;34;40mS[0;32;40mS[0;31;40mS[0;34;40mS[0;32;40mS[0;31;40mS[0;34;40mS[0;32;40mS[0;31;40mS[0;34;40m%[0;32;40m%[0;31;40m%[0m
[0;34;40m:[0;31;40mt[0;34;40m%[0;32;40m%[0;5;37;40mX[0;1;37;47m%XXS@XS8XX8@X88X88@888S[0;5;37;40mS[0;5;34;40mS[0;5;30;40m@888@@[0;5;31;40mS[0;5;32;40mS[0;5;35;40mS[0;5;33;40m;;[0;5;30;40mX8[0;1;30;40mXX@@88@[0;31;40m%[0;1;30;40m8[0;5;30;40m8[0;5;31;40mS[0;5;32;40mS[0;1;30;40m88888888[0;5;30;40m8[0;1;30;40m8[0;5;30;40m@[0;5;36;40m%[0;5;31;40mS[0;5;36;40m;[0;5;37;40mX[0;1;37;47m%[0;5;37;47m8X@@X8@X8@X8@X@@X@@X@@X@[0;1;37;47m8[0;5;30;40mS[0;32;40m;[0;1;30;40mX[0;34;40mt[0m
[0;34;40m:[0;32;40m%[0;1;30;40mX[0;31;40m;[0;5;37;40mX[0;5;37;47m@8@@@XX@XXXXXSXSSS%%t@[0;5;37;40m8[0;5;34;40mX[0;5;30;40m@[0;1;30;40m8[0;31;40mS[0;1;30;40m8@[0;31;40m@[0;1;30;40m@SX[0;5;30;40m8[0;5;31;40mS[0;5;36;40mt[0;5;35;40mt[0;5;33;40m%[0;5;35;40m%[0;5;33;40m@[0;5;30;40m@[0;5;31;40m8[0;5;30;40m8[0;1;30;40m8[0;31;40mS[0;32;40mX[0;31;40m%[0;1;30;40mX@[0;5;30;40m@@88[0;1;30;40m@@8[0;31;40m@[0;1;30;40m88@[0;31;40mX[0;5;30;40m8X[0;5;35;40m;[0;5;36;40m:[0;1;30;47m8[0;5;37;47m8  .          . .  .  . %[0;5;30;40mX[0;34;40m;[0;31;40mt[0;32;40mt[0m
[0;34;40m:[0;31;40m%[0;34;40mt[0;32;40mt[0;5;37;40mX[0;5;37;47m@@@@@X@XXXXXSSSSSS%S[0;1;37;47m%[0;5;36;40m:X[0;1;30;40m8888[0;31;40mS[0;1;30;40m88[0;31;40m%[0;1;30;40m@[0;31;40m%[0;32;40m%[0;1;30;40mX@[0;5;33;40mX[0;5;35;40mt[0;5;33;40mt[0;5;35;40mX[0;5;30;40mX@8[0;1;30;40m88X@[0;31;40mS[0;1;30;40m8[0;5;30;40m8[0;5;31;40m8[0;5;30;40m88[0;1;30;40m@8[0;5;30;40m8[0;1;30;40m8[0;31;40mS[0;1;30;40m8[0;31;40m%[0;1;30;40m88[0;5;30;40m8S[0;5;33;40mS[0;5;36;40m;[0;5;37;40m%[0;1;37;47m:[0;5;37;47m;   .  .  .    .  .   %[0;5;30;40mX[0;32;40m;[0;34;40m%[0;31;40m%[0m
[0;34;40m:[0;32;40m%[0;1;30;40mX[0;34;40m;[0;5;37;40m@[0;5;37;47m@@@@@XXXXXSXSSSSS%8[0;36;47m8[0;5;34;40m8@[0;5;31;40m8[0;5;30;40m@8[0;5;31;40m@[0;1;30;40m8[0;5;30;40m8[0;31;40mX[0;1;30;40m88[0;31;40mX[0;5;30;40mX[0;5;31;40m8[0;1;30;40m8[0;31;40mX[0;1;30;40m@[0;5;30;40m8[0;5;31;40m@[0;5;30;40m@[0;5;31;40mS[0;5;30;40m@[0;5;31;40m8[0;1;30;40m8[0;5;31;40m8[0;5;30;40m8[0;5;31;40m8[0;5;30;40m@[0;5;31;40m@[0;5;30;40m8[0;5;31;40mX%X[0;5;30;40m@8[0;31;40m8[0;5;30;40m8[0;32;40mX[0;1;30;40mX888[0;5;30;40m@[0;5;31;40mS[0;5;36;40mS[0;5;31;40m@[0;5;36;40m@[0;5;35;40m:[0;1;30;47mS[0;5;37;47mX.     .   .   .   . %[0;5;30;40mX[0;34;40m;[0;32;40m%[0;1;30;40mS[0m
[0;34;40m:[0;31;40m%[0;34;40mt[0;31;40mt[0;5;37;40m8[0;5;37;47mX@@X@XXXXSSSSSSS%[0;1;37;47m@[0;1;30;46m8[0;5;34;40m@[0;5;31;40mX[0;5;32;40mX[0;5;34;40mS[0;5;31;40m@[0;5;30;40mXXX[0;5;31;40mX[0;5;30;40m8[0;1;30;40m8[0;5;31;40m@[0;5;30;40m88[0;1;30;40m8[0;5;31;40m8[0;5;30;40m8[0;5;31;40mX[0;5;33;40m%. .:;ttS[0;5;31;40mS[0;5;33;40m%t[0;5;35;40mt[0;5;33;40m%[0;5;35;40mt[0;5;33;40mSS[0;5;31;40mX[0;5;32;40m8[0;1;30;40m8[0;5;31;40m8[0;1;30;40m@88[0;5;31;40m8[0;5;30;40m8[0;5;32;40mX[0;5;31;40mS[0;5;34;40mS[0;5;30;40m@[0;5;33;40mt[0;5;36;40m [0;1;30;47m:[0;5;37;47m@  .    .  .    .   %[0;5;30;40mX[0;31;40m;[0;34;40mt[0;31;40mt[0m
[0;34;40m:[0;32;40m%[0;1;30;40mS[0;34;40m;[0;5;37;40m8[0;5;37;47mX@X@X@XXSXSSSS%S[0;1;36;47mX[0;5;36;40m [0;5;34;40mS[0;5;30;40m888[0;1;30;40m8[0;5;33;40mt[0;5;31;40mX[0;5;33;40mXtt[0;5;31;40mX[0;5;30;40m@[0;5;31;40mX[0;1;30;40m8[0;5;31;40m8[0;1;30;40m8[0;5;30;40m@[0;5;33;40m8[0;5;35;40mS[0;5;33;40m%  [0;5;37;40mS[0;5;33;40m   [0;5;37;40mt[0;1;30;47m8[0;5;33;40m  :;[0;5;35;40m.[0;5;33;40m [0;5;37;40m%%[0;5;33;40m;[0;5;31;40m@8[0;1;30;40m8[0;5;31;40m8[0;1;30;40m8[0;5;30;40m8X[0;5;31;40m@[0;5;30;40m8@[0;5;33;40m8[0;5;35;40mS[0;5;36;40m:[0;5;37;40m8[0;1;30;47m%@[0;1;37;47m8[0;5;37;47m   . .    . .   . %[0;5;30;40mS[0;32;40m;[0;1;30;40mS[0;32;40mt[0m
[0;34;40m:[0;31;40m%[0;32;40mt[0;34;40mt[0;5;37;40m8[0;5;37;47mX@@XXXSSXSS[0;5;1;36;47m8[0;5;37;47m@%@[0;36;47m8[0;5;37;40m%[0;5;36;40m.[0;5;34;40mS[0;5;30;40m8[0;5;31;40m@[0;5;35;40m%[0;5;31;40mSS[0;5;30;40mX[0;5;35;40mS[0;5;33;40mt[0;5;35;40m.[0;5;33;40m %SS[0;5;31;40m8@88[0;5;33;40mX[0;5;35;40m%[0;5;33;40m;.[0;1;30;43m8[0;35;47m8[0;33;47m8[0;35;47m8[0;33;47m8[0;35;47m@[0;1;33;47m@[0;35;47m@[0;33;47m@[0;1;30;47m8[0;33;47m8[0;35;47m8[0;37;43m8[0;1;30;47m88[0;5;37;40mt[0;5;33;40m:[0;5;31;40m@[0;5;30;40m8[0;5;31;40m8[0;5;30;40m@[0;5;33;40mt[0;5;36;40m.[0;5;33;40m t[0;5;30;40m8[0;5;33;40m.[0;5;37;40m8[0;1;30;47m% 8S[0;5;37;47m@.     .      .   %[0;5;30;40mX[0;34;40m;[0;31;40mt[0;34;40mt[0m
[0;34;40m:[0;1;30;40mS[0;34;40mt[0;32;40mt[0;5;37;40m@[0;5;37;47mX@X@XX[0;5;1;36;47m8[0;5;37;47m8SSXX%%[0;1;36;47m8[0;5;35;40mt[0;5;36;40m.[0;5;35;40mt[0;5;31;40mS[0;5;35;40m.[0;5;33;40m [0;1;30;47m8[0;5;37;40mSS[0;5;33;40m  [0;1;30;47m88888[0;5;37;40m;%[0;5;33;40m::.[0;5;35;40m [0;1;30;47m8[0;33;47m8[0;35;47m@[0;1;31;47mS[0;33;47m@[0;1;31;47m@[0;33;47mX[0;1;31;47mXX[0;33;47mX[0;1;31;47mXS%[0;1;33;47m%[0;1;31;47mXS@[0;33;47mX[0;1;35;47m%[0;33;47m@[0;5;35;40m [0;5;31;40m8X[0;5;30;40mX[0;5;35;40mt[0;5;37;40mS8[0;5;35;40m .[0;5;33;40m [0;1;30;47m.;;%8[0;5;37;47m8:   .  . . .   . %[0;5;30;40mX[0;32;40m;[0;1;30;40mS[0;32;40m;[0m
[0;34;40m:[0;32;40mt[0;31;40mS[0;34;40mt[0;5;37;40m8[0;5;37;47mXXXXX@@XSSXS%8[0;1;30;47m8[0;5;36;40m;[0;5;35;40m  [0;5;37;40mX[0;1;30;47m888[0;33;47m8[0;1;30;47m8[0;33;47mX[0;35;47m@[0;33;47m8[0;1;31;47m@[0;1;30;47m8[0;1;31;47mX[0;33;47mS[0;1;35;47mS[0;1;33;47m@[0;35;47m@[0;1;30;47m8[0;1;37;47m [0;1;31;47m@[0;1;30;47m8[0;1;31;47mX[0;1;33;47m%[0;1;35;47m@[0;1;31;47m@[0;1;37;47m [0;1;31;47mX[0;1;37;47m [0;1;33;47mS[0;1;35;47m@[0;1;33;47mX[0;1;37;47m [0;1;35;47mS[0;1;33;47mX[0;1;35;47mS[0;1;33;47mS[0;1;37;47m [0;1;33;47mS[0;1;35;47mS[0;1;33;47mS[0;1;35;47mS[0;1;30;43m8[0;5;35;40mX[0;5;33;40m8[0;5;35;40mt[0;5;37;40mX[0;1;30;47m;8[0;5;33;40m [0;1;30;47m8888%%[0;5;37;47m8.            .   %[0;5;30;40mX[0;34;40m;[0;31;40mt[0;34;40mt[0m
[0;34;40m:[0;1;30;40mS[0;32;40mt[0;34;40mt[0;5;37;40m8[0;5;37;47mS@XX[0;5;1;36;47m8[0;5;37;47m8XSX[0;5;1;36;47m8[0;5;37;47m@%S[0;1;36;47mS[0;5;36;40m [0;5;37;40m%@[0;1;30;47m@88[0;33;47m8[0;35;47m8[0;33;47m8[0;1;31;47m8[0;35;47mX[0;1;31;47m@[0;1;30;47m8[0;1;37;47m [0;1;31;47mX[0;1;37;47m [0;1;31;47mX[0;1;33;47mS[0;1;35;47m8[0;1;33;47m@[0;1;31;47m@[0;1;35;47m%[0;1;33;47m@[0;1;31;47m8[0;1;35;47mS[0;1;31;47m@[0;1;33;47mX[0;1;31;47mX[0;1;37;47m [0;1;31;47mXS[0;1;35;47m%[0;1;33;47m8[0;1;35;47m@[0;5;37;43m8[0;1;35;47m@[0;1;33;47m@[0;1;31;47mS[0;1;37;47m [0;1;35;47mS[0;1;33;47mS[0;1;37;47m  [0;1;33;47mS[0;1;35;47mX[0;1;30;43m8[0;5;35;40mX[0;5;33;40m:[0;1;30;47m@[0;1;37;47m.[0;1;30;47m%[0;5;33;40m  [0;5;37;40m@[0;1;30;47m8@S[0;1;37;47m:[0;5;37;47m8..  . . .  .   . %[0;5;30;40mX[0;32;40m;[0;1;30;40mS[0;32;40mt[0m
[0;34;40m:[0;31;40mt[0;1;30;40mS[0;32;40m;[0;5;37;40m@[0;5;37;47mSX@88XXSX@S%@[0;1;36;47m%[0;5;37;40m%[0;5;35;40m [0;1;30;47m@X8[0;35;47m8[0;33;47m8[0;1;31;47m8[0;1;30;47m88[0;1;33;47mX[0;35;47mX[0;1;33;47mX[0;1;35;47m@[0;1;33;47m8[0;1;31;47m@[0;1;35;47m%[0;1;31;47m8[0;33;47mX[0;1;35;47mX[0;1;33;47m@[0;1;31;47m@[0;1;35;47mS[0;1;33;47mS[0;1;31;47mS[0;1;37;47m [0;1;35;47mX[0;1;33;47m@[0;1;35;47m@[0;1;33;47mX[0;1;35;47m%[0;1;33;47m8[0;1;35;47m8[0;1;33;47m8[0;1;31;47m8[0;1;37;47m [0;1;35;47mS[0;1;33;47mS[0;1;37;47m [0;5;37;43m8[0;5;1;37;45m8[0;5;37;43m8[0;5;1;37;45m8[0;1;33;47mX[0;1;37;47m [0;35;47m8[0;5;33;40m [0;1;30;47m88[0;1;37;47m  [0;1;30;47m8[0;5;37;40mS[0;1;30;47m8t[0;1;37;47m %8[0;5;37;47m@;        .   .   %[0;5;30;40mX[0;34;40m;[0;31;40mt[0;34;40mt[0m
[0;34;40m:[0;32;40mt[0;34;40mt[0;31;40mt[0;5;37;40m8[0;5;37;47mSXXXXSSSSS%%8[0;1;30;47m8[0;5;36;40m [0;5;37;40mS[0;1;30;47m@@[0;35;47m8[0;33;47m8[0;35;47m@[0;33;47mX[0;1;31;47mS[0;1;35;47mS[0;1;31;47m@[0;33;47mS[0;1;31;47m@[0;33;47mS[0;1;35;47m8[0;33;47m8X[0;1;35;47m%[0;1;33;47m8[0;1;31;47m8[0;35;47mX[0;1;33;47mS[0;35;47m@[0;1;31;47mS[0;1;37;47m [0;1;31;47m8[0;1;33;47mS[0;1;35;47mX[0;1;33;47m8[0;1;35;47m@[0;1;33;47m@[0;1;35;47m@[0;5;37;43m8[0;5;37;45m8[0;1;33;47mS[0;1;31;47mS[0;1;37;47m [0;5;1;33;47m8[0;5;1;31;45m8[0;5;37;47m8[0;5;37;43m8[0;5;1;37;45m8[0;5;37;43m8[0;1;37;47m. [0;1;31;47m8[0;1;30;47mX[0;1;37;47m  [0;1;30;47m88X[0;1;37;47m  ;X8[0;5;37;47m8@t. .  .    .   . %[0;5;30;40mX[0;32;40m;[0;1;30;40mS[0;32;40m;[0m
[0;34;40m:[0;31;40m%[0;1;30;40mX[0;34;40m;[0;5;37;40m8[0;5;37;47mSXXXXSS[0;5;1;36;47m8[0;5;37;47m8%S%8[0;36;47m8[0;5;35;40m;;[0;1;30;47m%88[0;1;31;47mX[0;1;30;47m8[0;1;31;47mS[0;33;47mS[0;1;33;47mS[0;1;35;47mS[0;1;33;47mS[0;1;35;47mX[0;1;33;47m@[0;1;31;47mX[0;1;35;47m%[0;1;33;47m8[0;1;31;47m8[0;1;35;47mX[0;33;47mX[0;1;35;47mS[0;1;31;47m@[0;1;37;47m [0;1;33;47mX[0;1;35;47mX[0;1;33;47mX[0;1;35;47mX[0;1;33;47m@[0;1;35;47m@[0;1;33;47m@[0;1;35;47mX[0;1;33;47mX[0;1;35;47mX[0;1;33;47mX[0;1;37;47m [0;5;37;47m8[0;5;1;35;41m8[0;5;37;47m8[0;5;1;37;43m8[0;5;37;45m8[0;5;37;47m8[0;5;37;43m8[0;5;1;35;47m8[0;1;37;47m [0;5;37;47m8[0;1;31;47m@[0;33;47mS[0;1;37;47m [0;5;37;47m8[0;1;37;47m   [0;1;30;47m@[0;1;37;47m [0;5;37;47m8[0;1;37;47m@@[0;5;37;47m8XS..    .  .  .   %[0;5;30;40mS[0;31;40m;[0;34;40mt[0;31;40m%[0m
[0;34;40m:[0;32;40m%[0;34;40mt[0;32;40mt[0;5;37;40m@[0;5;37;47mSXXSX[0;5;1;36;47m8[0;5;37;47m8@S%%S8[0;1;30;46m8[0;5;35;40mS:[0;5;37;40m8[0;1;30;47m8[0;35;47m8[0;1;30;43m8[0;35;47m8[0;1;30;43m8[0;1;30;45m8[0;33;47m8[0;35;47m8[0;33;47m8[0;1;35;47mS[0;1;33;47m%[0;1;37;47m [0;1;31;47m@[0;1;35;47mS[0;1;37;47m [0;1;33;47m@[0;1;35;47m@[0;1;33;47m8[0;1;37;47m [0;1;31;47mX[0;1;35;47mS[0;1;33;47m8[0;1;31;47m8[0;33;47m%[0;1;31;47mX[0;1;33;47mX[0;1;31;47m8S[0;1;37;47m [0;1;31;47mX[0;1;37;47m [0;1;31;47m%[0;5;1;37;43m8[0;1;37;47m [0;5;37;47m8[0;1;31;47mS[0;5;1;33;47m8[0;5;37;45m8[0;5;37;47m8[0;5;37;43m8[0;5;1;35;47m8[0;5;37;43m8[0;1;37;47m [0;1;35;47m%[0;1;33;47m%[0;1;37;47m     [0;1;30;47m8S[0;1;37;47m%@8[0;5;37;47m@@:  .   .      . %[0;5;30;40mX[0;32;40m;[0;1;30;40mS[0;32;40m;[0m
[0;34;40m:[0;31;40m%[0;1;30;40mS[0;34;40m;[0;5;37;40m8[0;5;37;47mSXXXX@SSS%%S8[0;1;30;47m8[0;5;34;40m8[0;5;35;40m [0;1;30;47m8[0;5;35;40m.[0;1;30;47m888[0;35;47m8[0;1;30;43m8[0;1;30;45m8[0;37;43m8[0;35;47m8[0;1;31;47m8[0;1;37;47m  [0;1;33;47mS[0;1;35;47mS[0;1;33;47mS[0;1;35;47mX[0;1;33;47m8[0;1;35;47m@[0;1;33;47mX[0;1;31;47m@[0;1;30;47m8[0;5;35;41m%[0;1;30;47mS8[0;1;31;47m8[0;35;47m8[0;1;30;47m8[0;1;31;47m@@[0;1;33;47mS[0;1;35;47mX[0;1;33;47mS[0;5;37;45m8[0;5;37;43m8[0;5;37;45m8[0;5;1;33;47m8[0;1;37;47m [0;5;1;33;47m8[0;5;37;45m8[0;5;37;47m8[0;1;33;47mX[0;5;37;45m8[0;1;33;47m%[0;1;37;47m [0;1;35;47mS[0;1;33;47m@[0;1;35;47mX[0;1;33;47mS[0;35;47mS[0;1;30;47m888.[0;1;37;47m%[0;5;37;47mX[0;1;37;47m@[0;5;37;47mX:.   .   . .    %[0;5;30;40mX[0;34;40m;[0;31;40mt[0;34;40m%[0m
[0;34;40m:[0;32;40m%[0;31;40mt[0;34;40mt[0;5;37;40m8[0;5;37;47mSXXSSSSS%%[0;5;1;36;47m@[0;5;37;47mXS[0;1;37;47m [0;5;36;40m%[0;5;35;40m.[0;1;30;47m888[0;1;31;47mX[0;33;47mX[0;1;30;47m8[0;35;47mS[0;33;47m@[0;35;47m8[0;33;47m8[0;1;37;47m [0;1;31;47mS[0;1;37;47m [0;1;35;47mS[0;1;33;47m@[0;1;35;47mS[0;1;37;47m   [0;1;35;47mS[0;1;37;47m [0;1;33;47m%[0;1;37;47m [0;35;47mX[0;1;33;47mX[0;35;47mX[0;1;33;47mS[0;1;37;47m  [0;1;31;47mSX[0;1;33;47m@[0;1;31;47m@[0;1;37;47m  [0;5;1;37;43m8[0;5;37;45m8[0;5;37;47m8[0;1;33;47mS[0;5;1;33;47m8[0;5;37;45m8[0;5;1;33;47m8[0;1;37;47m  [0;1;33;47mX[0;1;31;47mX[0;35;47mX[0;33;47m@[0;1;37;47m [0;1;30;47m8[0;35;47mX[0;1;30;47m8%[0;1;37;47m %@%[0;5;37;47mX. .         . . %[0;5;30;40mX[0;32;40m;[0;1;30;40mS[0;32;40m;[0m
[0;34;40m:[0;1;30;40mS[0;32;40mt[0;34;40m;[0;5;37;40m8[0;5;37;47mSXXXSSSS%SXtt[0;1;37;47m%[0;5;35;40m:[0;5;37;40m8[0;1;30;47m@8[0;35;47mX[0;1;30;47m8[0;1;31;47m@[0;1;30;47m8[0;5;33;41m@[0;1;30;47m8[0;33;47m8[0;1;31;47m8[0;1;30;47m8[0;1;35;47m%[0;1;33;47mX[0;1;35;47mX[0;1;33;47mX[0;1;35;47m%[0;5;1;37;43m8[0;5;37;45m8[0;5;37;43m8[0;1;37;47m [0;1;35;47mX[0;1;31;47mX[0;1;37;47m [0;1;31;47mXX[0;1;30;47m8[0;1;31;47mX[0;1;33;47mS[0;1;35;47mS[0;1;33;47mX[0;1;35;47mS[0;1;33;47m%[0;1;35;47mS[0;1;33;47mX[0;5;37;45m8[0;1;37;47m [0;5;1;37;43m8[0;5;37;45m8[0;5;37;47m8[0;5;37;43m8[0;5;37;47m888[0;5;1;33;41m8[0;5;37;47m8[0;1;37;47m  [0;1;31;47mS[0;1;37;47m [0;35;47m8[0;1;30;43m8[0;1;30;47mSX[0;1;37;47m [0;1;30;47m .[0;1;37;47mS[0;5;37;47mt.  . .  . .     %[0;5;30;40mS[0;34;40m;[0;31;40mt[0;34;40mt[0m
[0;34;40m:[0;31;40mt[0;1;30;40mS[0;32;40m;[0;5;37;40m@[0;5;37;47mSXXSS[0;5;1;36;47m8[0;5;37;47m@SS%%%t[0;1;37;47mS[0;5;36;40m;[0;5;35;40m.[0;1;30;47mS[0;35;47m@[0;33;47m8[0;1;30;45m8[0;1;30;43m8[0;1;30;45m8[0;5;33;40m:[0;5;35;40mS%[0;5;33;40m.[0;5;37;41m8[0;33;47m8[0;1;31;47m@[0;1;33;47m%[0;1;35;47m8[0;1;33;47mX[0;5;37;45m8[0;5;1;37;43m8[0;5;37;45m8[0;1;33;47m@[0;5;37;41m8[0;1;33;47m%[0;1;31;47m8[0;1;30;47m8[0;1;31;47m8[0;1;30;43m8[0;35;47m8[0;5;33;41mt[0;1;30;47m8[0;33;47m@[0;1;31;47m@[0;1;37;47m [0;1;33;47mS[0;1;37;47m [0;5;1;37;43m8[0;5;37;45m8[0;5;1;37;43m8[0;1;37;47m  [0;5;1;37;45m8[0;5;37;43m8[0;5;1;37;45m8[0;5;1;33;47m8[0;5;1;35;47m8[0;1;37;47m [0;1;33;47m%[0;1;35;47mX[0;1;33;47m@[0;35;47m8[0;33;47m@[0;35;47m8[0;1;30;47m8[0;5;35;40m.[0;35;47m8[0;5;37;40mS[0;5;35;40m:[0;1;37;47m.8[0;5;37;47mS:  .  .    .   %[0;5;30;40mX[0;32;40m;[0;1;30;40mS[0;32;40m;[0m
[0;34;40m:[0;32;40mt[0;34;40m%[0;31;40mt[0;5;37;40m8[0;5;37;47mSXSSX@S%%%%%t[0;1;37;47m:[0;5;35;40m [0;5;37;40m8[0;1;30;47m88[0;5;35;41m8[0;1;30;47m8[0;5;37;40m;[0;33;47m8[0;1;30;45m8[0;1;30;43m8[0;1;30;45m8[0;1;30;43m8[0;5;35;40mt[0;1;30;45m8[0;33;47m@[0;1;31;47m@[0;1;37;47m    [0;1;31;47mS8[0;35;47m8[0;1;31;47m8[0;1;30;47m8[0;5;37;41m8[0;1;30;47m8[0;35;47m@[0;1;33;47mX[0;35;47mS[0;1;31;47mS[0;35;47mX[0;33;47m8[0;5;37;41m8[0;1;35;47mS[0;1;31;47m@[0;1;37;47m [0;5;37;43m8[0;5;37;45m8[0;5;1;37;43m8[0;5;37;47m8[0;5;1;31;43m8[0;5;1;35;47m@[0;5;37;43m8[0;5;1;35;47m8[0;1;33;47mX[0;1;35;47mX[0;1;33;47mX[0;1;31;47m@[0;35;47mX[0;1;30;47m8888[0;33;47m@[0;1;30;47m8[0;35;47mX[0;1;37;47m   [0;1;35;47m%[0;1;30;47m8[0;1;37;47m%[0;5;37;47m;     .   .  %[0;5;30;40mX[0;31;40m;[0;34;40mt[0;31;40m%[0m
[0;34;40m:[0;31;40m%[0;32;40m%[0;34;40m%[0;5;37;40m8[0;5;37;47mSXSSSS%S[0;5;1;36;47m8[0;5;37;47m@%t%[0;1;37;47m;[0;5;37;40m%[0;5;35;40m.[0;1;30;47m88[0;5;33;40m.[0;33;47m8[0;35;47m8[0;1;30;43m8[0;5;35;40m%[0;1;30;41m88[0;5;31;40m8[0;1;30;41m8[0;5;33;40m8[0;1;30;45m8[0;1;33;47mS[0;1;31;47m8[0;1;37;47m [0;5;1;35;47m8[0;5;37;43m8[0;5;1;31;45m8[0;1;30;43m8[0;1;30;41m8[0;1;30;47m8[0;5;35;40m:[0;1;30;47m8[0;1;31;47m8[0;1;30;47m8[0;1;31;45m8[0;1;30;47m8[0;33;47m@[0;1;31;47mX[0;1;37;47m [0;33;47mX[0;5;33;41m%[0;1;30;47m@[0;1;33;47m%[0;1;35;47m%[0;1;33;47m%[0;5;37;45m8[0;5;1;33;47m8[0;5;37;47m8[0;1;37;47m [0;5;37;47m8[0;1;33;47mS[0;1;35;47mS[0;1;33;47m@[0;1;35;47m8[0;1;37;47m [0;1;33;47mX[0;35;47m8[0;33;47mX[0;1;37;47m [0;1;35;47m%[0;1;37;47m   [0;5;37;47m888[0;1;37;47m [0;1;33;47mS[0;1;31;47m8[0;1;37;47m.[0;5;37;47m;      .   .t[0;5;30;40mX[0;32;40m;[0;1;30;40mS[0;32;40m;[0m
[0;34;40m:[0;1;30;40mS[0;31;40mt[0;32;40mt[0;5;37;40m@[0;5;37;47mSXXSSS%SX%%%%[0;1;37;47m [0;1;30;47m8[0;5;35;40m [0;1;30;47m88[0;5;33;40m.[0;1;30;47m8[0;1;37;47m [0;35;47m8[0;33;41m@[0;1;30;40m8[0;5;31;40m8@X[0;5;35;40mS[0;33;47m8[0;35;47m8[0;1;35;47m%[0;5;37;43m8[0;5;37;45m8[0;5;37;47m8[0;1;31;47m8[0;5;33;40mX[0;5;31;40mS[0;33;47m8[0;5;35;41mS[0;1;30;47mt[0;1;37;47m [0;1;30;47m8[0;5;33;40m8[0;1;30;41mt[0;5;35;40mS[0;5;33;40m.[0;1;31;47mX[0;1;37;47m [0;1;30;47m8[0;5;33;41mt[0;1;37;47m [0;1;33;47mX[0;1;37;47m [0;5;37;43m8[0;5;37;45m8[0;1;37;47m [0;5;1;33;47m8[0;5;1;31;45m8[0;5;37;47m8[0;1;33;47mX[0;1;31;47m8[0;1;37;47m [0;1;33;47mS[0;1;35;47m@[0;33;47m@[0;1;35;47mX[0;1;33;47m8[0;1;37;47m [0;5;37;47m8[0;5;1;33;47m8[0;5;37;47m8[0;5;1;31;43m8[0;5;37;47m88[0;5;1;33;47m8[0;5;37;45m8[0;5;37;41m8[0;1;37;47m [0;5;37;47mX    .   .  %[0;5;30;40mX[0;34;40m;[0;31;40mt[0;34;40m%[0m
[0;34;40m:[0;32;40mt[0;34;40mS[0;31;40mt[0;5;37;40m8[0;5;37;47mSXSS[0;5;1;36;47m8[0;5;37;47m@S%%%%%%[0;1;37;47m:[0;1;30;47m8[0;5;37;40m8@[0;1;30;47m8[0;1;31;47m8[0;1;30;47m8[0;33;47m8[0;5;37;40mt[0;5;35;40m:%[0;5;33;40mX[0;5;35;40mX[0;5;33;40m@[0;5;35;40m:[0;35;47m@[0;1;33;47m8[0;1;31;47m8[0;1;37;47m [0;5;37;43m8[0;1;35;47mX[0;1;33;47mX[0;5;37;41m8[0;5;35;40mt[0;1;30;47m88[0;33;47mX[0;35;47mS[0;33;47m@[0;1;30;45m8[0;5;33;40m:[0;1;30;47m8[0;1;37;47m  [0;1;31;47m8[0;33;47mX[0;1;30;47m8[0;1;31;47mX[0;1;35;47mS[0;1;33;47mX[0;5;37;45m8[0;5;1;37;43m8[0;5;37;45m8[0;5;1;33;47m8[0;5;37;47m8[0;1;31;47mX[0;1;35;47m%[0;1;33;47mX[0;1;35;47m@[0;1;33;47mS[0;1;37;47m [0;1;33;47mS[0;1;35;47mS[0;1;37;47m [0;5;37;47m88[0;5;1;35;41m8[0;5;37;47m88[0;5;1;35;47mX[0;5;1;33;47m8[0;5;1;37;45m8[0;5;37;43m8[0;5;37;41m8[0;1;37;47m [0;5;37;47mX .         %[0;5;30;40mX[0;32;40m;[0;1;30;40mS[0;32;40m;[0m
[0;34;40m:[0;31;40m%[0;32;40mS[0;34;40m%[0;5;37;40m8[0;5;37;47mSSXX@S%%%%%%t8[0;1;30;47m8[0;5;37;40m8[0;35;47m8[0;1;30;47m88[0;1;31;47m@[0;1;30;47m8[0;35;47m8[0;5;33;40m:.[0;5;35;40m%[0;5;33;40m@[0;5;35;40m%[0;33;47m8[0;1;31;47m8[0;35;47m@[0;1;37;47m [0;5;37;45m8[0;5;37;43m8[0;5;37;45m8[0;1;33;47mS[0;35;47m@[0;5;33;41m@[0;5;37;40m;[0;1;31;47m8[0;1;30;47m8[0;1;31;47m8[0;1;30;47m8[0;1;33;47mS[0;35;47mS[0;1;33;47mS[0;1;35;47mS[0;1;33;47m@[0;1;35;47mS[0;1;33;47mX[0;1;35;47mX[0;1;33;47m8[0;1;31;47m@[0;1;37;47m [0;5;37;43m8[0;5;37;47m8[0;1;33;47mS[0;5;37;45m8[0;5;1;37;43m8[0;1;37;47m  [0;1;31;47mS[0;1;37;47m  [0;1;31;47mX[0;1;37;47m [0;5;37;47m88[0;5;1;33;47m8[0;1;31;47mX[0;1;33;47m8[0;5;1;35;41m8[0;5;37;47m8[0;5;1;33;47m8[0;5;1;35;47m8[0;5;1;37;43m8[0;5;37;45m8[0;1;31;47m8[0;1;37;47m [0;5;37;47mt   .  .  . %[0;5;30;40mS[0;31;40m;[0;34;40mt[0;31;40mt[0m
[0;34;40m:[0;1;30;40mS[0;31;40mt[0;32;40mt[0;5;37;40m8[0;5;37;47mSXSSSSS%[0;5;1;36;47m8[0;5;37;47mX%t%S[0;1;37;47m [0;1;30;47mS88[0;35;47m@[0;33;47m@[0;35;47m8[0;33;47m8[0;35;47m8[0;33;47m8[0;1;30;45m8[0;33;47m8[0;35;47m8[0;1;30;47m8[0;1;31;47mX[0;1;37;47m [0;1;33;47mX[0;1;37;47m [0;5;1;35;41m8[0;5;1;37;43m8[0;1;35;47mX[0;1;33;47mX[0;35;47mX[0;33;47m@[0;35;47m@[0;1;31;47m@[0;1;30;47m8[0;1;31;47m8[0;35;47m@[0;1;31;47m@X[0;1;33;47mS[0;1;31;47m8SS[0;1;33;47mX[0;1;35;47m8[0;1;33;47m@[0;5;37;45m8[0;1;37;47m [0;5;1;31;45m8[0;5;1;33;47m8[0;1;37;47m [0;5;37;47m8[0;5;1;33;47m8[0;5;37;45m8[0;5;1;33;47m8[0;1;37;47m [0;5;37;47m8[0;1;37;47m  [0;5;37;47m88[0;5;1;37;45m8[0;5;1;33;47m8[0;1;35;47mS[0;5;1;31;43m8[0;1;35;47m@[0;1;33;47mX[0;5;37;47m88[0;1;33;47m@[0;1;31;47m8[0;5;37;47mX  .         %[0;5;30;40mX[0;32;40m;[0;1;30;40mS[0;32;40m;[0m
[0;34;40m:[0;32;40mt[0;34;40mS[0;31;40mt[0;5;37;40m8[0;5;37;47m%SSSSS[0;5;1;36;47m8[0;5;37;47m8X%%t%t8[0;1;30;47m%[0;35;47m@[0;1;30;47m8[0;1;31;47mX[0;1;30;47m8[0;1;31;47m8[0;1;30;47m8[0;1;31;47m8[0;1;30;47m8[0;33;47mX[0;35;47m@[0;1;31;47m8[0;33;47mX[0;1;31;47mX[0;1;35;47m%[0;1;37;47m [0;5;1;33;47m8[0;1;37;47m [0;1;31;47mX[0;1;37;47m [0;1;35;47mS[0;1;33;47mX[0;1;35;47m@[0;1;33;47m@[0;1;35;47mS[0;1;33;47mX[0;1;35;47mX[0;1;33;47m@[0;1;35;47mX[0;1;31;47m@[0;1;37;47m [0;1;35;47m%[0;1;33;47mX[0;1;35;47mX[0;1;33;47mX[0;1;35;47mS[0;5;37;43m8[0;5;37;47m8[0;5;1;37;43m8[0;5;37;47m8[0;1;37;47m [0;5;1;33;47m8[0;5;1;31;45m8[0;5;37;47m8[0;5;37;43m8[0;5;37;45m8[0;5;37;47m8[0;1;33;47mS[0;5;37;47m8[0;1;37;47m [0;5;1;33;47m8[0;5;1;37;45m8[0;5;1;37;43m8[0;5;37;47m88[0;1;31;47mX[0;5;37;41m8[0;1;31;47mX[0;1;37;47m [0;5;1;35;47m8[0;5;37;41m8[0;5;37;47m8:    .   .   %[0;5;30;40mX[0;34;40m;[0;31;40mt[0;34;40m%[0m
[0;34;40m:[0;31;40m%[0;32;40mS[0;34;40m%[0;5;37;40m8[0;5;37;47mSSSSSXX%%%tt%%8[0;1;30;47m t[0;35;47mS[0;33;47mS[0;1;31;47mX[0;1;30;47m8[0;1;31;47mX[0;1;30;47m8[0;1;31;47mSS[0;1;30;47m8[0;33;47mX[0;35;47m8[0;1;33;47mX[0;1;31;47mX[0;5;1;35;47m8[0;5;1;33;41m8[0;5;37;47m8[0;5;1;35;41m8[0;5;37;43m8[0;1;35;47mS[0;1;31;47m@[0;1;33;47mX[0;1;35;47m@[0;1;33;47m8[0;1;35;47m@[0;1;33;47m8[0;1;35;47m@[0;1;33;47m8[0;1;37;47m [0;1;31;47mS[0;1;37;47m [0;1;33;47mS[0;1;37;47m [0;5;37;47m88[0;5;37;45m8[0;5;1;37;43m8[0;5;37;45m8[0;5;1;33;47m8[0;5;1;37;45m8[0;5;1;37;43m8[0;5;37;47m8[0;1;35;47mS[0;5;37;47m8[0;5;37;43m8[0;5;37;45m8[0;5;37;47m8[0;5;1;33;41m8[0;5;1;35;47m@[0;5;37;47m8[0;5;1;33;47m8[0;5;1;35;47m8[0;5;37;43m8[0;5;1;35;47m8[0;1;37;47m [0;1;31;47m8S[0;5;37;47m8[0;5;1;33;41m8[0;5;37;47m@;  .    .   . %[0;5;30;40mX[0;32;40m;[0;1;30;40mS[0;32;40m;[0m
[0;34;40m:[0;1;30;40mS[0;31;40mt[0;32;40mt[0;5;37;40m@[0;5;37;47mSSSS[0;5;1;36;47m8[0;5;37;47m@%%%%%[0;5;1;36;47m@[0;5;37;47mS%8[0;1;30;47m [0;35;47mS[0;1;37;47m [0;1;31;47mX[0;1;35;47m%[0;1;33;47m@[0;35;47m8[0;1;33;47mS[0;35;47m8[0;1;31;47mX[0;35;47mX[0;1;31;47m@X[0;1;35;47mX[0;1;33;47mX[0;1;35;47mS[0;1;37;47m [0;1;31;47mS[0;5;37;47m8[0;1;35;47mS[0;5;37;43m8[0;1;35;47m@[0;1;31;47m8[0;1;33;47mS[0;1;35;47mS[0;5;37;43m8[0;1;35;47m@[0;1;33;47m8[0;1;35;47m@[0;1;33;47mX[0;1;37;47m [0;5;1;35;47m8[0;5;1;31;43m8[0;5;1;35;47m8[0;5;1;37;43m8[0;5;1;37;45m8[0;5;1;37;43m8[0;5;1;35;47m8[0;5;1;33;47m8[0;1;35;47mS[0;5;1;33;47m8[0;5;1;37;45m8[0;5;37;43m8[0;1;37;47m  [0;5;37;47m8[0;5;37;43m8[0;5;1;35;47m8[0;5;37;47m8[0;1;37;47m [0;5;37;47m88[0;5;37;41m8[0;1;35;47m%[0;5;37;43m8[0;1;37;47m  [0;5;37;47m8[0;5;37;41m8[0;5;37;47m@t     .        %[0;5;30;40mS[0;31;40m;[0;34;40mt[0;31;40m%[0m
[0;34;40m:[0;32;40mt[0;34;40mS[0;31;40mt[0;5;37;40m8[0;5;37;47m%SSX@S%S%%%St%8[0;1;30;47m [0;1;35;47m%[0;1;30;47m8[0;1;37;47m [0;1;31;47mX[0;1;35;47mS[0;1;31;47m@[0;35;47mX[0;5;33;41m%[0;1;30;47m88[0;35;47mX[0;1;33;47m%[0;1;35;47mX[0;1;33;47mX[0;1;35;47mX[0;5;37;43m8[0;5;1;37;45m8[0;5;1;31;43m8[0;1;37;47m [0;5;1;35;41m8[0;1;33;47m@[0;5;37;41m88[0;1;31;47mS[0;1;35;47mS[0;1;33;47m@[0;1;35;47mX[0;5;37;43m8[0;5;37;45m8[0;5;37;43m8[0;5;37;47m88[0;1;35;47mS[0;5;1;33;47m8[0;5;37;47m88[0;5;37;43m8[0;5;1;37;45m8[0;5;1;33;47m8[0;1;37;47m [0;5;37;47m8[0;1;35;47mS[0;5;1;37;43m8[0;5;1;31;45m8[0;5;37;47m88[0;1;33;47mS[0;5;37;47m8[0;5;37;43m8[0;5;1;31;45m8[0;5;1;33;47m8[0;5;37;47m88[0;5;1;35;47m8[0;5;1;33;47m8[0;5;1;35;47m8[0;5;1;31;43m8[0;5;37;47m8S  .    .  .  . %[0;5;30;40mX[0;32;40m;[0;1;30;40mS[0;32;40m;[0m
[0;34;40m:[0;31;40m%[0;32;40mS[0;34;40m%[0;5;37;40m8[0;5;37;47m%SSS%S%%%ttttS8[0;1;30;47m t[0;1;37;47m [0;1;31;47mS[0;1;37;47m [0;1;31;47m8[0;33;47m8[0;5;35;40m;[0;5;37;40mt[0;35;47m8[0;1;31;47m8[0;1;37;47m   [0;5;37;45m8[0;5;1;33;47m8[0;5;1;37;45m8[0;5;37;43m8[0;5;37;45m8[0;1;33;47mS[0;1;37;47m [0;1;31;47mS[0;1;37;47m [0;5;33;41m@[0;5;35;40m:[0;5;33;41m;[0;1;30;47m8[0;1;31;47mX[0;1;37;47m  [0;5;1;37;45m8[0;5;1;31;43m8[0;5;37;47m8[0;5;1;35;47m8[0;5;1;31;43m8[0;5;1;35;47m8[0;1;37;47m [0;5;1;35;47m8[0;5;1;37;43m8[0;5;1;37;45m8[0;5;1;33;47m8[0;1;35;47mS[0;5;37;43m8[0;5;37;45m8[0;5;37;47m8[0;1;33;47mX[0;5;37;47m8[0;5;37;45m8[0;5;1;33;47m8[0;5;1;35;47m8[0;1;37;47m; [0;5;1;33;47m8[0;5;1;35;41m8[0;5;1;33;47m8[0;5;37;47m88[0;5;1;35;47m8[0;5;37;47m8;.   .    .     %[0;5;30;40mX[0;34;40m;[0;31;40mt[0;34;40m%[0m
[0;34;40m:[0;1;30;40mS[0;31;40mt[0;32;40mt[0;5;37;40m8[0;5;37;47mSSSSS%%%[0;5;1;36;47m8[0;5;37;47mStt%%8[0;1;37;47m [0;35;47mXS[0;1;31;47mX[0;33;47m@[0;35;47m8[0;1;31;41m8[0;5;37;40m;[0;33;47m8[0;35;47m@[0;1;33;47mX[0;1;35;47m@[0;1;33;47mX[0;1;31;47mS[0;5;37;47m8[0;1;31;47mS[0;5;37;47m8[0;1;37;47m [0;5;37;47m8[0;1;31;47mS[0;5;37;47m8[0;1;31;47mXS[0;1;30;47m8[0;1;31;47m@[0;1;30;47m8[0;5;33;41mt[0;1;30;47m8[0;5;37;41m8[0;1;33;47m8[0;1;31;47mX[0;1;37;47m [0;1;31;47mS[0;5;37;47m88[0;5;1;31;43m8[0;5;37;47m8[0;1;33;47m%[0;1;35;47mS[0;1;33;47mS[0;1;37;47m [0;5;37;47m8[0;1;35;47mS[0;5;37;43m8[0;1;37;47m [0;5;37;47m8[0;1;33;47m%[0;5;37;47m8[0;1;35;47mS[0;5;37;43m8[0;1;37;47m [0;5;1;35;47m8[0;5;1;33;47m8[0;5;37;47m8[0;1;35;47mS[0;5;1;33;47m8[0;5;37;47m88%    .  .    .   %[0;5;30;40mX[0;32;40m;[0;1;30;40mS[0;32;40m;[0m
[0;34;40m:[0;32;40mt[0;34;40mS[0;31;40mt[0;5;37;40m8[0;5;37;47m%SS%S%[0;5;1;36;47m8[0;5;37;47m@Sttttt@[0;1;37;47m [0;1;30;47m88[0;35;47m8[0;5;33;41mX[0;5;37;40mS[0;5;33;40m [0;35;47m8[0;1;31;47m@[0;1;30;47m8[0;1;31;47m8[0;33;47m@[0;1;31;47m8[0;1;35;47mX[0;1;33;47m8[0;1;35;47mX[0;5;1;33;41m8[0;1;35;47mS[0;5;37;41m8[0;1;37;47m [0;5;37;41m8[0;1;31;47mXXS[0;1;30;47m8[0;33;47mS[0;1;37;47m [0;1;31;47mX8[0;1;31;45m8[0;1;33;47mS[0;1;35;47mX[0;5;37;43m8[0;5;1;31;45m8[0;5;37;47m8[0;1;35;47mS[0;1;33;47mS[0;5;37;45m8[0;5;37;43m8[0;5;37;45m8[0;5;37;43m8[0;5;37;45m8[0;5;37;43m8[0;5;1;35;47m8[0;1;37;47m [0;5;37;47m8[0;5;1;35;47m8[0;5;37;43m8[0;5;37;47m8[0;5;37;45m8[0;5;37;43m8[0;1;35;47mS[0;1;37;47m [0;5;37;47m8[0;1;37;47m [0;5;1;35;47m8[0;5;37;47m8:..        .    . %[0;5;30;40mS[0;31;40m;[0;34;40mt[0;31;40m%[0m
[0;34;40m:[0;31;40m%[0;32;40mS[0;34;40m%[0;5;37;40m8[0;5;37;47mtSSS[0;5;1;36;47m8[0;5;37;47m8X%%ttttt%[0;1;37;47m [0;5;37;40m8[0;1;30;47m888[0;5;35;40mt[0;37;43m8[0;1;30;47m8[0;33;47mS[0;35;47mX[0;1;30;47m8[0;35;47m8[0;1;31;43m8[0;35;47m8[0;1;31;47m8[0;1;37;47m [0;1;31;47m@@[0;33;47m@[0;5;35;41m:[0;1;30;47m8[0;33;47m@[0;35;47m@[0;1;31;47m@S[0;1;35;47mS[0;1;33;47mX[0;1;35;47m%[0;1;33;47mS[0;1;30;47m8[0;5;37;41m8[0;1;31;47m8[0;1;37;47m [0;1;33;47mS%[0;1;35;47mS[0;5;1;31;43m8[0;1;37;47m [0;1;35;47mS[0;1;33;47mX[0;1;35;47mS[0;5;37;43m8[0;5;37;47m8[0;1;37;47m [0;5;37;47m8[0;5;1;33;47m8[0;5;1;35;47m8[0;5;37;47m88888888t  . . . .    .     %[0;5;30;40mX[0;32;40m;[0;1;30;40mS[0;32;40m;[0m
[0;34;40m:[0;1;30;40mS[0;31;40mt[0;32;40mt[0;5;37;40m8[0;5;37;47mSSSSX%%%%%t[0;5;1;36;47m@[0;5;37;47m%tt8[0;5;37;40m8[0;1;30;45m8[0;1;30;47m8[0;33;47m8[0;1;31;45m8[0;1;30;47m8[0;1;31;47mX[0;1;30;47m8[0;1;31;47m8[0;33;47m8[0;1;30;47m888[0;33;47m8[0;35;47m8[0;33;47m@[0;37;45m8[0;1;30;47m888[0;5;37;41m8[0;1;30;47m@[0;33;47mX[0;1;31;47mX[0;1;33;47mS[0;1;35;47m8[0;33;47m8[0;1;31;47mX[0;1;30;47m8[0;1;37;47m [0;1;31;47m@8[0;1;37;47m   [0;1;35;47m@[0;5;37;41m8[0;1;33;47mX[0;1;31;47m@[0;1;37;47m [0;1;35;47mS[0;1;37;47m [0;5;1;33;47m8[0;5;37;45m8[0;5;37;47m8[0;5;1;33;47m8[0;5;37;47m88888@S:   .       .    .   %[0;5;30;40mS[0;34;40m;[0;31;40mt[0;34;40mt[0m
[0;34;40m:[0;32;40mt[0;34;40mS[0;31;40mt[0;5;37;40m8[0;5;37;47m%SSSS%%%%%%%t;%@[0;1;37;47m.[0;5;37;40mt[0;1;30;47m88[0;5;33;40m [0;1;30;47m88[0;1;31;47m8[0;1;30;47m88[0;35;47m8[0;33;47m8[0;35;47m8[0;33;47mX[0;1;31;47m@[0;1;30;47m8[0;33;47m@[0;35;47m@[0;1;31;47m8[0;1;30;47m88[0;1;31;47mS[0;1;30;47m8[0;1;35;47m%[0;1;33;47m@[0;1;31;47mX[0;1;37;47m [0;1;31;47m8[0;33;47m8[0;1;31;47m8[0;1;37;47m [0;33;47m8[0;1;35;47mX[0;5;37;43m8[0;5;37;45m8[0;5;37;43m@[0;35;47m8[0;1;31;47mS[0;1;37;47m [0;1;31;47mX[0;5;37;47m8[0;5;37;41m8[0;5;37;47m8[0;5;1;33;47m8[0;5;1;35;47m8[0;5;37;47m8888S.  . .  ..  .   .     . %[0;5;30;40mX[0;31;40m;[0;32;40m%[0;1;30;40mS[0m
[0;34;40m:[0;31;40m%[0;32;40mS[0;34;40m%[0;5;37;40m8[0;5;37;47m%SSS%%S%%tttttt%[0;1;37;47mt[0;5;35;40m [0;1;30;47m8[0;35;47m8[0;1;30;43m8[0;35;47m8[0;1;30;43m8[0;1;30;47m8[0;5;35;40m;[0;1;30;43m8[0;35;47m8[0;1;30;43m8[0;35;47m@X[0;33;47mX[0;35;47m8[0;1;31;47m8[0;33;47m@[0;1;30;47m8[0;1;31;47m8[0;33;47m8[0;1;31;47m8[0;33;47m@[0;1;31;47m8[0;35;47m8[0;33;47m8[0;1;30;45m8[0;33;41m8[0;5;35;40mS[0;1;30;47m8[0;1;31;47m@X[0;1;37;47m  [0;1;33;47m@[0;5;35;41m [0;1;30;47mS[0;1;37;47m [0;1;31;47mX[0;1;37;47m  [0;5;37;47m8[0;1;31;47mX[0;5;37;47m88888@  . .      .   .   . .   %[0;5;30;40mX[0;34;40m;[0;31;40mt[0;34;40mt[0m
[0;34;40m:[0;1;30;40mS[0;31;40mt[0;32;40mt[0;5;37;40m@[0;5;37;47m%SSSS%%[0;5;1;36;47m8[0;5;37;47mXtttttt%8[0;1;37;47m%[0;5;35;40m;[0;1;30;47m88[0;5;33;41m8[0;1;30;47m8[0;1;30;45m8[0;1;30;43m8[0;35;41m8[0;5;31;40mS[0;1;30;47m8[0;5;33;40m;[0;5;37;41m8[0;1;30;47m8[0;1;30;43m8[0;35;47m@[0;1;31;47mX[0;33;47mX[0;1;37;47m     [0;1;31;47m@[0;5;33;40m:[0;1;30;41mt[0;5;35;40m%[0;33;47m8[0;1;30;47m8[0;33;47mX[0;1;31;47mS[0;1;37;47m [0;1;35;47m%[0;1;37;47m  [0;1;33;47mS[0;1;35;47mS[0;1;33;47mS[0;1;35;47m%[0;5;37;43m8[0;5;1;37;45m8[0;5;37;47m8[0;1;33;47mS[0;5;1;35;47m8[0;5;1;33;47m8[0;5;1;35;47m@[0;5;37;47m@:.    .  .    .           %[0;5;30;40mS[0;32;40m;[0;1;30;40mS[0;32;40m;[0m
[0;34;40m:[0;32;40mt[0;34;40mS[0;31;40mt[0;5;37;40m8[0;5;37;47m%SS%[0;5;1;36;47m8[0;5;37;47m@SXttt[0;5;1;36;47m8[0;5;37;47mStttS[0;1;37;47m8[0;1;30;47m8[0;5;35;40m.[0;1;30;47m8[0;5;35;40m [0;1;30;47m8[0;5;35;40m.[0;35;47m@[0;5;33;40mS[0;1;30;41m%[0;5;35;40m [0;1;37;47m   [0;1;35;47mX[0;1;33;47m%[0;5;37;47m8[0;1;37;47m [0;5;37;47m88[0;1;33;47mS[0;1;35;47mS[0;5;37;41m8[0;5;31;40m8[0;5;33;40mt[0;1;30;47m88[0;1;35;47m%[0;1;31;47m8[0;33;47mS[0;1;37;47m [0;5;37;41m8[0;1;37;47m [0;1;33;47mS[0;1;35;47m@[0;1;33;47m@[0;1;31;47m@[0;1;37;47m [0;1;31;47m%[0;5;37;47m8[0;5;37;43m8[0;5;37;45m8[0;5;37;47m8[0;1;37;47m [0;5;37;47m88;  . .     . .    . .  . . %[0;5;30;40mX[0;31;40m;[0;34;40mt[0;31;40mt[0m
[0;34;40m:[0;31;40m%[0;32;40mS[0;34;40m%[0;5;37;40m8[0;5;37;47m%SSXX%%%%t%Sttt;%@[0;1;37;47mt[0;5;37;40mX[0;35;47m8[0;1;30;47m8[0;1;30;45m8[0;33;47m8[0;1;30;47m88[0;5;35;40mS[0;5;31;40mX[0;35;41m8[0;1;30;47m8[0;1;33;47mS[0;1;31;47mX[0;1;37;47m   [0;5;1;33;47m8[0;5;1;35;41m8[0;1;31;43m8[0;5;33;40m@S[0;35;47m8[0;33;47m@[0;1;35;47m%[0;1;37;47m [0;1;33;47mS[0;1;35;47mS[0;1;31;47m8[0;1;33;47mS[0;1;37;47m [0;1;31;47mSS[0;1;33;47mX[0;1;35;47m8[0;1;33;47mS[0;1;35;47m%[0;1;33;47mS[0;5;37;45m8[0;1;37;47m [0;5;1;37;43m8[0;1;37;47m [0;5;37;47m888; .    . .     .      .    %[0;5;30;40mX[0;32;40m;[0;1;30;40mS[0;32;40mt[0m
[0;34;40m:[0;1;30;40mS[0;31;40mt[0;32;40mt[0;5;37;40m8[0;5;37;47m%SSS%S%%%ttttttttSt[0;1;30;47m [0;5;35;40m [0;1;30;47m8[0;5;33;40m.[0;35;47m8[0;33;47mX[0;35;47m@[0;1;30;47m8[0;5;33;40m.;[0;1;31;45m8[0;5;37;40mt[0;1;30;47m8[0;5;33;41mt[0;1;37;47m [0;5;33;41m [0;5;37;40m;[0;5;33;40m:[0;1;30;47m8[0;35;47m8[0;33;47m@[0;1;31;47mS[0;1;37;47m [0;1;33;47mS[0;1;37;47m [0;1;35;47m%[0;5;37;43m8[0;35;47m8[0;1;31;47m@[0;1;33;47mS[0;1;31;47m8XX[0;1;33;47mS[0;1;35;47m@[0;1;33;47m8[0;1;35;47m@[0;5;37;43m8[0;1;35;47mX[0;1;37;47m [0;5;37;47m88[0;1;37;47m [0;5;37;47m8.          .    .  .       %[0;5;30;40mS[0;34;40m;[0;31;40mt[0;34;40m%[0m
[0;34;40m:[0;32;40mt[0;34;40mS[0;31;40mt[0;5;37;40m8[0;5;37;47m%SS%S%%%[0;5;1;36;47m8[0;5;37;47mXttt[0;5;1;36;47m@[0;5;37;47mStttS.[0;1;30;47m%[0;5;35;40mt[0;5;33;40m.[0;1;30;47m8[0;35;47m8[0;1;33;47mX[0;35;47m8[0;1;31;47m@[0;5;37;40mt[0;5;33;40m.[0;1;30;43m8[0;35;47m8[0;1;30;47m8888[0;5;37;41m8[0;1;30;47m8[0;1;31;47m@[0;1;37;47m  [0;1;31;47mX[0;1;37;47m [0;5;37;47m8[0;5;1;33;41m@[0;1;35;47mS[0;1;33;47mX[0;35;47m8[0;1;31;47mX[0;1;30;47m8[0;35;47m8[0;33;47m@[0;1;31;47m8[0;1;30;47m8[0;1;31;47m8[0;33;47mX[0;1;35;47mX[0;1;33;47m8[0;1;35;47m@[0;1;33;47m@[0;5;37;45m8[0;5;1;33;47m8[0;5;37;47mX.. . .  .    .      .  .   %[0;5;30;40mX[0;31;40m;[0;32;40m%[0;31;40mt[0m
[0;34;40m:[0;31;40m%[0;32;40mS[0;34;40m%[0;5;37;40m8[0;5;37;47mtSSSS[0;5;1;36;47m8[0;5;37;47mXSXtt%%Stt;tSt:[0;1;30;47m%[0;5;35;40m.[0;1;30;47m8[0;1;30;45m8[0;1;30;47m8[0;1;33;47mS[0;35;47m8[0;33;47m8[0;37;45m8[0;35;47m8[0;1;31;43m8[0;1;30;47m8[0;1;30;45m8[0;1;31;47m8[0;1;30;47m8[0;35;47m8[0;1;31;47mX[0;1;37;47m [0;1;31;47m@[0;1;37;47m  [0;5;1;35;41m8[0;5;37;47m8[0;1;37;47m [0;1;31;47mX[0;1;35;47mX[0;1;33;47m@[0;35;47m8[0;5;33;41mt[0;1;30;47mt[0;1;37;47m [0;1;30;47m8[0;1;31;47mX[0;1;30;47m8[0;1;33;47m%[0;35;47m@[0;1;37;47m   [0;5;37;47m888..        .    . .       . %[0;5;30;40mX[0;34;40m;[0;1;30;40mS[0;34;40mt[0m
[0;34;40m:[0;1;30;40mS[0;31;40mt[0;32;40mt[0;5;37;40m8[0;5;37;47mSSS%XX%%%%tttttt;;t%; [0;1;37;47m [0;1;30;47m88[0;1;31;47m8[0;35;47m@[0;1;30;47m8[0;1;31;47m8[0;33;47m8[0;5;35;40m:[0;35;47m8[0;5;33;40m.[0;33;47m8[0;1;30;45m8[0;33;47m8[0;1;31;47m@[0;1;30;47m8[0;1;31;47mS[0;1;37;47m [0;1;31;47mS[0;5;37;47m8[0;5;37;43m8[0;1;35;47mX[0;1;33;47m@[0;1;35;47mS[0;33;47m8[0;1;31;47mX[0;1;30;47m8S[0;1;33;47mS[0;1;35;47mX[0;1;33;47mS[0;1;37;47m [0;1;35;47mS[0;1;33;47mS[0;1;37;47m [0;1;31;47mS[0;1;33;47m%[0;1;35;47mS[0;5;37;43m8[0;5;1;35;47m8[0;5;37;47mX.   . .  .   .     .  .    %[0;5;30;40mS[0;32;40m;[0;31;40mt[0;32;40m%[0m
[0;34;40m:[0;32;40mt[0;34;40mS[0;31;40mt[0;5;37;40m8[0;5;37;47m%SSS%%%%%tt[0;5;1;36;47m8[0;5;37;47mStt;t;;t%: [0;1;37;47m [0;5;37;40mS%[0;1;30;47m8[0;35;47mX[0;1;30;47m8[0;35;47mX[0;1;31;47mX[0;1;30;47m8[0;1;31;47m8[0;1;30;47m8[0;35;47m@[0;33;47mX[0;1;35;47mS[0;1;33;47mS[0;1;35;47m%[0;1;33;47mS[0;1;35;47m%[0;5;37;43m8[0;5;37;45m8[0;5;37;43m8[0;1;35;47m@[0;1;33;47m8[0;1;35;47m8[0;33;47m@[0;1;30;47m8[0;1;31;47mS[0;1;30;47m8[0;1;37;47m   [0;1;33;47mS[0;1;35;47m@[0;1;33;47mX[0;1;35;47mS[0;1;33;47mX[0;1;35;47mS[0;5;37;47m8888[0;1;37;47m [0;1;30;47m8[0;1;37;47m :[0;5;37;47m8%:         .      .  %[0;5;30;40mX[0;34;40m;[0;1;30;40mS[0;34;40m;[0m
[0;34;40m:[0;31;40m%[0;32;40mS[0;34;40m%[0;5;37;40m8[0;5;37;47m%SSSS%%%%[0;5;1;36;47m8[0;5;37;47mXSttt[0;5;1;36;47m@[0;5;37;47m%;;;tS.;[0;1;30;47m:88[0;1;31;47m@[0;1;30;47m8[0;1;33;47mS[0;35;47m@[0;1;30;47m8[0;35;47mS[0;33;47mX[0;1;31;47mX[0;1;37;47m [0;1;31;47mX[0;1;37;47m [0;1;31;47mX[0;1;35;47m%[0;1;33;47mX[0;5;37;45m8[0;1;33;47m8[0;1;35;47m8[0;1;33;47mX[0;1;35;47mS[0;1;33;47mS[0;1;37;47m [0;1;31;47mX[0;1;30;47m8[0;1;37;47m [0;1;31;47mS[0;1;37;47m  [0;1;35;47mS[0;1;33;47m8[0;1;35;47m@[0;1;33;47m@[0;1;35;47mX[0;5;37;43m8[0;1;37;47m [0;5;37;47m888[0;1;37;47m [0;1;31;47mX[0;5;33;40m [0;5;31;40m@[0;1;30;41m8[0;5;31;40mS[0;5;35;40m [0;1;30;47m.[0;1;37;47m8[0;5;37;47mt.  .     .      %[0;5;30;40mX[0;31;40m;[0;32;40mt[0;31;40m%[0m
[0;34;40m:[0;1;30;40mS[0;34;40mt[0;32;40mt[0;5;37;40m@[0;5;37;47mSSSS[0;5;1;36;47m8[0;5;37;47m@%%SSttttt%;;;;:%[0;1;37;47m%[0;1;30;47m;[0;5;35;40m:[0;1;30;47mX88[0;35;47m88[0;33;47mX[0;1;35;47mX[0;33;47m8[0;1;35;47mX[0;33;47m@[0;1;35;47mX[0;1;33;47m@[0;1;31;47m8SX[0;1;37;47m [0;1;31;47m@[0;1;37;47m [0;1;33;47mS[0;1;35;47mS[0;1;37;47m  [0;1;31;47mS[0;1;37;47m [0;1;33;47m%[0;1;31;47mX[0;1;37;47m  [0;1;33;47mX[0;1;31;47m@[0;1;35;47m%[0;1;33;47m@[0;1;35;47m@[0;1;33;47mX[0;1;35;47mX[0;5;37;47m8[0;5;1;33;47m8[0;5;1;35;47mX[0;5;1;33;47m8[0;5;37;47m8[0;1;33;47mX[0;1;37;47m [0;1;30;47m88[0;5;35;40m.[0;5;31;40mS[0;5;30;40m8[0;1;30;40m8[0;5;35;40mX[0;5;33;40m.[0;5;37;40m8[0;1;30;47m.[0;1;37;47mS[0;5;37;47m@; .   .  . %[0;5;30;40mS[0;34;40m;[0;1;30;40mS[0;34;40m;[0m
[0;34;40m:[0;31;40mt[0;1;30;40mS[0;34;40m;[0;5;37;40m8[0;5;37;47mSSSXX%S%%%tttttttt@[0;1;36;47mS[0;36;47m8[0;5;34;40m8[0;1;30;44m8[0;5;35;40mXt.[0;1;30;47m88[0;33;47m@[0;35;47m8[0;33;47m8[0;35;47m8[0;1;31;47m8[0;1;30;47m8[0;1;31;47m@[0;1;30;47m8[0;35;47m@[0;1;37;47m [0;1;31;47mX[0;1;30;47m8[0;1;37;47m        [0;1;31;47m@[0;1;35;47mS[0;33;47m@[0;1;31;47mSS[0;1;35;47mX[0;1;33;47m@[0;1;31;47m@[0;1;35;47m%[0;1;33;47m8[0;1;35;47mX[0;5;37;43m8[0;5;37;45m8[0;5;37;43m8[0;5;37;47m8[0;5;1;35;41m8[0;5;37;47m8[0;1;31;47mS[0;1;37;47m [0;1;33;47mS[0;1;37;47m [0;1;33;47mS[0;1;30;47m@88[0;5;33;40m%[0;5;31;40m@[0;1;30;40m@[0;34;40m%[0;1;30;40m@8[0;5;36;40m%[0;5;35;40m [0;1;30;47m:[0;1;37;47m8[0;5;37;47mt  .   %[0;5;30;40mX[0;31;40m;[0;32;40mt[0;31;40mt[0m
[0;34;40m:[0;32;40m%[0;31;40mt[0;32;40mt[0;5;37;40m@[0;5;37;47mSSSSS%%[0;5;1;36;47m8[0;5;37;47mXtttt[0;5;1;36;47m@[0;5;37;47mS%[0;1;36;47mS[0;36;47m8[0;36;44m@[0;1;30;44mS[0;34;40m8[0;1;30;40m888[0;5;33;40mt[0;1;30;47m88[0;1;37;47m [0;35;47m@[0;33;47m8[0;35;47m8[0;33;47m8[0;1;30;47m8[0;35;47m8[0;1;30;47m8[0;1;31;47mX[0;1;30;47m8[0;1;35;47mS[0;1;33;47mX[0;1;35;47m@[0;1;33;47m@[0;1;35;47mS[0;1;37;47m   [0;5;37;41m8[0;1;31;47m@[0;5;37;40m.[0;33;47m8[0;5;33;41m8[0;1;30;47m@[0;35;47mX[0;33;47m8[0;1;31;47m@[0;1;30;47m8[0;1;33;47mS[0;1;31;47m@[0;1;37;47m [0;1;31;47mX[0;1;37;47m [0;1;33;47mX[0;5;37;45m8[0;5;37;43m8[0;5;37;47m8[0;1;33;47mS[0;5;37;47m8[0;1;31;47mS[0;1;37;47m [0;1;31;47mS[0;1;37;47m [0;1;33;47mS[0;1;37;47m [0;1;33;47mS[0;1;30;47m@@8[0;5;33;40m;[0;5;31;40m8[0;34;40m:[0;31;40m%[0;5;30;40m8[0;34;40m8[0;5;36;40m%[0;5;35;40m.[0;1;30;47m:[0;5;37;47mX    %[0;5;30;40mX[0;34;40m;[0;1;30;40mS[0;34;40m;[0m
[0;34;40m:[0;1;30;40mS[0;34;40mtt[0;5;37;40m8[0;5;37;47m%SSS%%SXt%%[0;5;1;36;47m@[0;5;37;47m88[0;36;47m8[0;36;44m8[0;1;30;44m8%[0;34;40mX[0;1;30;40m8[0;34;40mX[0;1;30;40m8@[0;5;30;40m@[0;5;37;40m%[0;1;30;47m88[0;33;47mX[0;1;30;47m8[0;5;35;40m:[0;1;30;47m8[0;5;35;40mt[0;1;30;47m8[0;1;30;43m8[0;35;47m@[0;1;30;47m8[0;33;47mX[0;5;35;40m.[0;1;30;47m8[0;33;47m8[0;35;47m8[0;33;47m8[0;1;31;47m88[0;5;37;40m;[0;5;33;40m. [0;5;37;40m.[0;1;30;45m8[0;5;37;40mS[0;5;33;40m [0;33;47m8[0;35;47m8[0;33;47m8[0;1;35;47mX[0;1;31;47m@[0;1;33;47m%[0;1;31;47mS[0;1;37;47m [0;1;33;47mS[0;1;35;47mX[0;5;37;43m8[0;5;37;45m8[0;5;37;43m8[0;5;1;35;47m8[0;5;37;43m8[0;1;37;47m [0;5;37;47m8[0;5;37;41m8[0;5;37;47m8[0;1;31;47mX[0;1;37;47m [0;1;31;47mS[0;1;37;47m [0;1;33;47mX[0;35;47mS[0;33;47mX[0;5;33;40m [0;5;31;40m8[0;1;30;40mX88[0;34;40m8[0;5;34;40m8[0;1;30;40m8[0;5;36;40m8 [0;1;37;47m @[0;5;37;47mSS[0;5;30;40mX[0;32;40m;[0;31;40mt[0;32;40m%[0m
[0;34;40m:[0;31;40mt[0;32;40m%[0;31;40mt[0;5;37;40m8[0;5;37;47m%XSSS[0;5;1;36;47m8[0;5;37;47m@%X[0;1;37;47m@[0;1;36;47m8[0;5;35;40m;[0;36;44m@[0;30;44m%@[0;5;30;40m8[0;34;40m@[0;1;30;40m@[0;34;40mX[0;1;30;40m8[0;34;40mSS[0;1;30;40mX[0;5;30;40m8[0;5;33;40m.[0;1;30;47m8[0;33;47m8[0;35;47m8[0;33;47m@[0;1;31;47m@[0;5;37;40m;[0;33;47m8[0;1;30;45m8[0;5;33;40m.[0;1;30;47m8[0;5;35;40m.[0;1;30;45m8[0;1;37;47mt[0;5;37;47m@[0;1;30;47m8[0;5;37;47m8[0;1;30;47mX[0;1;37;47m.[0;5;37;47mt[0;5;37;40m;[0;5;37;47m888S[0;5;33;40m [0;5;37;47m8@[0;1;37;47m [0;1;30;43m8[0;33;47mS[0;1;37;47m [0;1;31;47mX[0;1;37;47m [0;1;33;47mS[0;5;37;45m8[0;5;37;43m8[0;1;35;47mS[0;1;33;47mS[0;1;37;47m  [0;5;1;37;45m8[0;5;1;31;43m8[0;5;37;47m8[0;1;33;47m%[0;1;31;47mS[0;1;37;47m [0;1;33;47mX[0;1;37;47m [0;1;31;47mS[0;1;37;47m [0;1;33;47mX[0;1;31;47m@[0;5;33;40mt[0;1;30;41m@[0;31;40m8[0;1;30;40m88@[0;34;40mX8[0;1;30;40m8[0;30;44m8[0;34;40m8[0;5;30;40m@[0;1;30;44m8[0;5;30;40mS[0;34;40m%[0;32;40m%[0;34;40m%[0;31;40m%[0m
[0;34;40m:[0;1;30;40mS[0;34;40mt[0;32;40mt[0;5;37;40m8[0;5;37;47mSXSSXX8[0;1;36;47m8[0;36;44m8[0;1;30;44mX[0;30;44m88[0;1;30;40m@[0;34;40m@[0;1;30;40m8[0;34;40m@X[0;32;40mX[0;34;40m8X[0;32;40m@[0;34;40m@[0;1;30;40m@X[0;5;33;40m%[0;1;30;47m8[0;35;47m8[0;33;47m8[0;35;47m@[0;33;47m@[0;1;30;47m88[0;33;47m8[0;1;30;47m8[0;5;35;40m:[0;33;47m@[0;5;33;40m;[0;1;37;47m [0;5;37;47m.8%[0;1;37;47m  [0;5;37;47m;[0;1;30;47m8[0;5;37;47m@[0;1;37;47m;[0;1;30;47m8[0;5;37;47mS[0;1;30;47m8[0;5;37;47m88[0;5;35;40m [0;35;47m8[0;1;31;47m@[0;1;33;47mS[0;1;35;47mS[0;1;33;47m@[0;1;35;47mX[0;5;37;43m8[0;1;35;47mS[0;1;33;47mS[0;5;37;47m8[0;5;1;33;41m8[0;5;37;47m8[0;1;33;47m%[0;5;37;47m8[0;5;37;41m8[0;5;37;47m8[0;1;33;47mX[0;1;35;47mS[0;1;33;47mX[0;1;35;47mS[0;5;37;43m8[0;1;35;47mX[0;1;33;47mX[0;1;30;45m8[0;33;41m@[0;5;30;40m8[0;1;30;40m88[0;34;40mX[0;1;30;40m@8[0;34;40m8[0;1;30;40m88[0;34;40m8@[0;32;40m8[0;34;40m8[0;1;30;40m@[0;31;40mt[0;1;30;40mX[0;32;40mt[0m
[0;34;40m:[0;32;40mt[0;31;40mS[0;34;40m%[0;5;37;40m8[0;5;37;47m%@[0;1;36;47mX%[0;36;47m8[0;1;30;46m8[0;1;30;44mX[0;30;44m8[0;1;30;40m8[0;34;40mS[0;1;30;40m8[0;34;40mX[0;1;30;40m8[0;34;40mXX[0;1;30;40m8[0;34;40m@8[0;1;30;40m8[0;34;40mX[0;1;30;40m8[0;34;40mX[0;1;30;40mX[0;31;40m%[0;5;31;40mX[0;5;33;40m.[0;33;47m8[0;35;47m@[0;33;47m8[0;35;47m8[0;33;47m8[0;35;47m8[0;33;47m8[0;35;47m8[0;33;47m8[0;35;47m8[0;1;30;43m8[0;1;37;47mt[0;5;37;47m;%.[0;1;30;47mS[0;1;37;47m:[0;5;37;47mt[0;5;37;40mS[0;5;37;47mt[0;1;37;47mt[0;5;33;40m.[0;1;30;47m@[0;5;33;40m:[0;5;37;47m8%[0;1;37;47m [0;1;30;43m8[0;1;35;47mS[0;1;31;47m@[0;1;33;47mS[0;1;35;47mX[0;5;37;43m8[0;5;37;45m8[0;5;37;43m8[0;5;37;45m8[0;1;37;47m [0;5;37;47m8[0;5;37;41m8[0;5;37;47m8[0;1;37;47m [0;5;37;47m8[0;5;37;41m8[0;5;37;47m8[0;5;1;33;41m8[0;1;37;47m [0;1;31;47mS[0;1;37;47m [0;1;31;47mX[0;5;37;41m8[0;5;33;40m8[0;1;30;41m8[0;31;40mS[0;1;30;40m8[0;34;40mX[0;1;30;40m8[0;34;40m8[0;1;30;40m8[0;34;40m@8[0;1;30;40m88[0;30;44m8[0;5;30;40m@[0;34;40mX[0;32;40mS[0;34;40m%[0;31;40mt[0;34;40mt[0m
[0;34;40m:[0;1;30;40mS[0;32;40mt[0;34;40mt[0;5;36;40mXS[0;5;34;40m8[0;1;30;44m8[0;34;40m@[0;30;44m8[0;34;40m8[0;1;30;40mX[0;34;40mXS[0;1;30;40m@[0;34;40mSSS[0;1;30;40m8[0;34;40mSS[0;1;30;40m8[0;34;40mS[0;32;40mX[0;34;40m8[0;1;30;40m8[0;34;40mSXX[0;1;30;40m8[0;5;35;40m%[0;1;30;47m8[0;33;47m8[0;35;47m8[0;33;47m8[0;35;47m8[0;33;47m8[0;35;47m8[0;33;47m8[0;35;47m8[0;33;47m8[0;1;30;45m8[0;1;37;47m.[0;5;37;47m8[0;1;30;47m8[0;5;37;47m;[0;1;30;47m%[0;1;37;47m.[0;5;37;47mt[0;5;33;40m [0;5;37;47m8888[0;5;33;40m [0;5;37;47m8X[0;1;37;47m [0;1;30;47m8[0;33;47m8[0;1;37;47m [0;1;31;47m@[0;1;33;47mS[0;1;35;47m@[0;5;37;43m8[0;1;35;47mS[0;5;37;43m8[0;1;37;47m  [0;5;37;47m8[0;5;1;33;41m8[0;5;37;47m8[0;5;37;41m8[0;5;37;47m8[0;1;33;47mX[0;1;35;47m%[0;1;37;47m [0;1;33;47mS[0;1;31;47m@[0;1;30;47m8[0;1;30;41m8[0;31;40m8[0;1;30;40m@[0;34;40m@[0;1;30;40m8[0;34;40mX[0;1;30;40m@[0;34;40m@X[0;1;30;40m8[0;32;40m@[0;30;44m8[0;32;40m8[0;34;40m8@[0;1;30;40m8[0;34;40mt[0;32;40mS[0;1;30;40mX[0;31;40m;[0m
[0;34;40m:[0;31;40mt[0;1;30;40mS[0;31;40m;[0;34;40mtX[0;32;40mS[0;34;40m%[0;32;40mS[0;34;40mX[0;1;30;40mX[0;34;40mS[0;1;30;40mX[0;34;40m%%[0;32;40mS[0;34;40m@[0;1;30;40m8[0;34;40mS[0;32;40mX[0;34;40m8[0;32;40mX[0;34;40m8@[0;1;30;40m8[0;34;40mS[0;32;40mX[0;1;30;40m@[0;34;40mX[0;1;30;40mX[0;31;40m8[0;5;35;40m.[0;1;30;47m8[0;33;47m8[0;35;47m8[0;33;47m8[0;1;31;47m8[0;1;30;47m8[0;33;47m8[0;35;47m8[0;33;47m88[0;5;35;40m:[0;5;37;40m;[0;5;31;40mX[0;5;33;40m :. .t [0;1;30;47m8[0;5;33;40m.[0;1;30;47m8[0;5;37;40m:[0;1;30;47m8[0;5;33;40m.[0;1;31;47m8[0;1;33;47mS[0;1;31;47mX[0;1;37;47m [0;1;31;47m@[0;1;33;47mS[0;1;35;47m@[0;1;33;47mX[0;5;37;45m8[0;5;37;43m8[0;5;37;45m8[0;5;37;43m8[0;5;37;45m8[0;1;33;47mS[0;1;37;47m [0;1;31;47mX[0;1;37;47m [0;1;33;47mS[0;5;37;45m8[0;5;37;43m8[0;5;35;41m;[0;5;35;40m%[0;31;40m8[0;5;30;40m8[0;34;40mX[0;1;30;40m8[0;34;40mS[0;1;30;40m8[0;34;40m@[0;1;30;40m8[0;34;40mX[0;1;30;40m8[0;30;44m8[0;1;30;40m8[0;34;40m8[0;1;30;40m8[0;32;40m@[0;34;40m8[0;1;30;40m@[0;31;40mt[0;32;40mt[0;34;40m%[0m
[0;34;40m:[0;32;40mt[0;34;40mt[0;32;40m%[0;1;30;40mX8[0;5;30;40m8[0;5;34;40m8[0;5;30;40m@X[0;1;30;40m8[0;34;40m@[0;5;30;40m88[0;1;30;40m8[0;34;40m8[0;32;40mX[0;34;40m@X[0;1;30;40m8[0;34;40m@@[0;1;30;40m8[0;34;40mS[0;32;40mS[0;34;40m8@X[0;1;30;40m@[0;34;40mX[0;1;30;40m8[0;5;31;40m8[0;5;35;40mX[0;5;37;40mt[0;33;47m8[0;35;47m8[0;33;47m8[0;35;47m8[0;33;47m8[0;35;47m8[0;1;31;47m8[0;1;30;47m8[0;1;33;47mS[0;1;31;47mX[0;1;30;47m8[0;1;31;43m8[0;1;30;47m88[0;33;47m8[0;1;31;47m8[0;1;30;47m8[0;33;47m8[0;1;31;47m@[0;1;37;47m [0;1;33;47mX[0;1;35;47mX[0;1;33;47mX[0;1;37;47m [0;1;35;47m%[0;1;33;47mS[0;1;35;47mX[0;1;33;47m8[0;1;35;47m@[0;1;33;47m8[0;1;35;47mS[0;5;37;43m8[0;1;37;47m  [0;5;37;43m8[0;5;37;45m8[0;5;37;43m8[0;1;37;47m  [0;5;37;47m8[0;5;1;33;41m8[0;5;37;47m8[0;5;37;41m8[0;5;35;40m:%[0;31;40m@[0;5;30;40m8[0;34;40m@[0;1;30;40m8[0;34;40m@[0;1;30;40m8[0;34;40m@[0;1;30;40m8[0;34;40m@[0;1;30;40m8[0;34;40m@[0;1;30;40m8[0;34;40m8[0;1;30;40m8[0;34;40m8[0;1;30;40m8[0;34;40m@[0;32;40m%[0;34;40m%[0;31;40m%[0;32;40m%[0m
[0;34;40m:[0;31;40m%[0;1;30;40mX[0;31;40m;[0;34;40m%[0;32;40m%[0;34;40mt[0;32;40mt[0;34;40mtt[0;32;40m%[0;34;40m%[0;32;40mt[0;34;40m%[0;32;40m%[0;34;40mS[0;1;30;40mX[0;32;40mt[0;1;30;40mS[0;34;40mt[0;32;40mS[0;1;30;40mX[0;32;40mt[0;34;40mS[0;1;30;40mX[0;32;40m%[0;1;30;40mX[0;32;40m%[0;34;40m%[0;32;40m%[0;34;40m%[0;31;40m;@[0;5;31;40m8[0;1;30;41mX[0;5;31;40m8[0;1;30;41m@@X[0;5;30;40m8[0;1;30;41m8@[0;5;31;40m888X[0;1;30;41m8[0;30;41mX[0;5;31;40m88[0;1;30;41mS8[0;5;31;40m8[0;1;30;41mX8@8888@@X88[0;35;41m8[0;1;30;41m8[0;1;31;41m8[0;5;35;40mX[0;5;31;40m8[0;1;30;45m8[0;1;31;41m8[0;1;30;41m88[0;1;30;45m8[0;1;30;41mS8[0;31;40mX[0;1;30;40mS[0;34;40m%[0;32;40m%[0;1;30;40mX[0;34;40m%[0;32;40mX[0;34;40mS[0;32;40mX[0;34;40mS[0;32;40mX[0;34;40mS[0;32;40m@[0;34;40mS[0;32;40m@[0;34;40mS[0;32;40mX[0;34;40mX[0;1;30;40mX[0;31;40mt[0;32;40mS[0;34;40mS[0;31;40m%[0m
[0;34;40m:[0;32;40m%[0;34;40mt[0;1;30;40mX[0;32;40m;[0;34;40m%[0;31;40m%[0;32;40m%[0;31;40mt[0;1;30;40mX[0;34;40mt[0;31;40m%[0;1;30;40mX[0;32;40m;[0;1;30;40mX[0;31;40mt[0;34;40mt[0;1;30;40mS[0;32;40m;[0;31;40m%[0;34;40m%[0;31;40mt[0;1;30;40mX[0;32;40mt[0;34;40mt[0;31;40m%[0;34;40mt[0;1;30;40mX[0;31;40mt[0;1;30;40mS[0;32;40m;[0;1;30;40mS[0;32;40m;[0;34;40m;[0;32;40m;[0;34;40m:[0;32;40m;[0;34;40m;[0;32;40m;:[0;34;40m;[0;32;40m;[0;34;40m;:::[0;32;40m;[0;34;40m%[0;32;40m:[0;34;40m:[0;32;40m;[0;34;40m;[0;32;40m:[0;34;40m;[0;32;40m;[0;31;40mt[0;1;30;40mS[0;31;40mt[0;32;40mt[0;31;40m%[0;34;40mt[0;32;40mt[0;31;40mt[0;1;30;40mS[0;31;40mt[0;1;30;40m@XX[0;31;40mSS[0;32;40mS[0;1;30;40m@[0;31;40mXS[0;32;40mt;[0;34;40m;[0;32;40m%[0;1;30;40mS[0;32;40mt[0;34;40m%[0;31;40m%[0;1;30;40mSS[0;31;40mt[0;1;30;40mX[0;32;40mt[0;1;30;40m@[0;31;40mt[0;1;30;40mX[0;32;40mt[0;1;30;40mX[0;31;40mt[0;1;30;40mS[0;32;40mt[0;34;40mt[0;1;30;40mX[0;31;40mt[0;1;30;40mX[0;32;40mt[0m

    )" << endl;
        std::cout << "Congrats ! You have set a new record." << endl;
        std::cout << "Best score " << mode << ": " << score << endl;
        std::cout << endl;
        std::cout << "Press enter to return: ";
        std::cin.ignore(1000, '\n');
        return true;
    }
    else
    {
        std::cout <<  R"(
        [0;32;40m:[0;1;30;40m8[0;1;37;47m%[0;5;37;47m@@@@@@@@@@@@@@@@@@8@@@[0;1;37;47mt[0;5;36;40m:[0;5;33;40m;.[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;5;33;40m.[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;5;33;40m [0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;5;33;40m [0;37;43m8[0;5;33;40m.[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;5;33;40m [0;37;43m8[0;5;33;40m .;[0;1;30;47mt[0;5;37;47m88@@[0;1;37;47mS[0;1;30;47m@[0;5;36;40mt[0;5;33;40mX:.[0;37;43m8[0;5;33;40m:[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;5;33;40m.[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;5;33;40m [0;1;30;43m8[0;1;30;47m8[0;5;33;40mt.t[0;1;30;47m.[0;5;37;47m@@8@@@@@@@@@@@@@@@@@[0;5;36;40m [0;34;40mt[0m
[0;32;40m:[0;1;30;40m8[0;1;37;47m%[0;5;37;47mX@@@@@@@@@@@@@@@@@8@[0;1;37;47m%[0;1;30;47m8[0;5;36;40m:[0;5;33;40m [0;37;43m8[0;33;47m8[0;5;36;42m@[0;37;43m8[0;5;37;40m:[0;1;32;47m8[0;1;30;43m8[0;5;37;42m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42m@[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;37;43m@[0;1;30;43m8[0;1;30;47m8[0;5;36;40mt[0;5;33;40m [0;1;30;47m;t[0;5;37;40m8[0;5;36;40m.[0;5;33;40m.;[0;37;43m8[0;33;47m8[0;1;32;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42m@[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42m@[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;5;37;40m;[0;5;36;40m:[0;1;30;47m8[0;1;37;47m8[0;5;37;47m@@@@@@@@@@@@@@@@@X[0;5;37;40mS[0;34;40m%[0m
[0;32;40m:[0;1;30;40m8[0;1;37;47m%[0;5;37;47m@@@X@@X@@X@@X@@@8@8[0;5;36;40m .[0;5;37;40mS[0;37;43m8[0;1;30;43m8[0;1;32;46m8[0;33;47m8[0;5;33;40m.[0;33;47m8[0;5;33;42mS[0;1;30;47m8[0;37;43m8[0;5;33;40m:[0;37;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;36;42mS[0;37;43m8[0;1;30;43m8[0;1;30;47m8[0;5;33;40m%[0;5;32;40m8[0;5;33;40m.[0;37;43m88[0;1;32;46m8[0;33;47m8[0;1;30;46m8[0;33;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42m%[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;5;33;40m;[0;5;36;40m;[0;1;37;47m%[0;5;37;47m@8@@@@@X@@@@X@@@X[0;5;37;40mt[0;34;40m%[0m
[0;32;40m:[0;1;30;40m8[0;1;37;47m%[0;5;37;47m@X@@@@@@@@@@@@@@@[0;1;37;47m.[0;1;30;46m8[0;1;30;47m@[0;5;37;40m:[0;1;32;43m8[0;36;47m8[0;33;47m8[0;1;30;43m8[0;33;47m8[0;5;33;42mS[0;1;30;47m8[0;5;33;40m.[0;1;32;43m8[0;1;30;47m8[0;5;33;42m%[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;5;33;42mS[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;32;47m8[0;5;33;40m.[0;5;32;40mX[0;5;36;40m:[0;33;47m8[0;1;30;43m8[0;33;47m8[0;5;33;42mX[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;5;33;42mS[0;33;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;40m.[0;5;37;42m8[0;33;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;40m:[0;5;36;40m%[0;1;37;47m8[0;5;37;47mX8@@X@@@@X@@@@@X[0;5;37;40m%[0;34;40mS[0m
[0;32;40m:[0;1;30;40m8[0;1;37;47m%[0;5;37;47m@@@@@@@@@@@@@@@8[0;1;37;47m [0;5;36;40m;[0;5;37;40m8[0;5;33;40m.[0;33;47m8[0;1;30;47m8[0;5;33;42m@[0;1;30;47m8[0;5;33;42m@[0;1;30;47m8[0;5;37;40mS[0;1;30;43m8[0;33;47m@[0;1;30;47m8[0;1;30;43m8[0;5;37;40mt[0;5;33;40m%[0;5;36;40m;[0;5;33;40m%[0;1;32;46m8[0;1;30;43m8[0;5;36;40m [0;5;33;40m.[0;5;36;40m:[0;5;33;40m:[0;5;36;40m [0;5;33;40mt[0;5;36;42m8[0;1;30;43m8[0;5;33;40m.[0;1;32;43m8[0;1;30;47m8[0;5;33;40m:[0;1;32;47m8[0;1;30;43m8[0;33;47m8[0;5;33;40m;[0;1;32;42m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;40m.[0;33;47m8[0;5;33;40m.[0;37;43m8[0;5;37;40m;[0;37;43m8[0;5;37;40m;[0;33;47m8[0;5;36;40m:[0;5;33;42mt[0;1;30;47mS[0;1;30;43m8[0;36;47m8[0;5;33;42mS[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;5;33;42mS[0;5;37;40m@8[0;5;37;47m8@@@@@@@@@@@@@@@[0;5;37;40m%[0;34;40mX[0m
[0;32;40m:[0;1;30;40m8[0;1;37;47m%[0;5;37;47m@@@@@X@@@X@@@@8[0;36;47m8[0;5;36;40m:[0;1;30;47mX[0;5;33;40m.[0;5;37;42m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;40m.[0;37;43m8[0;5;33;42mX[0;1;30;47m8[0;36;42m@[0;1;30;43m8[0;1;30;46m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;33;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42m%[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;37;43m8[0;5;37;40m:[0;33;47m8[0;1;30;46m8[0;1;30;43m8[0;5;36;40m%[0;1;30;43m8[0;1;30;46m8[0;1;32;43m8[0;1;30;47m8[0;5;33;40m;;[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;5;33;42m@[0;1;30;47m8[0;5;33;42m@[0;5;37;40mt[0;1;32;43m8[0;5;37;40mt[0;5;33;42m8[0;1;30;47m8[0;5;33;40m.[0;1;30;43m8[0;5;33;40m [0;1;30;43m8[0;5;37;40m;[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;40m.[0;5;36;40m:[0;1;37;47mS[0;5;37;47m@@8@@@@@@@@X@@X[0;1;30;47m8[0;34;40mS[0m
[0;32;40m:[0;1;30;40m8[0;1;37;47m%[0;5;37;47mX@@X@@@@@@@@@8[0;1;36;47m@[0;5;35;40m.[0;1;30;47m8[0;5;33;40m:[0;1;32;47m8[0;1;30;43m8[0;36;47m8[0;5;33;42mS[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;5;33;40m:[0;5;36;40mt[0;1;30;43m8[0;5;37;40m;[0;33;47m8[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;33;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42m%[0;1;30;47m8[0;1;30;43m8[0;5;36;40m%[0;5;33;40m@[0;5;36;40mt[0;1;30;42m8[0;5;33;40m::S[0;5;36;40m@[0;5;32;40m8[0;5;33;40m;[0;5;36;40mt[0;5;33;40m;[0;5;36;40m;[0;5;33;40m.[0;1;30;43m8[0;5;36;40m.[0;5;33;42mX[0;1;30;47m8[0;5;33;40mt[0;5;36;40m:[0;1;30;43m8[0;32;46m8[0;1;30;43m8[0;36;42m@[0;5;33;40mX[0;1;30;42m8[0;5;33;40m:[0;5;36;40m:t[0;5;37;47m88@@@@@@@X@@@@8[0;1;30;46m8[0;34;40m@[0m
[0;32;40m:[0;5;30;40m8[0;1;37;47m;[0;5;37;47m@@@@@@@@@@@@@[0;1;37;47m [0;5;36;40m%[0;5;37;40m8[0;5;33;40m.[0;5;33;42m%[0;1;30;47m@[0;1;30;43m8[0;33;47m8[0;5;33;40m.[0;33;47m8[0;5;37;40mt[0;5;33;42mS[0;5;37;40mS[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mt[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mt[0;33;47m8[0;37;43m8[0;1;32;46m8[0;33;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mX[0;5;37;40m%[0;5;33;40mS[0;1;30;42m8[0;5;33;40m.[0;1;30;43m8[0;5;36;40m.[0;37;43m8[0;5;33;40m:[0;37;43m8[0;5;33;42m@[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m@8[0;1;32;43m8[0;1;30;47m8[0;5;33;42mt[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;46m8[0;5;36;40m [0;36;47m8[0;1;30;47m8[0;1;36;47mS[0;5;37;47m8888@@@@@@@[0;35;47m8[0;34;40m%[0m
[0;32;40m:[0;1;30;40m8[0;1;37;47m%[0;5;37;47m@X@@@@@@@8@@[0;1;36;47mS[0;5;36;40m;[0;1;30;47mX[0;5;33;40m:[0;33;47m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;37;43m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;5;37;42m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42m@[0;5;37;40m%[0;5;33;40m [0;1;30;43m8[0;1;30;46m8[0;1;32;43m8[0;5;37;40m;[0;1;30;43m8[0;5;37;40m%[0;1;30;43m8[0;5;36;40m.[0;1;30;47m8[0;5;32;40mS[0;1;30;46m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;5;37;40m%[0;37;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;32;43m8[0;1;30;47m8[0;37;43m8[0;5;37;40m:[0;1;30;47m8[0;5;36;40m.[0;5;37;40m8[0;1;30;46m8[0;5;36;40m [0;1;36;47m@[0;1;37;47m [0;5;37;47m88@@@@@[0;1;30;46m8[0;34;40m@[0m
[0;32;40m:[0;1;30;40m8[0;1;37;47m%[0;5;37;47m@@@@@@@@8[0;5;1;36;47mt[0;5;37;47m88[0;5;35;44m@[0;5;37;40mX[0;1;30;43m8[0;5;37;42m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;5;33;40m [0;1;32;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;32;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;37;40m;[0;33;47m8[0;1;32;46m8[0;1;30;43m8[0;5;36;40m%[0;1;30;42m8[0;5;33;40m.%:[0;5;33;42mX[0;1;30;47m8[0;5;33;40m.[0;1;30;43m8[0;37;46m8[0;1;30;43m8[0;1;32;46m8[0;1;30;43m8[0;5;32;40mS[0;1;30;43m8[0;5;32;40mS[0;1;30;42m8[0;5;32;40mS[0;5;37;40mX[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;5;36;42m%[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42m%[0;1;30;47m8[0;1;30;42m8[0;5;33;40m:.%[0;5;36;40mt[0;33;42m@[0;5;36;40m@[0;33;42m8[0;5;36;40mS[0;1;30;42m8[0;5;32;40m@[0;1;30;42m8[0;5;33;40mX[0;5;36;40mS[0;5;33;40mS[0;5;36;40m [0;1;30;47m8[0;5;37;40m8[0;5;36;40m%[0;36;47mX[0;5;37;47m88@@@@[0;35;47m8[0;34;40mS[0m
[0;32;40m:[0;5;30;40m8[0;1;37;47m;[0;5;37;47mX@@@@@@[0;5;1;36;47m%[0;5;37;47m888[0;1;36;47m@[0;5;36;40m [0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;37;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;5;37;40mt[0;5;33;40m [0;1;30;43m8[0;32;46m8[0;1;30;43m8[0;5;33;40m..[0;1;30;43m8[0;5;37;40m;[0;5;33;40m:[0;1;32;43m8[0;5;36;40m [0;5;33;40m [0;1;30;43m8[0;5;36;40m;[0;1;30;43m8[0;1;30;46m8[0;1;30;43m8[0;5;33;40m :[0;1;30;43m8[0;1;30;46m8[0;37;43m8[0;5;33;40m.;t[0;5;36;40mt[0;1;30;43m8[0;1;30;47m8[0;5;33;40m.[0;1;30;43m8[0;5;36;40m.[0;5;33;40m:.;[0;1;30;43m8[0;1;30;46m8[0;1;30;43m88[0;5;36;40m:[0;5;33;40m:[0;1;30;43m8[0;5;36;40m;[0;5;33;40m%t;;[0;1;30;43m8[0;5;36;40m;[0;1;30;43m8[0;1;30;46m8[0;1;30;43m8[0;5;36;40mt.t[0;36;47mS[0;5;37;47m8888@[0;37;46m8[0;34;40mS[0m
[0;32;40m:[0;1;30;40m8[0;1;37;47m%[0;5;37;47m@@@@@@888[0;5;37;44m8[0;1;30;47m8[0;5;36;40m%[0;5;33;40m [0;37;43m8[0;5;36;42m%[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;5;36;42mS[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;5;33;40m.[0;33;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;5;37;40mS[0;5;33;40mS[0;1;30;43m8[0;1;30;46m8[0;33;47m8[0;1;30;43m8[0;5;36;40m:[0;1;30;43m8[0;1;30;46m8[0;1;30;43m8[0;5;36;40m.[0;33;47m8[0;1;30;46m8[0;1;30;47m@88[0;33;47m8[0;36;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;46m8[0;1;30;43m8[0;5;36;40m.[0;1;30;43m8[0;1;30;46m8[0;1;30;43m8[0;5;36;40m%[0;1;30;42m8[0;5;33;40mt:[0;1;30;46m8[0;1;30;43m8[0;5;36;40m:[0;1;32;43m8[0;5;36;40m:[0;5;33;40m:[0;1;32;43m8[0;1;30;47m8[0;1;32;46m8[0;1;30;43m8[0;1;30;47m8[0;5;36;40m%[0;1;30;43m8[0;5;36;40m:[0;1;30;43m8[0;1;30;46m8[0;1;30;43m8[0;1;32;46m8[0;1;30;43m8[0;5;36;40m [0;1;30;43m8[0;5;36;40m%[0;1;30;43m8[0;5;36;40mt .[0;1;30;46m8[0;1;30;47m8[0;5;37;47m888[0;1;30;45m8[0;34;40m@[0m
[0;32;40m:[0;1;30;40m8[0;1;37;47m%[0;5;37;47m@@@888[0;5;36;44m [0;1;30;47m8[0;1;30;46m8[0;1;30;47mS[0;5;36;40mX[0;5;33;40m:[0;37;43m8[0;5;37;40m.[0;33;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;5;37;42m8[0;1;30;43m8[0;1;30;47m8[0;37;43m8[0;5;33;40m:[0;33;47m8[0;5;33;42m8[0;1;30;47m8[0;5;33;40mt[0;1;32;43m8[0;5;36;40m;:t[0;1;32;43m8[0;5;37;40mX[0;1;30;46m8[0;1;30;43m88[0;1;30;46m8[0;5;33;40m:[0;1;30;47m88[0;1;37;47m [0;1;30;47m8[0;5;36;40m:.[0;5;33;40m8[0;1;30;42m8[0;5;32;40m8@[0;5;36;40m.[0;1;37;47m [0;5;37;47mS. 88[0;1;37;47m  [0;1;30;47m8[0;33;47m8[0;5;36;40m;[0;1;30;43m8[0;5;37;40m:[0;1;32;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m888S[0;5;36;40mt[0;5;32;40m@[0;5;33;40m [0;1;30;42m8[0;30;42m88[0;5;32;40m8S[0;5;37;40m8[0;1;37;47mS[0;5;37;47m8[0;1;37;47m  [0;1;30;47m8[0;5;33;40m  [0;1;30;47m8[0;5;36;40m;8;[0;5;37;47m88[0;36;47m8[0;34;40m%[0m
[0;32;40m:[0;5;30;40m8[0;1;37;47m;[0;5;37;47mX@8@[0;1;36;47mX[0;5;36;40m%[0;1;30;47m8[0;5;33;40m [0;33;47m8[0;5;33;40m.@[0;5;36;40m:[0;5;33;42mt[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m@8[0;1;32;43m8[0;1;30;47m8[0;5;36;40m:[0;32;43m8[0;5;36;40m;[0;1;30;46m8[0;33;47m8[0;1;30;47m8[0;5;37;47m8X8[0;1;30;42m8[0;32;40m8[0;5;37;40m%[0;5;37;47m@[0;5;36;40m@[0;31;40m  [0;32;40m.t%[0;5;36;40m [0;5;37;47m: ::::;;S[0;1;37;47m%[0;1;30;47m8[0;5;36;40mt[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m88[0;1;37;47m;[0;5;37;47m8:[0;1;37;47mt[0;1;30;42m@[0;32;40m.[0;5;37;40mX[0;5;37;47m@[0;5;36;40mS[0;31;40m.[0;34;40m:[0;31;40m..[0;32;40m [0;5;36;40m%[0;5;37;47m8::.@[0;1;30;47m8[0;5;33;40m::[0;5;36;40m [0;5;37;40m8[0;1;30;46m8[0;1;37;47m [0;5;35;40m.[0;34;40mX[0m
[0;32;40m:[0;1;30;40m8[0;1;37;47mt[0;5;37;47m@@8[0;1;36;47m%[0;5;35;40mt[0;5;37;40m8[0;5;33;40m:[0;33;47m8[0;5;33;42m@[0;5;37;40mS[0;1;30;42m8[0;1;30;47m8[0;37;43m8[0;5;33;40m.[0;33;47m8[0;5;36;42mS[0;33;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;32;43m8[0;1;30;47m8[0;32;43m8[0;1;30;46m8[0;1;30;43m8[0;5;36;40mt[0;5;33;40mX[0;5;36;40mS[0;5;33;40mt[0;1;30;43m8[0;1;30;46m8[0;1;30;47m8[0;33;47m8[0;1;37;47m [0;5;37;47m8%:;[0;5;33;40m.[0;32;40mS.S[0;5;30;40mX[0;31;40m::[0;1;30;47m8[0;1;37;47m.[0;5;35;40m.[0;32;40m.t[0;1;30;47m@[0;5;37;47m:. . .. .;[0;1;37;47m:[0;5;36;40m:[0;1;30;47m8[0;1;37;47m [0;5;37;47m8S. %[0;5;33;40mt[0;32;40m .;[0;1;30;40mX[0;31;40m:t[0;1;30;47m;[0;1;37;47m@[0;5;35;40m:[0;31;40m [0;32;40m:[0;5;37;40m@[0;5;37;47m: ..::%8[0;1;30;47m:[0;5;36;40m%[0;1;37;47m [0;5;37;40m%[0;34;40m%[0m
[0;34;40m:[0;5;30;40m8[0;1;37;47mt[0;5;37;47m88[0;1;34;47m@[0;5;36;40m [0;1;30;47m8[0;5;33;40m.[0;5;37;42m8[0;5;33;40m [0;1;30;47m8[0;1;30;43m8[0;5;36;40m%[0;1;32;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;32;47m8[0;5;37;40m%[0;37;43m8[0;1;30;46m8[0;1;30;43m8[0;5;36;40m:[0;1;32;43m8[0;5;36;40m [0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;1;30;47mS[0;5;37;47m8%.:  8[0;1;30;42m@[0;31;40m.[0;34;40m.[0;1;30;40m@[0;5;35;40m [0;5;30;40m8[0;34;40m.[0;5;30;40mX[0;5;35;40m.[0;1;30;40mX[0;34;40m..[0;5;30;40m8[0;5;37;47mS . . . . 8[0;1;30;47m8[0;5;37;47m@;:.  8[0;32;40m@[0;34;40m.[0;31;40m.[0;1;30;40mX[0;5;37;40mS[0;1;30;40m@[0;34;40m:[0;1;30;40m8[0;5;34;40mS[0;31;40m;.[0;32;40m.[0;5;30;40m@[0;5;37;47mS  . ... [0;1;37;47m;[0;1;30;47m8[0;5;35;40m [0;34;40m%[0m
[0;32;40m:[0;1;30;40m8[0;1;37;47mt[0;5;37;47m8[0;36;47mS[0;5;36;40m:[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;32;47m8[0;5;33;40m:[0;33;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;36;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;5;37;42m8[0;1;30;43m8[0;33;47m8[0;1;30;46m8[0;37;43m8[0;5;36;40m.[0;1;30;47m8[0;1;32;42m8[0;5;33;40mX[0;1;30;47m8[0;5;37;47mX: . . [0;1;37;47mS[0;32;40mt[0;34;40m:[0;31;40m:[0;34;40m:[0;31;40m;[0;34;40m.[0;31;40m.[0;34;40m. .[0;31;40m.[0;32;40m [0;5;30;40m@[0;5;37;47mS . . . .:[0;1;37;47m [0;5;37;47m8.. . .[0;1;37;47mS[0;32;40m%[0;34;40m;[0;31;40m.[0;34;40m.[0;31;40m [0;34;40m.[0;31;40m.  [0;32;40m   [0;5;32;40mX[0;5;37;47m% . .    [0;1;37;47m:[0;1;30;47m8[0;5;36;40m [0;34;40m%[0m
[0;32;40m:[0;5;30;40m8[0;1;37;47m; [0;5;36;40m;[0;5;37;40m8[0;5;33;40m:[0;5;37;42m8[0;5;37;40m.[0;1;32;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;5;33;40m:[0;1;32;47m8[0;1;30;43m8[0;33;47m8[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;5;36;40m;[0;1;30;47m8[0;1;37;47m [0;5;37;47m8S  .X[0;5;32;40mS[0;31;40m.[0;34;40m....[0;32;40m [0;34;40m.[0;31;40m.[0;32;40m [0;34;40m.[0;32;40m;[0;1;30;47mX[0;5;37;47m. .  . .;[0;1;37;47m;[0;1;30;47mX[0;5;37;47m:  . . %[0;5;36;40mt[0;31;40m.[0;34;40m  [0;31;40m  [0;34;40m [0;31;40m    [0;1;30;40mX[0;1;30;47m;[0;5;37;47m.   .;8[0;1;37;47mt[0;1;30;47mS8[0;1;37;47mS[0;5;37;40m%[0;34;40mt[0m
[0;34;40m:[0;1;30;40m8[0;1;30;47m%[0;5;36;40m.[0;5;37;40m@[0;1;30;43m8[0;36;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;5;33;40m.[0;33;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;5;37;42m8[0;5;37;40m%[0;33;47m8[0;5;33;42m@[0;1;30;47m8[0;5;33;42m@[0;1;30;47m8[0;5;33;42m@[0;5;33;40m.[0;37;43m8[0;5;33;40m;[0;1;30;43m8[0;1;30;47m8[0;1;37;47m t[0;5;37;47mX8[0;5;35;40m [0;1;30;40m8[0;31;40m;[0;34;40m:[0;32;40m.[0;31;40m.[0;32;40m:[0;34;40mt[0;5;30;40m8[0;5;37;40mS[0;5;37;47m8. .;S8[0;1;37;47m% [0;1;30;47m8[0;5;33;40mt %[0;1;30;47m8[0;1;37;47m .%[0;5;37;47m88@%@[0;1;30;47m8[0;5;30;40m@[0;1;30;40mS[0;34;40m:[0;31;40m;[0;34;40m:[0;31;40m:[0;34;40m:[0;1;30;40m8[0;5;33;40m [0;1;37;47m:;;[0;1;30;47m.X8[0;5;33;40m..:;[0;1;30;47mS[0;1;37;47m8[0;5;37;47m@[0;5;36;40m [0;34;40mS[0m
[0;34;40m:[0;1;30;40m@[0;5;36;40m%[0;5;33;40m [0;33;47m8[0;5;33;42mX[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;36;47m8[0;5;33;42mS[0;1;30;47m8[0;5;33;40m.[0;33;47m8[0;5;36;42mS[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;5;33;40m [0;33;47m8[0;5;33;42mS[0;1;30;47m8[0;5;33;40m [0;5;33;42mt[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;1;30;46m8[0;33;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;33;42m@[0;1;30;46m8[0;1;30;43m8[0;36;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;40m%:[0;5;37;40mS[0;1;30;47m:[0;1;37;47m.[0;1;30;47m@[0;5;37;40m@X8[0;1;30;47mX.[0;1;37;47m@[0;5;37;47m8[0;1;37;47m@t[0;1;30;47m:[0;5;37;40m8[0;5;33;40m.;%t[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;5;36;40m:[0;5;33;40mS[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;5;36;40m:[0;1;30;43m8[0;5;36;40m%[0;5;33;40m%. [0;5;37;40m8[0;1;30;47m8[0;5;33;40m S[0;5;32;40mS[0;5;33;40mS[0;5;32;40m@[0;5;33;40m%tt%t:[0;1;30;43m88[0;1;30;47m8[0;1;30;43m8[0;5;36;40m.[0;5;37;40m;[0;1;37;47m [0;5;37;47mt[0;1;37;47m8[0;5;37;47m@[0;5;37;40mS[0;34;40m%[0m
[0;34;40m:[0;32;40mt[0;5;33;40m;.[0;33;47m8[0;5;33;40m [0;37;43m8[0;5;37;42m8[0;5;33;40m [0;33;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;33;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;33;47m8[0;5;33;42mX[0;1;30;47m8[0;5;33;42m@[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;46m8[0;1;30;43m8[0;5;36;40m:[0;1;30;43m8[0;5;36;40m%[0;1;30;43m8[0;5;33;40m.;::.::;;;:.::[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;5;36;40m.[0;1;32;43m8[0;5;36;40m :[0;5;33;40m.[0;1;30;43m8[0;36;47m8[0;5;33;42m%[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;1;30;43m8[0;5;37;40m;[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;5;36;40m [0;5;33;40m:::[0;37;43m8[0;5;33;40m.[0;37;43m8[0;1;30;43m8[0;36;47m8[0;37;43m8[0;5;37;42m8[0;5;33;40m.[0;1;30;47m8[0;5;37;47m8%;X@@[0;5;36;40m [0;34;40mX[0m
[0;34;40m:[0;1;30;40m@[0;5;33;40m%[0;37;43m8[0;5;36;42mS[0;33;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42m%[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;5;36;40m.[0;37;43m8[0;5;36;42m%[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;5;36;42m%[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;5;36;42m@[0;1;30;47m8[0;1;30;43m8[0;5;37;42m8[0;5;37;40m;[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;32;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42m@[0;1;30;47m8[0;1;30;43m8[0;5;36;40m;[0;1;30;43m8[0;5;36;40m;[0;1;30;43m8[0;5;36;40m;[0;1;30;43m8[0;5;36;40mt[0;1;30;43m8[0;5;36;40mt[0;1;30;43m8[0;5;33;40m.[0;1;30;43m8[0;5;36;40m:[0;5;33;40m;[0;5;36;40m%[0;1;32;43m8[0;1;30;47m8[0;5;36;40m [0;1;32;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;33;47m8[0;5;37;40m;[0;37;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;5;33;40m.[0;1;32;47m8[0;37;43m8[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;37;43m88[0;5;36;42mS[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42m%[0;1;30;47m8[0;5;33;40m%[0;5;36;40m [0;1;37;47m [0;5;37;47m%;;S@@X[0;5;36;40m [0;34;40mX[0m
[0;34;40m:[0;32;40mX[0;5;33;40m:[0;33;47m8[0;5;33;40m.[0;1;32;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;5;37;40m;[0;1;32;43m8[0;1;30;47m8[0;5;33;42m%[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;1;30;43m8[0;1;32;47m8[0;5;33;40m.[0;33;47m8[0;1;30;43m8[0;1;32;47m8[0;5;33;40m:[0;33;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;5;37;42m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42m@[0;1;30;47m8[0;5;33;42m%[0;1;30;47m8[0;5;33;42m%[0;1;30;47m8[0;37;43m8[0;5;36;42mS[0;1;30;47m@[0;1;30;43m8[0;1;32;47m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;37;43m8[0;5;36;42m@[0;5;33;40m;[0;5;36;40m;[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;5;33;42m%[0;1;30;47m8[0;5;33;42m8[0;5;37;40m;[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;37;40mt[0;5;33;42m%[0;1;30;47m8[0;1;30;43m8[0;1;32;46m8[0;1;30;47m8[0;37;43m8[0;5;37;40m%[0;33;47m8[0;5;36;40m.[0;1;30;47m8[0;5;33;40m;[0;1;30;47m;[0;5;37;47m%;;[0;1;37;47m8[0;5;37;47m%@@@S[0;5;36;40m [0;34;40m@[0m
[0;34;40m:[0;1;30;40m8[0;5;33;40m%[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;36;47m8[0;5;33;42mS[0;1;30;47m8[0;33;47m8[0;5;33;40m:[0;33;47m8[0;5;33;42mX[0;1;30;47m8[0;5;33;42m@[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;36;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;1;32;47m8[0;5;33;40m.[0;1;32;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;37;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;37;43m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;5;33;40m;.[0;1;30;43m8[0;5;36;40m%[0;1;30;43m8[0;33;47m8[0;1;30;43m8[0;5;37;42m8[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;33;47m8[0;5;37;40m;[0;37;43m8[0;5;36;40m [0;1;30;43m8[0;32;46m8[0;1;30;43m88[0;5;36;40m [0;1;32;43m8[0;1;30;47m8[0;5;32;42m8[0;1;30;47m8[0;5;33;40m;[0;1;30;43m8[0;5;37;40m;[0;1;30;43m8[0;5;33;40mtS[0;1;32;42m8[0;5;36;40m;[0;1;30;47m8[0;5;37;47m8S;;[0;1;37;47m8[0;5;37;47m;S@@@@S[0;5;36;40m.[0;34;40m@[0m
[0;34;40m:[0;32;40m@[0;5;37;40m%[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;5;33;40m [0;33;47m8[0;5;37;40m:[0;5;33;42m%[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42m@[0;1;30;47m8[0;1;32;43m8[0;5;37;40m;[0;33;47m8[0;5;36;40mt[0;1;30;43m8[0;1;30;46m8[0;1;30;43m8[0;5;33;40m%[0;5;36;42m@[0;37;43m8[0;5;37;40m.[0;5;37;42m8[0;33;47m8[0;1;30;43m8[0;37;46m8[0;1;32;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;5;33;40m:[0;5;33;42m:[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;37;43m8[0;5;37;42m8[0;5;37;40mt[0;5;33;40m.[0;5;36;40mt[0;5;32;40m8[0;5;33;40m;[0;1;30;43m8[0;5;37;40m:[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;5;37;42m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;37;47m%[0;5;37;47mtSS@@@@@@S[0;36;47m8[0;34;40mt[0m
[0;34;40m:[0;1;30;40m8[0;1;30;43m8[0;5;33;40m.[0;33;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;5;37;42m8[0;1;30;43m8[0;1;30;47m8[0;33;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;5;37;42m8[0;5;37;40mS[0;33;47m8[0;5;33;42m@[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;32;43m8[0;5;37;40m%[0;37;43m8[0;5;36;42mS[0;1;30;47mX[0;1;30;43m8[0;33;47m8[0;5;33;42mX[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42m@[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;33;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;5;33;42mt[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;5;33;42mX[0;1;30;47m88[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;5;36;42m@[0;37;43m8[0;5;33;40m.[0;1;30;43m8[0;1;30;46m8[0;1;30;47m8[0;1;37;47m8[0;5;37;47mX@@@@@@8[0;5;36;40m.[0;34;40m@[0m
[0;34;40m:[0;32;40mX[0;5;33;40m [0;33;47m8[0;5;36;42mS[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42m%[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;1;32;47m8[0;5;33;40m [0;33;47m8[0;5;36;42mX[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;5;36;42mS[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;5;33;42m@[0;1;30;47m8[0;5;33;40m [0;5;33;42m%[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;5;36;42m@[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;40m [0;33;47m8[0;5;36;40m [0;5;37;42m8[0;33;47m8[0;5;33;42mX[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;5;36;42mX[0;1;30;47m8[0;5;37;40m@[0;1;30;43m8[0;33;47m8[0;5;36;40m.[0;5;37;42m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;5;36;40m%.[0;5;37;47m;8@@@X@@[0;1;30;47m8[0;34;40mS[0m
[0;34;40m:[0;1;30;40m8[0;5;33;40mt[0;37;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;37;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;30;43m8[0;5;37;42m8[0;5;33;40m.[0;33;47m8[0;1;30;43m8[0;1;32;47m8[0;5;33;40m:[0;33;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;5;33;40m.[0;33;47m8[0;5;33;42m8[0;1;30;47m88[0;1;32;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;1;30;43m8[0;36;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;1;30;46m8[0;33;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;33;47m8[0;1;30;43m8[0;5;33;42m%[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;30;43m8[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;36;40m%[0;1;30;47m [0;5;37;47m@@@@@@8[0;1;30;46m8[0;34;40m@[0m
[0;34;40m:[0;32;40m@[0;5;33;40m.[0;5;33;42mS[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;5;33;42m@[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;40m.[0;37;43m8[0;5;37;40m:[0;5;33;42m%[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;5;33;42mX[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;1;32;47m8[0;5;33;40m:[0;33;47m8[0;5;33;42mX[0;1;30;47m8[0;5;33;40m.[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;33;47m8[0;5;33;40m [0;5;33;42mt[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;30;43m8[0;5;37;42m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;5;33;40m.[0;33;47m8[0;5;36;40m.[0;5;37;42m8[0;37;43m8[0;5;33;42mX[0;1;30;47m8[0;1;32;43m8[0;1;30;47m88[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m88[0;1;32;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42m@[0;5;37;40mS[0;5;36;40mX[0;1;37;47m%[0;5;37;47m@@@[0;5;1;36;47mX[0;5;37;47m88[0;1;30;47m8[0;34;40mS[0m
[0;34;40m:[0;1;30;40m8[0;5;33;40m.[0;33;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42m@[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42m%[0;1;30;47m@[0;33;47m8[0;1;30;43m8[0;1;32;47m8[0;5;33;40m [0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;33;47m8[0;1;30;46m8[0;33;47m8[0;1;32;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;30;47m8[0;33;47m8[0;5;33;42m@[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;5;37;40mt[0;37;43m8[0;5;36;42m@[0;1;30;47m@[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;5;37;42m8[0;5;33;40m [0;33;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;5;37;42m8[0;1;30;43m8[0;33;47m8[0;5;33;40m:[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;32;47m8[0;5;33;40m:[0;33;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;5;36;42m%[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;5;36;40m%[0;1;30;47mt[0;5;37;47m@@8888[0;5;35;40m.[0;34;40m8[0m
[0;34;40m:[0;32;40m@[0;5;33;40m:[0;33;47m8[0;5;36;42mX[0;33;47m8[0;1;30;43m8[0;5;36;42mt[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;37;46m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;5;33;40m [0;1;30;43m88[0;5;37;40m;[0;5;33;40m.[0;1;30;43m8[0;5;37;40mt[0;5;33;40m;.[0;33;47m8[0;5;36;40m;[0;33;47m8[0;5;36;42mX[0;33;47m8[0;5;33;40m.[0;33;47m8[0;5;33;42m@[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m@[0;1;30;43m8[0;36;47m8[0;1;32;43m8[0;1;30;47m8[0;37;43m8[0;5;33;42mS[0;1;30;47m8[0;5;37;42m8[0;5;37;40m%[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42m%[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;1;32;47m8[0;5;37;40m;[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;32;43m8[0;5;37;40mt[0;5;36;40m:[0;5;37;47m88@8@@[0;1;30;47m8[0;34;40m@[0m
[0;34;40m:[0;1;30;40m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;33;47m8[0;5;37;40mt[0;1;32;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;40m;:[0;1;30;43m88[0;33;47m8[0;1;30;43m8[0;33;47m8[0;37;43m@[0;1;30;43m8[0;33;47m8[0;1;30;43m8[0;37;43m8[0;1;30;43m88[0;5;33;40mtt[0;1;30;43m8[0;5;33;40mt;.%:.[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42m@[0;1;30;47m88[0;1;30;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;32;43m8[0;1;30;47m8[0;5;37;40m.[0;37;43m8[0;5;37;40m:[0;37;43m8[0;5;37;40m:[0;5;33;42m%[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;5;37;42m8[0;5;33;40m.[0;33;47m8[0;5;33;40m.[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;5;33;40m.[0;1;30;43m8[0;5;33;40m.[0;1;30;43m8[0;5;33;40m [0;5;35;40m [0;1;30;47m%[0;5;37;47m8@@8[0;1;30;46m8[0;34;40m8[0m
[0;34;40m:[0;32;40mX[0;5;33;40m.[0;1;32;43m8[0;1;30;47m8[0;5;33;42mS[0;5;37;40mt[0;33;47m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;5;33;40mX[0;37;43m888[0;1;31;43m8[0;1;30;47m8[0;5;33;41mS[0;33;47m8[0;1;31;43m8[0;1;30;47m8[0;1;31;43m8[0;33;47m8[0;37;43m8[0;1;31;43m8[0;33;47m8[0;5;33;41m%[0;1;30;47mS[0;1;30;43m8[0;33;47m8[0;1;30;43m8[0;33;47m8[0;1;30;43m888[0;5;33;40mS8SS::[0;5;37;40mS[0;1;30;43m8[0;5;37;40m:[0;1;32;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;5;33;42mS[0;1;30;47m@8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;33;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;5;33;40m:t8X[0;1;30;43m8[0;33;47m8[0;37;43m@[0;1;31;43m8[0;33;47m@[0;5;35;40m [0;1;30;47m@[0;5;37;47m8888[0;35;47m8[0;34;40mS[0m
[0;34;40m:[0;1;30;40m8[0;5;33;40m:[0;33;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mS[0;5;37;40mt[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;5;37;42m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;5;33;40mt[0;1;30;43m8[0;33;47m8[0;5;31;41mt[0;1;30;47m8[0;1;31;43m8[0;5;37;40m;[0;1;30;43m8[0;1;30;45m8[0;1;30;43m8[0;5;33;41mX[0;5;37;40mX[0;5;31;41m8[0;1;30;47m8[0;5;33;40m.[0;1;31;47m8[0;37;43m8[0;1;31;43m8[0;33;47m8[0;5;33;41m;[0;33;47m8[0;5;33;41mS[0;33;47m8[0;37;43m8[0;1;30;43m8[0;37;43m8[0;1;30;43m88[0;5;33;40m.[0;1;30;43m888[0;5;33;40m.[0;1;30;43m8[0;5;33;40mt[0;1;30;43m8[0;5;33;40mttttt.t.[0;1;30;43m8[0;5;37;40m8[0;1;30;43m8[0;5;33;40mS%%.[0;1;30;43m8[0;5;33;40mt%[0;1;30;43m888[0;37;43m8[0;1;30;43m8[0;33;47m8[0;1;31;43m8[0;1;30;47m8[0;5;33;41mt[0;1;30;47m8[0;5;33;41mX[0;5;37;40mS[0;1;30;47m [0;5;37;47m8888[0;1;30;47m8[0;34;40mS[0m
[0;34;40m:[0;32;40m@[0;5;33;40m:[0;33;47m8[0;5;36;42mS[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;5;36;40m [0;1;30;43m8[0;33;47m8[0;5;33;41mS[0;1;30;47m@[0;1;31;43m8[0;1;30;47m8[0;5;33;41m;[0;33;47m8[0;5;33;41mt[0;1;30;47m8[0;37;43m8[0;1;30;43m8[0;1;30;47m8[0;5;33;41mS[0;1;30;43m88[0;1;30;45m8[0;1;30;43m8[0;1;30;45m8[0;1;30;43m8[0;5;35;40m.[0;1;30;43m8[0;1;31;45m8[0;1;30;43m8[0;5;37;41m8[0;5;33;40m [0;5;37;41m8[0;33;47m8[0;5;33;41m;[0;33;47mX8[0;5;33;41mt[0;33;47m@[0;37;43m8[0;1;31;43m8[0;1;30;47m8[0;37;43mX@@@@8@88[0;1;30;43m8[0;37;43m8[0;1;30;43m8[0;33;47m8[0;37;43m@@8[0;1;30;43m8[0;33;47m8[0;37;43m8[0;33;47m8[0;5;33;41mS[0;1;30;47m8[0;5;33;41m%[0;1;30;47m8[0;1;31;43m8[0;1;30;47m8[0;5;33;40m:[0;1;30;47m8[0;1;37;47m.8[0;5;37;47mS8888[0;5;36;40m.[0;34;40m8[0m
[0;34;40m:[0;1;30;40m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;5;36;42mX[0;33;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42m@[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;40m:[0;1;30;47m8[0;5;33;42m%[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;40m%t[0;33;47m8[0;37;43m8[0;5;33;41mS[0;1;30;47m8[0;1;31;43m8[0;1;30;47m@[0;37;43m@[0;33;47m8[0;5;33;41m%[0;1;30;47m8[0;5;33;41m.[0;33;47m8[0;37;43m8[0;5;35;41m;[0;33;47m8[0;5;33;41m;[0;33;47m8[0;5;33;41m;[0;1;30;47m@[0;5;33;41m:[0;1;30;47mX[0;1;30;43m8[0;1;30;45m8[0;1;30;43m8[0;5;31;41m8[0;5;33;40m;Xt[0;1;31;41m@[0;5;35;40m [0;5;33;40m [0;1;31;43m8[0;1;30;47m8[0;1;30;43m8[0;5;33;41m%[0;1;30;47m8[0;5;33;41mS[0;1;30;47m8[0;5;33;41mS[0;1;30;47m8[0;5;33;41mS[0;1;30;47m8[0;5;33;41mS[0;1;30;47m8[0;5;33;41m%[0;1;30;47m8[0;5;33;41m%[0;1;30;47m8[0;5;33;41mX[0;5;33;40m [0;5;33;41m;[0;1;30;47m8[0;5;31;41m@[0;5;33;40m [0;1;30;43m8[0;1;30;45m8[0;1;30;43m8[0;5;35;40mt[0;33;41m8[0;5;35;40m;[0;33;41mX[0;1;30;47mt[0;5;37;47m%%@88@8@[0;1;30;47m8[0;34;40m@[0m
[0;34;40m:[0;32;40m@[0;5;33;40m.[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;5;37;42m8[0;5;37;40mt[0;33;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;33;47m8[0;5;33;42m@[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;5;37;42m8[0;1;30;47m8[0;5;33;40mt[0;1;30;43m8[0;36;47m8[0;5;33;42mX[0;1;30;47m8[0;5;33;40m8[0;5;31;40mS[0;5;33;40m::[0;1;30;43m8[0;5;37;40mt[0;1;31;43m8[0;5;35;40m;[0;1;30;43m8[0;5;35;40m [0;1;30;43m8[0;5;37;40mt[0;1;31;43m8[0;5;37;40mX[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;37;43m8[0;33;47m8[0;5;33;41m%[0;1;30;47m;[0;1;31;43m8[0;33;47m8[0;5;33;41m.[0;33;47m@8[0;5;33;41mS[0;1;30;47m8[0;1;31;43m8[0;1;30;47m8[0;1;31;43m8[0;1;30;47m8[0;5;33;41m8[0;5;35;40mt[0;5;33;41m@[0;5;37;40m%[0;1;30;43m8[0;5;35;40mt[0;1;31;43m8[0;5;33;40m.[0;1;30;43m8[0;5;35;40mt[0;1;31;43m8[0;5;35;40m.[0;31;43m8[0;5;35;40m.[0;1;31;43m8[0;5;35;40m [0;1;30;43m8[0;5;33;40m:[0;5;33;41mS[0;5;37;40m8[0;1;30;43m8[0;5;37;40m:[0;5;33;41m;[0;1;30;47m8[0;1;31;43m8[0;1;30;43m8[0;5;37;41m8[0;37;43m8[0;1;31;43m8[0;5;37;40mX[0;5;35;40m:[0;5;37;47mS@88@888[0;5;37;40m.[0;34;40m8[0m
[0;34;40m:[0;1;30;40m8[0;5;33;40m.[0;33;47m8[0;1;30;43m8[0;36;47m8[0;5;33;42mS[0;1;30;47m8[0;5;33;40m.[0;37;43m8[0;5;36;42mX[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;1;32;43m8[0;1;30;47m8[0;36;42m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;1;30;43m8[0;33;47m8[0;1;30;43m8[0;1;30;47mt[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m%[0;1;30;43m8[0;1;30;47mS[0;1;30;43m8[0;5;37;40m8[0;1;30;43m8[0;5;33;40m%:%St;[0;1;30;43m8[0;5;33;40m:[0;1;30;43m8[0;1;30;47m8[0;1;31;43m8[0;1;30;47m8[0;1;30;43m8[0;5;37;41m8[0;1;30;47m8[0;1;31;43m8[0;1;30;47m8[0;5;33;41mS[0;1;30;47m8[0;1;31;43m8[0;1;30;47m8[0;5;33;41m%[0;33;47m8[0;5;33;41mt[0;1;30;47m8[0;5;33;41mt[0;33;47m8[0;5;33;41mt[0;1;30;47m8[0;5;33;41mt[0;33;47m@[0;5;37;41m8[0;33;47m8[0;5;33;41m%[0;33;47m8[0;5;37;41m8[0;33;47m8[0;1;31;43m8[0;33;47m8[0;5;33;41mt[0;1;30;47m%[0;1;31;43m8[0;1;30;47m8[0;5;33;41mt[0;33;47m8[0;1;30;43m8[0;35;47m8[0;1;30;43m8[0;1;30;47m%[0;5;37;47mt@888@@@[0;1;30;47m8[0;34;40m@[0m
[0;34;40m:[0;1;30;40m@[0;5;33;40m:[0;5;36;40m [0;1;32;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;5;37;42m8[0;1;30;43m8[0;36;47m@[0;37;43m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;46m8[0;1;30;43m8[0;5;36;40m:[0;33;47m8[0;5;33;40m:[0;33;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;1;30;43m8[0;33;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m%[0;1;30;43m8[0;5;33;40m:.[0;1;30;43m8[0;5;33;40m XXtStS:[0;1;30;43m8[0;5;33;40m [0;1;30;43m8[0;5;33;40m [0;1;30;43m8[0;5;37;40mS[0;5;33;40mt:[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;5;33;40mt[0;1;30;43m8[0;1;30;47m8[0;1;31;43m8[0;5;33;40m [0;1;30;43m8[0;1;30;47m8[0;5;33;41m8[0;1;30;47m8[0;1;30;43m8[0;5;37;40m:[0;37;43m8[0;5;35;40m .[0;35;47m8[0;1;30;47m8[0;1;37;47m%[0;5;37;47mtX8@8@8@8[0;36;47m8[0;34;40mS[0m
[0;34;40m:[0;1;30;40m8[0;1;37;47mt[0;5;37;40mS[0;5;33;40m.[0;33;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;32;43m8[0;1;30;47m88[0;5;33;42mS[0;1;30;47m8[0;5;33;42m@[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;30;43m8[0;1;30;46m8[0;1;30;43m8[0;36;42m8[0;1;30;43m8[0;37;46m8[0;1;32;43m8[0;33;47m8[0;5;36;42m@[0;1;30;47m8[0;1;32;43m8[0;5;37;40mt[0;5;33;42m%[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m88[0;33;47m8[0;37;43m88[0;5;37;40m%[0;37;43m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;1;30;43m8[0;33;47m8[0;37;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47mX[0;1;30;43m8[0;1;30;47m@[0;1;30;43m8[0;5;33;40m.[0;37;43m8[0;5;33;40m;[0;1;30;43m8[0;5;33;40m:[0;1;30;43m8[0;5;33;40m:X:%SS.[0;5;31;40mX[0;5;35;40m [0;1;37;47m :@[0;5;37;47m88t;S@8@88@@8[0;1;30;45m8[0;34;40m@[0m
[0;32;40m:[0;1;30;40m8[0;1;30;47mX[0;1;30;46m8[0;5;36;40m;%[0;5;33;42m8[0;5;37;40mSS[0;37;43m8[0;1;30;46m8[0;37;43m8[0;5;33;42mS[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;37;40m;[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;5;37;42m8[0;33;47m8[0;1;32;43m8[0;1;30;47m8[0;37;43m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;37;43m8[0;5;37;40m:[0;33;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;5;33;40m [0;37;43m8[0;5;36;42m%[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;5;36;42m%[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42m@[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;1;30;43m8[0;33;47m8[0;37;43m8[0;5;33;40m.[0;33;47m8[0;1;30;43m8[0;1;30;47m8[0;37;43m8[0;5;33;40m.[0;33;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;5;37;40m%@[0;1;37;47m;[0;5;37;47m%::;t;tX@8@888@@X[0;36;47m8[0;34;40mS[0m
[0;32;40m:[0;34;40mX[0;5;36;44mS:[0;37;46m@[0;1;30;46m8[0;5;36;40m;:;[0;1;30;43m88[0;1;30;46m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m@[0;37;43m8[0;5;33;40m.[0;33;47m8[0;5;33;42mS[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;1;32;47m8[0;5;33;40m [0;33;47m8[0;5;33;42m@[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;5;36;42mX[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;33;47m8[0;5;36;42mX[0;1;30;47m8[0;1;30;43m8[0;37;46m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;1;30;43m8[0;37;46m8[0;1;30;43m8[0;1;30;47m8.[0;1;37;47m8[0;5;37;47mt888@@X@8@8@@8@8@@8[0;1;30;47m8[0;34;40mX[0m
[0;32;40m:[0;1;30;40m@[0;1;34;46m8[0;5;37;44m8[0;5;36;44m [0;5;1;36;44m@[0;5;36;44m [0;1;30;46m888[0;1;30;47m8[0;1;30;43m8[0;5;32;40m%[0;1;30;42m8[0;5;33;40m; [0;1;30;43m8[0;36;47m8[0;1;32;43m8[0;1;30;47m88[0;1;30;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;1;32;47m8[0;5;33;40m [0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;1;30;43m8[0;37;43m8[0;1;32;46m8[0;33;47m8[0;1;30;43m8[0;33;47m8[0;1;30;43m8[0;5;37;42m8[0;33;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;32;47m8[0;5;33;40m.[0;33;47m8[0;1;32;43m8[0;1;30;47m8[0;37;43m8[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;5;36;40mS[0;5;33;40m:[0;1;30;47m8[0;1;37;47m8[0;5;37;47m;;S@888888@888888@8@@8[0;5;35;40m.[0;34;40m8[0m
[0;32;40m:[0;34;40m@[0;5;36;44m%[0;5;37;44m8[0;5;1;36;44m8[0;5;37;44m8[0;5;1;36;44m8[0;5;37;44m8[0;5;36;44m [0;37;46m@[0;1;30;46m@8[0;5;36;40m [0;1;30;47m8[0;5;36;40m:[0;1;30;43m8[0;1;30;46m8[0;1;30;43m8[0;5;36;40m;[0;1;30;43m8[0;32;46m8[0;1;30;43m8[0;5;36;40m;[0;5;33;40m [0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;5;37;42m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;32;47m8[0;1;30;43m8[0;1;32;47m8[0;5;33;40m.[0;33;47m8[0;1;30;43m8[0;36;47m8[0;1;32;43m8[0;1;30;47m@[0;1;30;43m8[0;1;30;47m8[0;5;33;42mS[0;1;30;47m8[0;1;30;43m8[0;37;46m8[0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;33;47m8[0;5;36;40m.[0;5;33;42m;[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;1;32;47m8[0;5;33;40m.[0;33;47m8[0;5;33;42m@[0;5;37;40m%[0;5;36;40m:[0;5;37;40m;t[0;1;30;47m88[0;1;37;47mt[0;5;37;47mX;;[0;1;37;47m8[0;5;37;47mS@@@888@8@8@8@8@8@@@@[0;36;47m8[0;34;40m@[0m
[0;32;40m:[0;1;30;40m8[0;5;36;44mS[0;5;37;44m8[0;5;1;36;44m@[0;5;37;44m8[0;5;1;36;44mS@[0;5;37;44m8[0;5;1;36;44mS[0;5;36;44m [0;5;1;36;44m8[0;5;36;44m [0;1;36;46m;[0;1;34;46m8[0;1;30;46m8[0;5;36;40m [0;1;30;46m8[0;1;30;47m8[0;5;36;40m.[0;33;47m8[0;37;46m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42m8[0;5;33;40m [0;1;32;43m8[0;5;33;40m;t:[0;5;36;40m:[0;5;33;40mt[0;1;30;46m8[0;1;30;43m8[0;1;30;46m8[0;5;33;40mt[0;1;30;46m8[0;1;30;43m8[0;5;33;40m;[0;1;30;46m8[0;1;32;43m8[0;5;33;40m [0;5;37;40mt[0;1;30;43m8[0;37;46m8[0;1;30;43m8[0;5;37;40mS[0;5;36;40m.[0;1;32;43m8[0;1;30;47m8[0;1;32;43m8[0;5;36;40m.[0;5;36;42mX[0;5;33;40m [0;33;47m8[0;5;33;40m .[0;1;30;47m8[0;32;43m8[0;1;30;46m8[0;1;30;43m8[0;5;33;40m:[0;1;30;43m8[0;1;30;46m8[0;5;36;40mX%[0;1;30;47m [0;1;37;47m8[0;5;37;47mX%t;:;%XS@@@@@8888@8@88@8@@@@8[0;35;47m8[0;34;40mS[0m
[0;32;40m:[0;1;30;40m8[0;5;36;44m%[0;5;1;36;44m8[0;5;37;44m8[0;5;1;36;44mS[0;5;37;44m8[0;5;1;36;44mS[0;5;37;44m8[0;5;1;36;44m@[0;5;37;44m8[0;5;1;36;44m8[0;5;37;44m8[0;5;1;36;44mX[0;5;37;44m8[0;5;1;36;44m8[0;5;37;44m@[0;5;36;44m:[0;1;30;46m@X8[0;5;36;40mt [0;5;37;40m@X[0;1;30;47m8[0;5;37;40m:[0;1;32;47m8[0;37;43m8[0;5;33;42mS[0;1;30;47m8[0;1;32;43m8[0;33;47m8[0;37;43m8[0;5;33;42mS[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;5;33;42mX[0;1;30;47m8[0;5;33;40m:[0;1;30;43m8[0;1;32;46m8[0;1;30;43m88[0;1;30;46m8[0;1;30;43m8[0;1;30;46m8[0;5;33;40mtS[0;5;36;40mS[0;1;30;43m8[0;5;33;40m.[0;1;30;43m8[0;1;30;46m8[0;1;30;43m8[0;1;32;43m8[0;5;36;40m:[0;1;30;47m8[0;1;32;43m8[0;1;30;47m8[0;36;47m8[0;5;36;40m:[0;1;30;46m8[0;5;36;44m;[0;1;34;46m8[0;5;36;40m;[0;1;37;47mS[0;5;37;47mt;t%[0;1;37;47m8[0;5;37;47m%@@@@@@@@@8888@8@88@8@@@8[0;37;46m8[0;34;40mS[0m
[0;32;40m:[0;1;30;40m@[0;5;36;44mS[0;5;37;44m8[0;5;1;36;44mX[0;5;37;44m8[0;5;1;36;44mS[0;5;37;44m8[0;5;1;36;44mS[0;5;37;44m8[0;5;1;36;44mX[0;5;37;44m8[0;5;1;36;44mX[0;5;37;44m8[0;5;1;36;44mX[0;5;37;44m8[0;5;1;36;44m@8[0;5;37;44m@[0;5;1;36;44mX[0;5;36;44m  [0;1;36;46m;[0;5;36;44mt[0;1;30;46m8@8888[0;5;37;40mX[0;1;30;46m88[0;5;36;40m:[0;5;37;40m8[0;5;36;40m;[0;5;37;40m8[0;5;36;40mt[0;5;37;40m@[0;5;33;40m [0;1;30;47m8[0;5;37;40m.[0;1;30;47m88[0;5;36;40m:[0;33;47m8[0;1;32;46m8[0;33;47m8[0;5;37;40m:[0;36;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;36;47m8[0;1;30;43m8[0;36;47m8[0;5;36;40m:[0;1;30;46m8[0;5;36;40m.[0;1;30;46m888[0;5;36;44m;:[0;1;36;47m8[0;5;34;44m [0;5;36;44m [0;1;34;46m88[0;1;30;47m%[0;1;37;47mt[0;5;37;47m@S@@@@@@@@@@@@@88@8@@@@@@@8[0;37;45m8[0;34;40mX[0m
[0;32;40m:[0;1;30;40m@[0;5;36;44m%[0;5;37;44m8[0;5;1;36;44mXS[0;5;37;44m8[0;5;1;36;44mSS[0;5;1;35;44mS[0;5;1;36;44m8[0;5;37;44m8[0;5;1;36;44mSS[0;5;1;35;44mX[0;5;1;36;44m8[0;5;37;44m8[0;5;1;36;44mSS[0;5;37;44m8[0;5;1;36;44m8[0;1;34;47m8[0;5;1;36;44mX[0;5;37;44m8[0;5;1;36;44mXSS[0;5;37;44m@[0;5;1;36;44mSS[0;5;36;44m [0;5;1;36;44m8[0;5;37;44m8[0;5;1;36;44m@[0;5;36;44m [0;1;34;46m8[0;5;36;44m [0;1;36;46m;[0;5;36;44m [0;1;36;46m;[0;1;34;46m8[0;1;36;46m.[0;5;36;44mt[0;1;30;46m8[0;1;34;46m8888[0;37;46mX[0;1;34;46m888888[0;5;36;44m.[0;5;36;46m;[0;5;35;44m:[0;5;37;44m8[0;5;1;36;44m8[0;5;36;44m [0;5;1;36;44m8[0;1;34;47m8[0;5;1;36;44m8[0;5;34;44m [0;1;36;47m8[0;5;36;44m [0;5;37;44m8[0;5;1;36;44m8[0;5;36;44m .[0;1;34;46m8[0;36;47m@[0;1;37;47mt[0;5;37;47m@@@@@@@@@@@@@@@@@@@@@[0;5;1;36;47mt[0;5;37;47m8@[0;37;46m8[0;34;40mS[0m
[0;32;40m:[0;1;30;40m@[0;5;36;44m@ [0;5;37;44m8[0;5;36;44m [0;5;1;36;44m8[0;5;37;44m8[0;5;1;36;44mX[0;5;37;44m8[0;5;1;36;44mS[0;5;37;44m@[0;5;1;36;44mS[0;5;37;44m8[0;5;1;36;44m@[0;5;36;44m [0;5;37;44m8[0;5;36;44m [0;5;37;44m8[0;5;1;36;44m@[0;5;37;44m8[0;5;36;44m [0;5;37;44m8[0;5;1;36;44m@[0;5;35;44m [0;5;37;44m8[0;5;36;44m [0;5;1;36;44m8[0;5;37;44m@8[0;5;1;36;44m@[0;5;37;44m8[0;5;36;44m [0;5;37;44m8[0;5;1;36;44m8[0;5;37;44m8[0;5;1;36;44m8[0;5;37;44m8[0;5;36;44m [0;1;34;47m8[0;5;1;36;44mX[0;5;37;44m8[0;5;36;44m [0;5;1;34;46m8[0;5;37;44m8[0;5;36;44m [0;1;34;47m8[0;5;36;44m [0;5;1;36;44m8[0;5;37;44m8[0;5;36;44m [0;1;36;47m8[0;5;34;44m [0;5;37;44m8[0;5;1;36;44m8[0;5;37;44m8[0;5;35;44m:[0;36;47m8[0;5;36;44m [0;5;37;44m8[0;5;1;36;44m8[0;5;37;44m8[0;5;36;44m [0;5;37;44m8[0;5;36;44m  [0;5;37;46m8[0;5;34;44m [0;5;37;44m8[0;5;36;44m [0;1;36;47m8[0;5;34;44m [0;5;36;44m %[0;36;47m8[0;1;37;47m.[0;5;37;47m8888888888888888888888[0;1;30;45m8[0;34;40m@[0m

 )" << endl;
        std::cout << "Best score " << mode << ": " << high_score << endl;
        std::cout << endl;
        std::cout << "Press enter to return: ";
        std::cin.ignore(1000, '\n');
    }
    return false;
   
}

bool hello(bool& is_new_game)
{
    int choice = -1;
    system("cls");
    std::cout <<  R"(
        
 _      ___             _    _                      
/ |    |  _> ___ ._ _ _| |_ <_>._ _  _ _  ___       
| | _  | <__/ . \| ' | | |  | || ' || | |/ ._>      
|_|<_> `___/\___/|_|_| |_|  |_||_|_|`___|\___.      
                                                    
 ___      _ _                                       
<_  >    | \ | ___  _ _ _   ___  ___ ._ _ _  ___    
 / /  _  |   |/ ._>| | | | / . |<_> || ' ' |/ ._>   
<___><_> |_\_|\___.|__/_/  \_. |<___||_|_|_|\___.   
                           <___'                    
 ____     _ _  _       _                            
<__ /    | | |<_> ___ | |_   ___ ___  ___  _ _  ___ 
 <_ \ _  |   || |/ . || . | <_-</ | '/ . \| '_>/ ._>
<___/<_> |_|_||_|\_. ||_|_| /__/\_|_.\___/|_|  \___.
                 <___'                              
  __      ___       _                               
 /. |    | . \ _ _ | | ___  ___                     
/_  .|_  |   /| | || |/ ._><_-<                     
  |_|<_> |_\_\`___||_|\___./__/                     
                                                    
  
    )" << endl;

    std::cout << "Please choose a number: ";
    
    while (!(cin >> choice))
    {
        cin.clear();
        cin.ignore(1000, '\n');
        std::cout << "Bad input. Please choose a number: ";
    }

    if (choice == 1)
    {
        is_new_game = false;
        return true;
    }
    else if (choice == 2)
    {
        is_new_game = true;
        return true;
    }
    else if (choice == 3)
    {
        showHighScore();
        cout << "Press enter again to quit";
    }
    else if (choice == 4)
    {
        show_rule();
    }
    return false;
}

void show_rule()
{
    system("cls");

    std::cout << "Rules:\n";
    std:: cout << endl;
    std::cout << "When moving with arrow, remember to put o or f or u at the end to execute commands." << endl;
    std::cout << "To open: type in location with no spaces, row first(capital), column(2 digits) after and o  (eg. A05o)" << endl;
    std::cout << "To flag: type in location with no spaces, row first(capital), column(2 digits) after and f  (eg. C16f)" << endl;
    std::cout << "To unflag: type in location with no spaces, row first(capital), column(2 digits) after and u  (eg. C06u)" << endl;
    std::cout << endl;
    std::cout << "Press q to quit and save the process at any time." << endl;
    std:: cout <<  R"(
        [0;5;37;47m                                                                                                    [0m
[0;5;37;47m  .  . .  .  . .  .  . .  .  . .  .  . .  .  . .  .:.  . .  .  . .  .  . .  .  . .  .  . .  .  . .  [0m
[0;5;37;47m   .       .       .       .       .   . . . .   :[0;1;30;47mt[0;5;33;40m.[0;1;30;47m@[0;5;37;47mt     .       .       .       .       .       .[0m
[0;5;37;47m     .  .    .  .    .  .    .  .  . . .   . .  .[0;1;37;47m;[0;5;33;40mt[0;1;37;47m [0;5;33;40m:[0;1;30;47m%[0;5;37;47m   .   . .     . .     . .     . .     . .    [0m
[0;5;37;47m .       .       .       .       . . .   .    . .[0;5;37;40mS[0;1;30;47m8[0;1;37;47m [0;1;31;43m8[0;1;30;47m [0;5;37;47m           .       .       .       .       .  [0m
[0;5;37;47m   .  .    .  .    .  .    .  .        .;@[0;1;37;47mS:[0;1;30;47m;%S88[0;5;33;40m.[0;1;33;47mS[0;37;45m8[0;5;35;40m;[0;1;30;47mX:[0;1;37;47m t@[0;5;37;47m@;.  .   . .    . .  .   . .    . .  .   .[0m
[0;5;37;47m  .    .  .    .  .    .  .    .  . ..[0;1;37;47m8[0;1;30;47m8[0;5;35;40m.[0;5;33;40m:[0;5;37;40mt[0;1;30;47m8[0;1;37;47m         [0;1;33;47m%[0;1;35;47mS[0;33;47m@[0;1;30;47m8[0;5;33;40m..[0;5;35;40m:[0;5;37;40m@[0;1;37;47mt[0;5;37;47mt  .     .         .     .         .  [0m
[0;5;37;47m    .       .       .       .    ..[0;1;37;47m@[0;1;30;47mS[0;5;37;40mX[0;1;30;47m88[0;1;37;47m    [0;1;33;47mS[0;1;37;47m [0;1;33;47mS[0;1;37;47m [0;5;37;47m8[0;5;1;33;41m8[0;5;37;47m8[0;1;33;47mS[0;1;35;47mS[0;1;33;47mS[0;1;37;47m      [0;1;33;47mX[0;1;30;47m8[0;5;37;40m%[0;1;30;47m8[0;1;37;47m [0;5;37;47mS  .   .  . . .    .   .  . . .    [0m
[0;5;37;47m  .   . .    .  .    .  .   ..:;S[0;1;30;47m:[0;5;33;40m [0;1;30;47m@[0;1;37;47m    [0;1;33;47mS[0;1;37;47m [0;5;1;37;43m8[0;5;37;45m8[0;5;37;43m8[0;5;1;37;45m8[0;5;37;43m8[0;5;37;45m8[0;5;1;37;43m8[0;5;1;37;45m8[0;1;33;47mX[0;5;37;45m8[0;5;1;37;43m8[0;5;37;45m8[0;5;1;37;43m8[0;5;37;45m8[0;5;1;37;43m@[0;1;35;47mS[0;5;1;37;43m8[0;5;37;45m8[0;1;33;47mS[0;1;37;47m   [0;1;33;47mS[0;5;35;40m.[0;1;30;47m8[0;1;37;47mX[0;5;37;47m.             .   .           . [0m
[0;5;37;47m    .     .    .  .   :X[0;1;37;47mX[0;1;30;47m.8[0;5;37;40mS[0;5;35;40m .[0;5;33;40mt[0;5;35;40mt[0;1;30;40m8[0;5;37;40m@[0;1;37;47m. [0;1;33;47mS[0;1;37;47m [0;5;37;43m8[0;5;1;37;45m8[0;5;37;43m8[0;5;37;45m8[0;1;33;47mS[0;5;37;47m8[0;5;1;35;41m8[0;5;37;47m8[0;1;33;47mS[0;1;37;47m [0;1;35;47mS[0;5;37;43m8[0;5;1;37;45m8[0;5;37;43m8[0;1;37;47m [0;5;37;43m8[0;5;37;45m8[0;5;37;43m8[0;5;37;45m8[0;5;1;37;43m8[0;5;37;45m8[0;5;37;43m8[0;1;35;47m%[0;1;37;47m [0;5;1;37;43m8[0;5;37;45m8[0;1;37;47m   [0;5;31;40mX[0;1;30;47m8[0;1;37;47mt@[0;5;37;47mS; .  .  .        .  .  .    [0m
[0;5;37;47m  .    .   .       . 8[0;5;35;40m;[0;5;30;40m@SXS[0;5;35;40m%[0;5;30;40m8@8[0;5;31;40mS[0;1;30;47m8[0;1;37;47m  [0;5;37;41m8[0;1;31;47mS[0;1;35;47mS[0;1;37;47m [0;5;37;43m8[0;5;1;37;45m8[0;5;37;43m8[0;5;37;45m8[0;5;37;43m8[0;1;37;47m [0;5;37;43m8[0;5;1;37;45m8[0;5;1;31;43m@[0;5;37;47m8[0;1;35;47mS[0;5;37;43m8[0;5;37;45m8[0;5;1;33;47m8[0;5;37;45m8[0;5;1;37;43m8[0;1;37;47m  [0;1;33;47mS[0;1;37;47m [0;5;37;47m8[0;5;1;33;41m8[0;5;1;35;47m8[0;1;33;47mSS[0;1;37;47m [0;5;1;37;43m8[0;5;37;45m8[0;1;33;47mX[0;5;35;40m:[0;5;33;40m@t[0;5;30;40m8[0;5;31;40mS[0;5;36;40mt[0;5;35;40m [0;1;30;47mX[0;1;37;47m.8[0;5;37;47m;.   . .  .    .   .  [0m
[0;5;37;47m     .   .   .  .    .[0;1;37;47m [0;5;30;40mX[0;5;36;40m;[0;5;35;40mt[0;5;32;40mS[0;5;30;40mX[0;5;32;40mS[0;5;30;40m8[0;5;33;40mX[0;1;30;47mS[0;1;37;47m [0;1;33;47mS[0;1;37;47m [0;1;31;47mS[0;5;37;47m8[0;5;1;37;43m8[0;5;1;37;45m8[0;5;37;43m8[0;1;35;47mS[0;1;33;47m%[0;5;37;41m8[0;5;37;47m8[0;1;35;47mS[0;5;37;43m8[0;5;1;35;47m8[0;1;37;47m [0;5;37;43m8[0;5;1;37;45m8[0;5;37;43m8[0;1;37;47m [0;1;35;47mS[0;5;37;43m8[0;5;37;45m8[0;5;1;37;43m8[0;5;37;45m8[0;5;1;37;43m8[0;5;1;31;45m8[0;5;37;47m8[0;1;37;47m [0;1;33;47mX[0;5;37;45m8[0;5;1;37;43m8[0;5;1;31;45m8[0;5;37;47m8[0;5;37;43m8[0;1;37;47m. [0;1;31;47mX[0;5;31;40m@[0;5;30;40m88X[0;5;33;40m%[0;5;30;40m8@8@[0;5;35;40m [0;5;37;47m%     .   .    .   .[0m
[0;5;37;47m  .    .      .   .    [0;1;30;47mS[0;1;30;40m8[0;5;33;40m%[0;5;34;40mS[0;5;30;40m8[0;5;33;40m.@[0;1;30;47m@[0;5;37;47m@8[0;5;1;33;41m8[0;1;37;47m [0;5;37;47m888[0;5;1;33;47m8[0;5;1;35;47m8[0;5;37;43m8[0;5;37;45m8[0;1;33;47mX%[0;5;37;47m8[0;5;37;45m8[0;5;37;43m8[0;5;1;37;45m8[0;5;37;43m8[0;1;35;47mS[0;1;37;47m [0;5;1;37;43m8[0;5;1;31;45m8[0;5;37;47m8[0;5;37;43m8[0;5;37;45m8[0;5;37;43m8[0;5;1;37;45m8[0;5;37;43m8[0;1;37;47m [0;5;37;45m8[0;5;37;43m8[0;1;31;47m@[0;5;37;47m8[0;1;33;47mS[0;5;37;47m88888[0;33;47mX[0;5;33;40mSS[0;5;30;40m8@SSS[0;1;30;40m8[0;5;37;40m@[0;5;37;47m .  .      .        [0m
[0;5;37;47m    .     . .   .   .  ;[0;5;37;40m8[0;5;30;40m8[0;5;31;40mX[0;5;30;40m@[0;5;33;40m8[0;1;30;47m8[0;1;37;47m [0;5;37;43m8[0;1;35;47m%[0;1;37;47m [0;5;37;47m8[0;5;1;33;47m8[0;5;37;47m8[0;5;1;33;47m@[0;5;37;47m8[0;5;37;41m8[0;1;37;47m [0;1;31;47m8[0;5;37;47m8[0;5;1;35;41m8[0;5;1;33;47m@[0;5;37;47m8[0;5;37;43m8[0;1;35;47mS[0;1;37;47m [0;5;1;37;43m8[0;5;1;31;45m8[0;5;37;47m8[0;5;37;43m8[0;1;35;47mS[0;1;37;47m [0;5;1;33;47m8[0;5;37;45m8[0;5;37;43m8[0;5;1;37;45m8[0;5;37;43m8[0;5;37;47m88[0;5;37;41m8[0;1;35;47mS[0;1;33;47mS[0;5;37;47m8[0;5;1;33;47mX[0;5;37;47m8[0;5;1;33;47m8[0;1;37;47m  [0;5;35;41mX[0;5;32;40m@[0;1;30;40m8[0;5;31;40mS[0;5;30;40m@X8[0;5;33;40m;[0;5;37;47m@  .    . .   .  . . [0m
[0;5;37;47m  .   .           .   .  [0;1;37;47m:[0;5;32;40mS[0;5;33;40mX[0;5;35;40m;[0;1;37;47m  [0;5;37;47m8[0;5;37;41m8[0;1;35;47m%[0;5;1;33;41m8[0;5;1;37;45m8[0;5;37;43m8[0;5;37;45m8[0;5;37;43m8[0;5;37;47m8[0;5;37;41m8[0;1;37;47m [0;5;1;33;47m8[0;1;37;47m [0;5;37;47m8[0;5;37;41m8[0;5;37;47m8[0;5;37;43m8[0;5;37;45m8[0;5;37;47m8[0;5;37;43m8[0;5;35;41m [0;1;37;47m  [0;5;37;45m8[0;5;37;43m8[0;1;37;47m  [0;1;33;47mS[0;5;37;45m8[0;5;37;43m8[0;5;1;35;47m8[0;5;37;43m8[0;5;37;41m8[0;1;35;47mX[0;5;37;43m8[0;5;1;35;47m8[0;5;1;37;43m8[0;5;37;45m8[0;5;1;37;43m8[0;1;37;47m  [0;5;35;40m%[0;5;33;40m8[0;1;30;40m8[0;5;30;40mX8[0;5;36;40m [0;5;37;47m@      .        .     [0m
[0;5;37;47m    .   . .  . .         .[0;1;37;47mX[0;5;30;40m8[0;1;30;47m@[0;1;37;47m [0;5;1;31;43m8[0;5;37;45m8[0;1;33;47m8[0;1;37;47m [0;5;37;47m8[0;5;37;41m8[0;1;37;47m [0;5;37;47m8[0;5;1;35;41m8[0;1;33;47m8[0;5;35;41mX[0;1;37;47m [0;1;35;47m%[0;5;37;43m8[0;5;37;45m8[0;5;1;37;43m8[0;5;37;45m8[0;5;37;47m8[0;5;1;31;43m8[0;5;37;45m8[0;1;37;47m [0;1;30;45m8[0;5;37;41m8[0;5;37;47m8[0;5;37;43m8[0;5;37;45m8[0;5;1;37;43m8[0;5;37;45m8[0;5;1;37;43m8[0;1;35;47mS[0;5;37;43m8[0;5;37;45m8[0;1;37;47m [0;1;33;47mX[0;5;35;41m [0;1;37;47mt  [0;5;37;43m8[0;5;37;45m8[0;5;1;33;47m8[0;1;35;47mX[0;1;31;47m8[0;5;30;40m88[0;1;30;40m8[0;5;33;40mt[0;5;37;47m8   . .    .  .    .  .[0m
[0;5;37;47m  .         .    .  .  .  [0;1;37;47m;[0;5;35;40m%[0;1;33;47m%[0;5;37;47m8[0;1;37;47m [0;5;37;41m8[0;1;37;47m [0;1;35;47mS[0;5;1;31;43m8[0;1;35;47m8[0;5;37;43m8[0;1;35;47mS[0;1;33;47m@[0;31;45m@[0;5;33;40m;[0;1;31;47m@XS[0;1;33;47m@[0;1;35;47mX[0;5;37;43m8[0;5;37;45m8[0;5;37;47m8[0;5;37;43m8[0;1;31;47mX[0;37;43m8[0;1;31;45m8[0;1;33;47m%[0;1;35;47mX[0;5;37;43m8[0;5;37;45m8[0;5;37;43m8[0;5;37;45m8[0;5;37;43m8[0;5;1;37;45m8[0;5;37;43m8[0;1;37;47m [0;1;35;47mX[0;1;31;47mXX[0;1;37;47m [0;5;1;37;45m8[0;5;37;43m8[0;5;37;45m8[0;5;37;43m8[0;1;37;47m  [0;1;30;41m8[0;5;33;40m@[0;5;35;40mt[0;5;37;47m8.        .     .       [0m
[0;5;37;47m     . .  .    .     .   :[0;5;37;40m%[0;1;30;47m8[0;5;37;41m8[0;1;37;47m [0;5;37;47m8[0;5;37;41m8[0;1;37;47m [0;5;37;47m8[0;5;37;41m8[0;1;30;41m8[0;5;35;41mX[0;1;37;47m [0;5;33;41mX[0;1;30;47mt[0;1;37;47m [0;1;31;47m8[0;1;37;47m  [0;5;31;41m;[0;1;30;47m8[0;1;37;47m [0;5;37;43m8[0;5;37;45m8[0;5;37;47m8[0;5;37;41m8[0;1;30;47m8[0;1;37;47m [0;5;33;41mt[0;1;37;47m [0;1;31;47mX[0;1;33;47mX[0;5;37;41m8[0;5;33;41m8[0;35;47m@[0;1;33;47m8[0;1;31;47m8[0;1;37;47m [0;1;33;47mX[0;5;37;41m8[0;35;47m8[0;5;37;43m8[0;1;37;47m [0;5;37;47m8[0;5;1;33;41m8[0;5;37;45m8[0;5;37;43m8[0;1;37;47m [0;1;31;47m8[0;5;35;40m [0;5;37;47m..  .  .  .   .    .  .  [0m
[0;5;37;47m  .          .    .      [0;1;37;47mS[0;5;33;40mt[0;1;30;47m8[0;1;31;47m8S[0;1;37;47m [0;5;37;41m8[0;1;33;47m%[0;5;37;41m8[0;1;30;47m8[0;5;37;47m@[0;1;37;47m%[0;1;30;47m8[0;5;35;40m.[0;5;37;47m8X[0;1;37;47m [0;5;37;41m8[0;1;33;47mS[0;1;30;45m8[0;1;33;47m8[0;5;37;41m8[0;1;35;47mX[0;5;37;43m8[0;1;35;47mS[0;1;31;47m8[0;33;47m@[0;5;37;47mS%[0;1;37;47m [0;1;31;47m8[0;35;47m@[0;1;37;47m [0;5;35;40m.[0;1;31;47m8[0;35;47m8[0;1;31;47m@S[0;1;37;47m [0;5;37;41m8[0;1;31;47m8[0;1;35;47mX[0;5;37;43m8[0;5;37;45m8[0;5;37;47m8[0;5;37;41m8[0;1;37;47m [0;5;37;47m8[0;1;31;47mX[0;5;35;40m.[0;5;37;47m%       .   .   .   .   .[0m
[0;5;37;47m    .  . . .    .   .  . [0;5;37;40m8[0;1;30;47m8[0;1;37;47m [0;5;37;41m8[0;1;31;47mX[0;1;37;47m [0;1;31;47mS@[0;35;47m8[0;5;37;47m8SS8[0;1;37;47m.[0;5;37;47m%%;8[0;1;30;47m8[0;1;31;41m8[0;1;37;47mt[0;5;37;47m%[0;1;37;47m [0;5;37;41m8[0;37;43m8[0;37;45m8[0;33;47m8[0;5;37;47mX%S%[0;1;37;47m [0;1;31;47m8[0;5;35;40mt[0;1;30;47m8[0;5;37;47mX8[0;1;31;47m8[0;37;45m8[0;1;30;43m8[0;1;30;45m8[0;1;33;47mS[0;5;37;45m8[0;5;37;43m8[0;1;35;47mS[0;1;33;47m@[0;5;37;45m8[0;5;37;43m8[0;1;37;47m [0;1;30;45m8[0;1;37;47m;[0;5;37;47m.   .        .   .   .  [0m
[0;5;37;47m  .           .   .   . X[0;5;35;40mt[0;1;33;47mX[0;1;35;47mS[0;1;33;47m@[0;5;35;41mX[0;1;37;47m [0;1;33;47mS[0;5;35;41mX[0;1;37;47m%[0;5;37;47m%%@[0;1;37;47mS[0;1;33;47mS[0;1;37;47m [0;1;33;47mS[0;1;37;47m;[0;5;37;47m8X8@t;S8[0;1;37;47m [0;5;37;47m8@X8[0;1;37;47mt%%t[0;5;37;47m8X%;X8[0;5;33;41mS[0;1;37;47m [0;5;37;47m8[0;1;33;47mX[0;5;37;41m8[0;1;37;47m  [0;5;37;47m8[0;5;37;41m8[0;33;47m8[0;5;35;40m;[0;5;37;47m;    .  . .    .        [0m
[0;5;37;47m    . .  .  .       .   [0;1;30;47m;[0;5;33;40m.[0;1;37;47m [0;1;31;47m@[0;1;37;47m [0;33;47mX[0;5;35;41m;[0;1;37;47m [0;1;30;47m8[0;5;37;47m8[0;1;33;47mS[0;33;47m88[0;5;33;40m [0;1;30;43m8[0;1;30;47m8[0;1;30;43m8[0;5;37;40mX[0;33;47m8[0;1;30;47m8X[0;5;37;47m@tt%SS8[0;33;47m8[0;1;30;43m888[0;5;33;40m@[0;1;30;43m8[0;5;33;40m8.[0;33;47m8[0;1;30;47m8[0;1;37;47m.[0;5;37;47m@8[0;1;30;47m8[0;1;33;47m@[0;1;35;47m@[0;1;33;47mS[0;1;35;47mX[0;5;37;43m8[0;5;37;45m8[0;5;37;43m8[0;5;37;47m8[0;5;37;41m8[0;5;31;40m8[0;1;30;47m:[0;5;37;47m .         .     . .  .[0m
[0;5;37;47m  .       .   . .      .[0;5;33;40m [0;1;30;47m8[0;1;37;47m  [0;5;37;41m8[0;1;37;47m [0;1;30;47m8[0;5;35;41mX[0;1;30;47m8[0;33;47mX[0;5;37;47mSXX;t%t%S%;tt%t%S@SSt%%S%%@@8X[0;1;33;47mX[0;5;35;41mS[0;1;37;47m.[0;1;33;47mS[0;5;37;41m8[0;1;37;47m [0;5;37;47m8[0;5;1;31;43m8[0;5;1;37;45m8[0;1;37;47m [0;1;31;47mX[0;5;35;40mX[0;5;33;40m%[0;5;37;47mt   . .  .   .  .      [0m
[0;5;37;47m     . .          .  . [0;1;37;47m8[0;5;33;40mt[0;1;37;47m [0;1;33;47m%[0;5;37;47m8[0;1;31;47mSX[0;1;37;47m [0;33;47m8[0;5;35;41m8[0;5;33;40m [0;5;37;47m888888%t%tt%[0;5;1;33;47m@[0;5;37;47mX%[0;5;1;33;47m@[0;5;37;47mXtt%%tS88888[0;5;1;33;47m8[0;5;37;47m8[0;1;30;47m8[0;1;33;47mS[0;1;35;47m@[0;5;37;41m8[0;1;37;47m  [0;5;37;45m8[0;5;37;47m8[0;5;37;43m8[0;1;35;47mS[0;1;31;47m8[0;5;33;40m;[0;5;35;40m8[0;1;30;47m;[0;5;37;47m..     .      .   . . [0m
[0;5;37;47m  .      . . .  .   . S[0;5;35;40mt%[0;1;37;47m [0;5;1;35;41m8[0;5;37;47m8[0;1;33;47m%[0;1;37;47m [0;1;31;47m@[0;1;30;47m88[0;1;37;47m [0;5;37;47m8[0;5;1;33;47m8[0;5;37;47m8[0;5;37;43m8[0;5;37;47m88[0;5;1;33;47m8[0;5;37;47m8SXSSS%%S%S[0;5;1;33;47m@[0;5;37;47m8%%8[0;5;1;37;43m8[0;5;37;47m8[0;5;37;43m8[0;5;37;47m888[0;5;37;41m8[0;1;30;45m8[0;1;31;47m8[0;33;47m8[0;1;37;47m  [0;5;1;37;43m8[0;5;37;41m8[0;5;37;47m8[0;1;35;47mX[0;5;37;43m8[0;1;35;47m@[0;1;31;43m8[0;5;37;40mS[0;5;31;40mX[0;1;37;47m8[0;5;37;47m    .    . .         [0m
[0;5;37;47m    .  .          .   [0;1;30;47m:[0;5;31;40m8[0;1;30;43m8[0;5;37;47m8[0;5;37;43m8[0;1;37;47m [0;5;1;37;45m8[0;5;37;43m8[0;5;37;47m8[0;5;35;41m [0;1;37;47m.[0;5;37;47m8[0;5;1;33;47m8[0;5;1;37;45m8[0;5;1;33;47m8[0;5;1;35;47m8[0;5;1;33;47m8[0;5;37;47m888@[0;5;1;33;47m8[0;5;33;41m:[0;33;47m@[0;1;33;47m8[0;1;31;47m@[0;1;33;47m@[0;1;31;47m@8[0;1;31;43m8[0;1;37;47m [0;5;37;47mXtX[0;5;1;33;47m8[0;5;37;47m88[0;5;1;35;47m8[0;5;1;37;43m8[0;5;37;47m8[0;1;37;47m [0;5;33;41m.[0;1;30;47mX[0;33;47mX[0;1;37;47m [0;5;37;47m8[0;5;1;35;41m8[0;5;37;47m8[0;1;37;47m [0;5;1;31;43m8[0;5;37;47m8[0;1;35;47mX[0;5;33;41m:[0;1;30;47m@[0;35;47m8[0;5;33;40m%[0;5;35;40m [0;5;37;47m  .    .      . .  . [0m
[0;5;37;47m  .      .  . . .    ;[0;5;33;40m [0;5;35;40m%[0;5;35;41mX[0;1;37;47m [0;5;37;47m8[0;5;1;33;41m8[0;5;37;47m8[0;5;37;45m8[0;1;33;47mS[0;1;37;47m [0;5;33;41mt[0;5;37;47m88[0;5;1;37;43m8[0;5;37;47m88[0;1;37;47m [0;5;1;33;47m8[0;5;1;35;47m8[0;5;1;33;47m8[0;5;37;47m8S:[0;1;37;47m  [0;1;31;47mX[0;1;30;47m8[0;1;33;47mS[0;1;37;47m [0;5;37;47m8X%t888[0;5;1;37;43m8[0;5;1;35;47m8[0;5;37;47m8[0;5;1;37;43m8[0;5;37;41m8[0;1;30;47m@[0;1;37;47m  [0;1;31;47mS[0;5;1;33;47m8[0;1;37;47m [0;5;37;43m8[0;5;1;37;45m8[0;1;37;47m [0;1;33;47m%[0;1;37;47m [0;1;30;47m8[0;5;35;41mX[0;1;30;47m8[0;35;47m8[0;5;31;40m@[0;1;37;47mt[0;5;37;47m    .   .  .        [0m
[0;5;37;47m    . .            . [0;1;37;47mX[0;5;31;40m@[0;1;30;47m8[0;5;33;40m;[0;1;31;47mS[0;1;37;47m [0;5;37;47m8[0;5;37;41m8[0;5;37;47m8[0;1;33;47mS[0;1;37;47m  [0;5;37;41m8[0;1;31;47m8[0;35;47m8[0;5;37;41m8[0;1;37;47m [0;5;37;47m88[0;5;1;33;47m@[0;5;37;47m8@ttSXtX@S%%%[0;5;1;33;47mX[0;5;37;47m8888[0;5;1;31;43m8[0;1;35;47m@[0;5;37;41m8[0;1;37;47m  [0;5;37;47m8[0;5;1;33;41m8[0;5;37;47m8[0;5;1;31;45m8[0;5;37;47m8[0;1;31;47m%[0;5;1;33;47m8[0;5;37;45m8[0;5;37;43m8[0;5;37;45m8[0;1;31;43m8[0;1;30;47m8[0;1;31;47m8[0;33;47m8[0;35;47m8[0;5;33;40m;[0;5;37;47m; .          .  . . [0m
[0;5;37;47m  .     .  .  .  .   [0;1;30;47m [0;5;31;40m@[0;1;30;47m8[0;5;35;41mX[0;1;30;47m8[0;1;37;47m  [0;5;1;33;47m8[0;5;1;31;45m8[0;5;37;47m8[0;1;33;47mS[0;5;37;47m8[0;1;37;47m   [0;5;33;41m;[0;1;30;41mX.[0;35;41m@[0;1;30;47m8[0;1;37;47m [0;5;37;47m888%tttt%%%@88[0;5;37;41m8[0;5;33;41mt[0;5;35;40m%[0;1;30;41mX[0;5;33;40m;[0;1;37;47m [0;5;37;47m8[0;5;37;41m8[0;5;37;47m88[0;1;31;47mS[0;5;1;33;47m8[0;1;35;47mS[0;5;37;43m8[0;5;37;45m8[0;5;37;43m8[0;5;1;37;45m8[0;1;31;43m8[0;1;30;47m8[0;37;45m8[0;1;31;47m8[0;1;30;45m8[0;1;33;47m@[0;5;35;40m8[0;5;37;47m@.    .  . .        [0m
[0;5;37;47m     .    .        . [0;1;30;47m.[0;5;35;40m%[0;1;30;47m8[0;33;47m8[0;5;31;41mS[0;1;35;47mS[0;5;37;43m8[0;5;37;45m8[0;5;1;37;43m8[0;1;35;47mS[0;5;37;43m8[0;5;37;45m8[0;5;37;43m8[0;5;1;37;45m8[0;5;37;43m8[0;1;37;47mS[0;1;30;47m8[0;5;33;40m%[0;5;35;40m%[0;5;33;41mX[0;1;30;45m8[0;1;31;41m8[0;5;33;40m8[0;1;30;41mX@[0;1;30;43m8[0;33;47m8[0;1;33;47m@[0;1;31;47mX[0;1;33;47mX@[0;1;31;47m8[0;31;43m8[0;1;30;41m@@[0;5;33;40m.[0;5;37;40mt[0;5;35;40m@[0;5;33;40m%[0;1;37;47m   [0;5;37;47m8[0;5;1;33;41m8[0;5;37;47m8[0;1;35;47mX[0;5;37;43m8[0;5;37;45m8[0;5;37;47m8[0;5;37;43m8[0;5;37;45m8[0;5;37;43m8[0;1;30;45m8[0;1;31;43m8[0;5;31;40m8[0;5;33;40m [0;1;31;47mX[0;35;47mX[0;5;33;40mX[0;5;37;47m%   .   .     . .  .[0m
[0;5;37;47m  .    .    . . .    8[0;5;33;40mS[0;35;47m8[0;1;30;45m8[0;1;30;43m8[0;5;35;41m8[0;1;30;47m8[0;1;33;47mS[0;1;37;47m  [0;5;1;37;45m8[0;5;37;43m8[0;1;35;47mS[0;5;37;43m8[0;5;37;45m8[0;1;37;47m   [0;1;30;43m8[0;5;35;40m8[0;5;33;40m8[0;5;37;40m8[0;1;30;47mt.[0;1;37;47m:[0;1;30;47mS[0;5;35;40m.[0;1;37;47m   [0;1;31;47mX[0;1;30;47m8;[0;1;37;47m:[0;1;30;47m:S[0;5;35;40m.[0;5;31;40m8[0;1;37;47m  [0;5;1;37;43m8[0;5;1;31;45m8[0;5;37;47m8[0;1;37;47m [0;5;37;41m8[0;5;37;47m8[0;1;35;47mS[0;5;37;43m8[0;5;37;45m8[0;5;37;43m8[0;5;37;41m8[0;1;30;45m8[0;33;47m8[0;5;35;40m8[0;5;31;40mX[0;5;35;40m:[0;1;33;47mX[0;1;30;45m8[0;1;37;47m%[0;5;37;47m .         .        [0m
[0;5;37;47m    .    .        . ..[0;1;37;47m [0;5;33;40m@[0;1;30;47m8[0;1;30;41m8[0;5;33;40m%[0;35;41m8[0;5;35;41m@[0;1;33;47mSSS[0;5;37;45m8[0;5;1;37;43m8[0;5;37;45m8[0;5;1;37;43m8[0;1;37;47m   [0;5;37;41m8[0;5;31;40m8[0;5;30;40m@[0;1;37;47m.::.S:[0;5;35;40m;[0;33;47m8[0;1;31;45m8[0;1;30;47m@[0;1;37;47m %t;%[0;5;35;40m [0;5;37;40mt[0;1;37;47m [0;1;35;47mS[0;5;37;47m8[0;5;37;43m8[0;5;37;45m8[0;5;1;37;43m8[0;1;35;47m@[0;5;1;33;41m8[0;1;37;47m [0;5;37;47m8[0;5;1;33;41m8[0;35;47m8[0;1;30;45m8[0;1;31;43m8[0;5;35;40m8[0;1;30;47m.[0;5;33;40m [0;5;35;40m X[0;1;37;47m:[0;5;37;47m   .  .  .    .  . . [0m
[0;5;37;47m  .   .    .  .       :[0;1;37;47mt[0;5;37;40mt[0;5;31;40m@[0;5;37;40mX[0;1;30;47mt[0;5;33;40m [0;31;45m8[0;5;35;41mX[0;33;47m@[0;1;31;47m@[0;1;37;47m [0;1;33;47mX[0;5;37;45m8[0;5;1;31;43m8[0;5;1;37;45m8[0;5;37;43m8[0;1;37;47m [0;1;30;41m8[0;5;33;40mX[0;5;37;40m@[0;1;37;47m;:.[0;1;30;47m:[0;5;37;40m8[0;5;31;40m@[0;1;30;43m8[0;33;47m8[0;5;33;40m%[0;1;30;47mS[0;1;37;47m::..[0;5;35;40m%[0;33;47mX[0;1;37;47m [0;5;1;31;43m8[0;5;37;45m8[0;1;33;47m@[0;5;37;41m8[0;1;31;47m8[0;1;37;47m  [0;5;37;41m8[0;1;31;47m8[0;1;30;45m8[0;1;30;43m8[0;1;30;47m8:[0;5;37;47m8[0;1;37;47m:[0;5;31;40mX[0;1;30;47m8[0;1;37;47m%[0;5;37;47m.    .     .    .     [0m
[0;5;37;47m    .   .    .  .  .    .X[0;1;37;47m8[0;5;37;47m.   X8[0;1;37;47m [0;5;33;41m@[0;5;35;40mt[0;5;31;40mX[0;1;30;41mS[0;35;41m8[0;5;35;40m%[0;5;31;40m8[0;5;33;40mX[0;5;34;40m@[0;5;37;40mX@[0;5;36;40m.[0;5;35;40mt8[0;5;31;40m@[0;5;33;40mS[0;5;31;40mX8[0;5;35;40mX[0;5;36;40m%[0;5;35;40m.[0;5;37;40m@[0;5;36;40m.[0;5;30;40m8[0;5;35;40m.[0;5;35;41m%[0;5;35;40m [0;33;41m8[0;31;45m@[0;5;33;40m%[0;1;30;41m8[0;5;35;40m [0;1;37;47m [0;5;37;47m88X ...8X:   .    .     .     .  [0m
[0;5;37;47m  .       .       .   .   .     ;8[0;5;35;40mX[0;5;30;40m8[0;5;31;40mS[0;5;30;40m@S[0;31;40mX[0;5;32;40m@[0;5;33;40mX[0;5;37;40m8[0;5;37;47m%S[0;1;30;47m@[0;5;30;40m@[0;5;35;40m.[0;1;30;45m8[0;5;33;40m@[0;5;31;40m@[0;5;35;40m;[0;5;31;40m8S[0;1;37;47m@[0;5;37;47m@@[0;5;35;40m.[0;5;33;40m%[0;5;30;40m8[0;5;31;40m8[0;5;30;40m8[0;1;30;40m8[0;5;30;40m8[0;30;41m8[0;5;37;40mX[0;5;37;47m;;.    . .  .   .   .  .   . .   .[0m
[0;5;37;47m     . .    .  .                .@[0;1;30;47m@[0;5;33;40m ;[0;5;30;40m@@8[0;1;30;40m8[0;5;33;40mtX. %%[0;1;30;43m8[0;5;33;40mX;SX%[0;5;31;40mX[0;5;33;40m [0;1;30;47m@[0;5;37;40m8[0;5;33;40mS%[0;1;30;40m@8[0;5;30;40m888[0;5;35;40m%[0;5;33;40m [0;5;37;47m;  .    .     .   .      .        [0m
[0;5;37;47m  .     .  .    .  .  . .  .         :%St%8[0;1;37;47m8S.  [0;1;30;47mS%%S%.  [0;1;37;47m.t%  ;X[0;5;37;47m@:     . .   . .       .  .    .  .  [0m
[0;5;37;47m    .     .   .               .           .  .:.    .       .       .     .      . .       .    .  .[0m

    )" << endl;
    std::cout << "Press enter to return...";
    std::cin.ignore(1000, '\n');
    std::cin.clear();    
}

void showHighScore()
{
    bool stop = false;
    do
    {
        system("cls");
        string str1;
        int game_mode;
        std::cout << "Choose a level to see High-Score:\n";
        std::cout << R"(
            
 _______             _______                           
(_______)           (_______)                          
 _______    _____    _____   _____  ___ _   _          
|  ___  |  (_____)  |  ___) (____ |/___) | | |         
| |   | |           | |_____/ ___ |___ | |_| |         
|_|   |_|           |_______)_____(___/ \__  |         
                                       (____/          
 ______              _______           _ _             
(____  \            (_______)         | (_)            
 ____)  )   _____    _  _  _ _____  __| |_ _   _ ____  
|  __  (   (_____)  | ||_|| | ___ |/ _  | | | | |    \ 
| |__)  )           | |   | | ____( (_| | | |_| | | | |
|______/            |_|   |_|_____)\____|_|____/|_|_|_|
                                                       
 _______             _     _                _          
(_______)           (_)   (_)              | |         
 _          _____    _______ _____  ____ __| |         
| |        (_____)  |  ___  (____ |/ ___) _  |         
| |_____            | |   | / ___ | |  ( (_| |         
 \______)           |_|   |_\_____|_|   \____|         
                                                       
 _______             _______       _                   
(_______)           (_______)     (_)  _               
 _    _     _____    _    _  _   _ _ _| |_             
| |  | |   (_____)  | |  | || | | | (_   _)            
| |__| |            | |__| || |_| | | | |_             
 \______)            \______)____/|_|  \__)            
                                                       
                                    
    )";
        
        do
        {
            std::cout << "Enter A or B or C or Q: ";
            std::cin >> str1;     
        } while ((str1[0] != 'A' && str1[0] != 'B' && str1[0] != 'C' && str1[0] != 'Q') || str1.size() > 1);

        std::cin.clear();
        std::cin.get();

        switch (str1[0])
        {
        case 'A':
            game_mode = 0;
            break;    
        case 'B':
            game_mode = 1;
            break;
        case 'C':
            game_mode = 2;
            break;
        case 'Q':
            game_mode = 4;
            stop = true;
            break;
        }

        if (game_mode != 4)
        {
            int hi = receive_highscore(game_mode);
            manage_high_score(0, hi, game_mode);
        }
    } while(!stop);

   return;  
}

